<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="RegressionTest0" tests="248" skipped="0" failures="4" errors="0" timestamp="2022-05-25T12:45:26" hostname="grtx" time="0.028">
  <properties/>
  <testcase name="test001" classname="RegressionTest0" time="0.002"/>
  <testcase name="test002" classname="RegressionTest0" time="0.0"/>
  <testcase name="test003" classname="RegressionTest0" time="0.0"/>
  <testcase name="test004" classname="RegressionTest0" time="0.0"/>
  <testcase name="test005" classname="RegressionTest0" time="0.0"/>
  <testcase name="test006" classname="RegressionTest0" time="0.001"/>
  <testcase name="test007" classname="RegressionTest0" time="0.0"/>
  <testcase name="test008" classname="RegressionTest0" time="0.0"/>
  <testcase name="test009" classname="RegressionTest0" time="0.0"/>
  <testcase name="test010" classname="RegressionTest0" time="0.0"/>
  <testcase name="test011" classname="RegressionTest0" time="0.0"/>
  <testcase name="test012" classname="RegressionTest0" time="0.0"/>
  <testcase name="test013" classname="RegressionTest0" time="0.0"/>
  <testcase name="test014" classname="RegressionTest0" time="0.0"/>
  <testcase name="test015" classname="RegressionTest0" time="0.0"/>
  <testcase name="test016" classname="RegressionTest0" time="0.0"/>
  <testcase name="test017" classname="RegressionTest0" time="0.0"/>
  <testcase name="test018" classname="RegressionTest0" time="0.0"/>
  <testcase name="test019" classname="RegressionTest0" time="0.0"/>
  <testcase name="test020" classname="RegressionTest0" time="0.0"/>
  <testcase name="test021" classname="RegressionTest0" time="0.0"/>
  <testcase name="test022" classname="RegressionTest0" time="0.0"/>
  <testcase name="test023" classname="RegressionTest0" time="0.0"/>
  <testcase name="test024" classname="RegressionTest0" time="0.0"/>
  <testcase name="test025" classname="RegressionTest0" time="0.0"/>
  <testcase name="test026" classname="RegressionTest0" time="0.0"/>
  <testcase name="test027" classname="RegressionTest0" time="0.0"/>
  <testcase name="test028" classname="RegressionTest0" time="0.0"/>
  <testcase name="test029" classname="RegressionTest0" time="0.0"/>
  <testcase name="test030" classname="RegressionTest0" time="0.0"/>
  <testcase name="test031" classname="RegressionTest0" time="0.0"/>
  <testcase name="test032" classname="RegressionTest0" time="0.0"/>
  <testcase name="test033" classname="RegressionTest0" time="0.0"/>
  <testcase name="test034" classname="RegressionTest0" time="0.0"/>
  <testcase name="test035" classname="RegressionTest0" time="0.0"/>
  <testcase name="test036" classname="RegressionTest0" time="0.0"/>
  <testcase name="test037" classname="RegressionTest0" time="0.0"/>
  <testcase name="test038" classname="RegressionTest0" time="0.0"/>
  <testcase name="test039" classname="RegressionTest0" time="0.0"/>
  <testcase name="test040" classname="RegressionTest0" time="0.0"/>
  <testcase name="test041" classname="RegressionTest0" time="0.0"/>
  <testcase name="test042" classname="RegressionTest0" time="0.0"/>
  <testcase name="test043" classname="RegressionTest0" time="0.0"/>
  <testcase name="test044" classname="RegressionTest0" time="0.0"/>
  <testcase name="test045" classname="RegressionTest0" time="0.0"/>
  <testcase name="test046" classname="RegressionTest0" time="0.0"/>
  <testcase name="test047" classname="RegressionTest0" time="0.0"/>
  <testcase name="test048" classname="RegressionTest0" time="0.0"/>
  <testcase name="test049" classname="RegressionTest0" time="0.0"/>
  <testcase name="test050" classname="RegressionTest0" time="0.0"/>
  <testcase name="test051" classname="RegressionTest0" time="0.001"/>
  <testcase name="test052" classname="RegressionTest0" time="0.0"/>
  <testcase name="test053" classname="RegressionTest0" time="0.0"/>
  <testcase name="test054" classname="RegressionTest0" time="0.0"/>
  <testcase name="test055" classname="RegressionTest0" time="0.0"/>
  <testcase name="test056" classname="RegressionTest0" time="0.0"/>
  <testcase name="test057" classname="RegressionTest0" time="0.0"/>
  <testcase name="test058" classname="RegressionTest0" time="0.0"/>
  <testcase name="test059" classname="RegressionTest0" time="0.0"/>
  <testcase name="test060" classname="RegressionTest0" time="0.0"/>
  <testcase name="test061" classname="RegressionTest0" time="0.0"/>
  <testcase name="test062" classname="RegressionTest0" time="0.0"/>
  <testcase name="test063" classname="RegressionTest0" time="0.0"/>
  <testcase name="test064" classname="RegressionTest0" time="0.0"/>
  <testcase name="test065" classname="RegressionTest0" time="0.0"/>
  <testcase name="test066" classname="RegressionTest0" time="0.0"/>
  <testcase name="test067" classname="RegressionTest0" time="0.0"/>
  <testcase name="test068" classname="RegressionTest0" time="0.0"/>
  <testcase name="test069" classname="RegressionTest0" time="0.0"/>
  <testcase name="test070" classname="RegressionTest0" time="0.0"/>
  <testcase name="test071" classname="RegressionTest0" time="0.0"/>
  <testcase name="test072" classname="RegressionTest0" time="0.0"/>
  <testcase name="test073" classname="RegressionTest0" time="0.0"/>
  <testcase name="test074" classname="RegressionTest0" time="0.0"/>
  <testcase name="test075" classname="RegressionTest0" time="0.0"/>
  <testcase name="test076" classname="RegressionTest0" time="0.002">
    <failure message="java.lang.AssertionError: 'null' != '' expected:&lt;null&gt; but was:&lt;&gt;" type="java.lang.AssertionError">java.lang.AssertionError: 'null' != '' expected:&lt;null&gt; but was:&lt;&gt;
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at RegressionTest0.test076(RegressionTest0.java:1146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="test077" classname="RegressionTest0" time="0.0"/>
  <testcase name="test078" classname="RegressionTest0" time="0.0"/>
  <testcase name="test079" classname="RegressionTest0" time="0.0"/>
  <testcase name="test080" classname="RegressionTest0" time="0.0"/>
  <testcase name="test081" classname="RegressionTest0" time="0.0"/>
  <testcase name="test082" classname="RegressionTest0" time="0.0"/>
  <testcase name="test083" classname="RegressionTest0" time="0.0"/>
  <testcase name="test084" classname="RegressionTest0" time="0.0"/>
  <testcase name="test085" classname="RegressionTest0" time="0.0"/>
  <testcase name="test086" classname="RegressionTest0" time="0.0">
    <failure message="java.lang.AssertionError: 'null' != 'hi!' expected:&lt;null&gt; but was:&lt;hi!&gt;" type="java.lang.AssertionError">java.lang.AssertionError: 'null' != 'hi!' expected:&lt;null&gt; but was:&lt;hi!&gt;
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at RegressionTest0.test086(RegressionTest0.java:1301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="test087" classname="RegressionTest0" time="0.0"/>
  <testcase name="test088" classname="RegressionTest0" time="0.0"/>
  <testcase name="test089" classname="RegressionTest0" time="0.0"/>
  <testcase name="test090" classname="RegressionTest0" time="0.0"/>
  <testcase name="test091" classname="RegressionTest0" time="0.0"/>
  <testcase name="test092" classname="RegressionTest0" time="0.0"/>
  <testcase name="test093" classname="RegressionTest0" time="0.0"/>
  <testcase name="test094" classname="RegressionTest0" time="0.0"/>
  <testcase name="test095" classname="RegressionTest0" time="0.0"/>
  <testcase name="test096" classname="RegressionTest0" time="0.0"/>
  <testcase name="test097" classname="RegressionTest0" time="0.0"/>
  <testcase name="test098" classname="RegressionTest0" time="0.0"/>
  <testcase name="test099" classname="RegressionTest0" time="0.0"/>
  <testcase name="test100" classname="RegressionTest0" time="0.0"/>
  <testcase name="test101" classname="RegressionTest0" time="0.0"/>
  <testcase name="test102" classname="RegressionTest0" time="0.0"/>
  <testcase name="test103" classname="RegressionTest0" time="0.0"/>
  <testcase name="test104" classname="RegressionTest0" time="0.0"/>
  <testcase name="test105" classname="RegressionTest0" time="0.0"/>
  <testcase name="test106" classname="RegressionTest0" time="0.0"/>
  <testcase name="test107" classname="RegressionTest0" time="0.001"/>
  <testcase name="test108" classname="RegressionTest0" time="0.0"/>
  <testcase name="test109" classname="RegressionTest0" time="0.0"/>
  <testcase name="test110" classname="RegressionTest0" time="0.0"/>
  <testcase name="test111" classname="RegressionTest0" time="0.0"/>
  <testcase name="test112" classname="RegressionTest0" time="0.0"/>
  <testcase name="test113" classname="RegressionTest0" time="0.0"/>
  <testcase name="test114" classname="RegressionTest0" time="0.0"/>
  <testcase name="test115" classname="RegressionTest0" time="0.0"/>
  <testcase name="test116" classname="RegressionTest0" time="0.0"/>
  <testcase name="test117" classname="RegressionTest0" time="0.0"/>
  <testcase name="test118" classname="RegressionTest0" time="0.0"/>
  <testcase name="test119" classname="RegressionTest0" time="0.0"/>
  <testcase name="test120" classname="RegressionTest0" time="0.0"/>
  <testcase name="test121" classname="RegressionTest0" time="0.0"/>
  <testcase name="test122" classname="RegressionTest0" time="0.0"/>
  <testcase name="test123" classname="RegressionTest0" time="0.0"/>
  <testcase name="test124" classname="RegressionTest0" time="0.0"/>
  <testcase name="test001" classname="RegressionTest0" time="0.0"/>
  <testcase name="test002" classname="RegressionTest0" time="0.0"/>
  <testcase name="test003" classname="RegressionTest0" time="0.0"/>
  <testcase name="test004" classname="RegressionTest0" time="0.0"/>
  <testcase name="test005" classname="RegressionTest0" time="0.0"/>
  <testcase name="test006" classname="RegressionTest0" time="0.0"/>
  <testcase name="test007" classname="RegressionTest0" time="0.0"/>
  <testcase name="test008" classname="RegressionTest0" time="0.0"/>
  <testcase name="test009" classname="RegressionTest0" time="0.0"/>
  <testcase name="test010" classname="RegressionTest0" time="0.0"/>
  <testcase name="test011" classname="RegressionTest0" time="0.0"/>
  <testcase name="test012" classname="RegressionTest0" time="0.0"/>
  <testcase name="test013" classname="RegressionTest0" time="0.0"/>
  <testcase name="test014" classname="RegressionTest0" time="0.0"/>
  <testcase name="test015" classname="RegressionTest0" time="0.0"/>
  <testcase name="test016" classname="RegressionTest0" time="0.0"/>
  <testcase name="test017" classname="RegressionTest0" time="0.0"/>
  <testcase name="test018" classname="RegressionTest0" time="0.0"/>
  <testcase name="test019" classname="RegressionTest0" time="0.0"/>
  <testcase name="test020" classname="RegressionTest0" time="0.0"/>
  <testcase name="test021" classname="RegressionTest0" time="0.0"/>
  <testcase name="test022" classname="RegressionTest0" time="0.0"/>
  <testcase name="test023" classname="RegressionTest0" time="0.0"/>
  <testcase name="test024" classname="RegressionTest0" time="0.0"/>
  <testcase name="test025" classname="RegressionTest0" time="0.0"/>
  <testcase name="test026" classname="RegressionTest0" time="0.0"/>
  <testcase name="test027" classname="RegressionTest0" time="0.0"/>
  <testcase name="test028" classname="RegressionTest0" time="0.0"/>
  <testcase name="test029" classname="RegressionTest0" time="0.0"/>
  <testcase name="test030" classname="RegressionTest0" time="0.0"/>
  <testcase name="test031" classname="RegressionTest0" time="0.0"/>
  <testcase name="test032" classname="RegressionTest0" time="0.001"/>
  <testcase name="test033" classname="RegressionTest0" time="0.0"/>
  <testcase name="test034" classname="RegressionTest0" time="0.0"/>
  <testcase name="test035" classname="RegressionTest0" time="0.0"/>
  <testcase name="test036" classname="RegressionTest0" time="0.0"/>
  <testcase name="test037" classname="RegressionTest0" time="0.0"/>
  <testcase name="test038" classname="RegressionTest0" time="0.0"/>
  <testcase name="test039" classname="RegressionTest0" time="0.0"/>
  <testcase name="test040" classname="RegressionTest0" time="0.0"/>
  <testcase name="test041" classname="RegressionTest0" time="0.0"/>
  <testcase name="test042" classname="RegressionTest0" time="0.0"/>
  <testcase name="test043" classname="RegressionTest0" time="0.0"/>
  <testcase name="test044" classname="RegressionTest0" time="0.0"/>
  <testcase name="test045" classname="RegressionTest0" time="0.0"/>
  <testcase name="test046" classname="RegressionTest0" time="0.0"/>
  <testcase name="test047" classname="RegressionTest0" time="0.0"/>
  <testcase name="test048" classname="RegressionTest0" time="0.0"/>
  <testcase name="test049" classname="RegressionTest0" time="0.0"/>
  <testcase name="test050" classname="RegressionTest0" time="0.0"/>
  <testcase name="test051" classname="RegressionTest0" time="0.0"/>
  <testcase name="test052" classname="RegressionTest0" time="0.0"/>
  <testcase name="test053" classname="RegressionTest0" time="0.0"/>
  <testcase name="test054" classname="RegressionTest0" time="0.0"/>
  <testcase name="test055" classname="RegressionTest0" time="0.0"/>
  <testcase name="test056" classname="RegressionTest0" time="0.0"/>
  <testcase name="test057" classname="RegressionTest0" time="0.0"/>
  <testcase name="test058" classname="RegressionTest0" time="0.0"/>
  <testcase name="test059" classname="RegressionTest0" time="0.0"/>
  <testcase name="test060" classname="RegressionTest0" time="0.0"/>
  <testcase name="test061" classname="RegressionTest0" time="0.0"/>
  <testcase name="test062" classname="RegressionTest0" time="0.0"/>
  <testcase name="test063" classname="RegressionTest0" time="0.0"/>
  <testcase name="test064" classname="RegressionTest0" time="0.0"/>
  <testcase name="test065" classname="RegressionTest0" time="0.001"/>
  <testcase name="test066" classname="RegressionTest0" time="0.0"/>
  <testcase name="test067" classname="RegressionTest0" time="0.0"/>
  <testcase name="test068" classname="RegressionTest0" time="0.0"/>
  <testcase name="test069" classname="RegressionTest0" time="0.0"/>
  <testcase name="test070" classname="RegressionTest0" time="0.0"/>
  <testcase name="test071" classname="RegressionTest0" time="0.0"/>
  <testcase name="test072" classname="RegressionTest0" time="0.0"/>
  <testcase name="test073" classname="RegressionTest0" time="0.0"/>
  <testcase name="test074" classname="RegressionTest0" time="0.0"/>
  <testcase name="test075" classname="RegressionTest0" time="0.0"/>
  <testcase name="test076" classname="RegressionTest0" time="0.0">
    <failure message="java.lang.AssertionError: 'null' != '' expected:&lt;null&gt; but was:&lt;&gt;" type="java.lang.AssertionError">java.lang.AssertionError: 'null' != '' expected:&lt;null&gt; but was:&lt;&gt;
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at RegressionTest0.test076(RegressionTest0.java:1146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="test077" classname="RegressionTest0" time="0.0"/>
  <testcase name="test078" classname="RegressionTest0" time="0.0"/>
  <testcase name="test079" classname="RegressionTest0" time="0.0"/>
  <testcase name="test080" classname="RegressionTest0" time="0.0"/>
  <testcase name="test081" classname="RegressionTest0" time="0.0"/>
  <testcase name="test082" classname="RegressionTest0" time="0.0"/>
  <testcase name="test083" classname="RegressionTest0" time="0.0"/>
  <testcase name="test084" classname="RegressionTest0" time="0.0"/>
  <testcase name="test085" classname="RegressionTest0" time="0.0"/>
  <testcase name="test086" classname="RegressionTest0" time="0.0">
    <failure message="java.lang.AssertionError: 'null' != 'hi!' expected:&lt;null&gt; but was:&lt;hi!&gt;" type="java.lang.AssertionError">java.lang.AssertionError: 'null' != 'hi!' expected:&lt;null&gt; but was:&lt;hi!&gt;
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at RegressionTest0.test086(RegressionTest0.java:1301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="test087" classname="RegressionTest0" time="0.0"/>
  <testcase name="test088" classname="RegressionTest0" time="0.0"/>
  <testcase name="test089" classname="RegressionTest0" time="0.0"/>
  <testcase name="test090" classname="RegressionTest0" time="0.0"/>
  <testcase name="test091" classname="RegressionTest0" time="0.0"/>
  <testcase name="test092" classname="RegressionTest0" time="0.0"/>
  <testcase name="test093" classname="RegressionTest0" time="0.0"/>
  <testcase name="test094" classname="RegressionTest0" time="0.0"/>
  <testcase name="test095" classname="RegressionTest0" time="0.0"/>
  <testcase name="test096" classname="RegressionTest0" time="0.0"/>
  <testcase name="test097" classname="RegressionTest0" time="0.0"/>
  <testcase name="test098" classname="RegressionTest0" time="0.0"/>
  <testcase name="test099" classname="RegressionTest0" time="0.0"/>
  <testcase name="test100" classname="RegressionTest0" time="0.0"/>
  <testcase name="test101" classname="RegressionTest0" time="0.0"/>
  <testcase name="test102" classname="RegressionTest0" time="0.0"/>
  <testcase name="test103" classname="RegressionTest0" time="0.0"/>
  <testcase name="test104" classname="RegressionTest0" time="0.0"/>
  <testcase name="test105" classname="RegressionTest0" time="0.0"/>
  <testcase name="test106" classname="RegressionTest0" time="0.0"/>
  <testcase name="test107" classname="RegressionTest0" time="0.0"/>
  <testcase name="test108" classname="RegressionTest0" time="0.0"/>
  <testcase name="test109" classname="RegressionTest0" time="0.0"/>
  <testcase name="test110" classname="RegressionTest0" time="0.0"/>
  <testcase name="test111" classname="RegressionTest0" time="0.0"/>
  <testcase name="test112" classname="RegressionTest0" time="0.0"/>
  <testcase name="test113" classname="RegressionTest0" time="0.0"/>
  <testcase name="test114" classname="RegressionTest0" time="0.0"/>
  <testcase name="test115" classname="RegressionTest0" time="0.0"/>
  <testcase name="test116" classname="RegressionTest0" time="0.0"/>
  <testcase name="test117" classname="RegressionTest0" time="0.0"/>
  <testcase name="test118" classname="RegressionTest0" time="0.0"/>
  <testcase name="test119" classname="RegressionTest0" time="0.0"/>
  <testcase name="test120" classname="RegressionTest0" time="0.0"/>
  <testcase name="test121" classname="RegressionTest0" time="0.0"/>
  <testcase name="test122" classname="RegressionTest0" time="0.0"/>
  <testcase name="test123" classname="RegressionTest0" time="0.0"/>
  <testcase name="test124" classname="RegressionTest0" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
