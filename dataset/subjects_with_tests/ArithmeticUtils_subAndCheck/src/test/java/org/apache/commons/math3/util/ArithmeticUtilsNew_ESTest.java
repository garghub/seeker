/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 14:18:08 GMT 2022
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.util.ArithmeticUtilsNew;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArithmeticUtilsNew_ESTest extends ArithmeticUtilsNew_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck(2200L, 1777L);
      assertEquals(423L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck((-1597L), 1777L);
      assertEquals((-3374L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck((-5450L), (-9223372036854775808L));
      assertEquals(9223372036854770358L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      try { 
        arithmeticUtilsNew0.subAndCheck(0L, (-9223372036854775798L));
       //  fail("Expecting exception: ArithmeticException");
       // Unstable assertion
      } catch(ArithmeticException e) {
         //
         // overflow in addition: 0 + 9,223,372,036,854,775,798
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtilsNew", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck(1L, 0L);
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      try { 
        arithmeticUtilsNew0.subAndCheck((-9223372036854775808L), 7705L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // overflow in addition: -9,223,372,036,854,775,808 + -7,705
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtilsNew", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck((-9223372036854775307L), (-9223372036854775307L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      try { 
        arithmeticUtilsNew0.subAndCheck(1L, (-9223372036854775808L));
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // overflow in addition: 1 + -9,223,372,036,854,775,808
         //
         verifyException("org.apache.commons.math3.util.ArithmeticUtilsNew", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArithmeticUtilsNew arithmeticUtilsNew0 = new ArithmeticUtilsNew();
      long long0 = arithmeticUtilsNew0.subAndCheck(0L, 0L);
      assertEquals(0L, long0);
  }
}
