/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 14:46:45 GMT 2022
 */

package org.apache.commons.math3.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.util.MathUtilsNew;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MathUtilsNew_ESTest extends MathUtilsNew_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt(1907, (-2216));
      assertEquals((-1907), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt(4951, 4951);
      assertEquals(4951, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      try { 
        MathUtilsNew.copySignInt(Integer.MIN_VALUE, 980);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // overflow
         //
         verifyException("org.apache.commons.math3.util.MathUtilsNew", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt((-980), (-980));
      assertEquals((-980), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt(980, 0);
      assertEquals(980, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt(0, (-980));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      int int0 = MathUtilsNew.copySignInt((-980), 0);
      assertEquals(980, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MathUtilsNew mathUtilsNew0 = new MathUtilsNew();
  }
}
