/*
 * This file was automatically generated by EvoSuite
 * Thu May 12 14:26:45 GMT 2022
 */

package examples;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import examples.DoublyLinkedListNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DoublyLinkedListNode_ESTest extends DoublyLinkedListNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DoublyLinkedListNode doublyLinkedListNode0 = new DoublyLinkedListNode();
      DoublyLinkedListNode doublyLinkedListNode1 = new DoublyLinkedListNode();
      doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
      doublyLinkedListNode0.remove();
      assertNotSame(doublyLinkedListNode0, doublyLinkedListNode1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DoublyLinkedListNode doublyLinkedListNode0 = new DoublyLinkedListNode();
      DoublyLinkedListNode doublyLinkedListNode1 = new DoublyLinkedListNode();
      doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
      DoublyLinkedListNode doublyLinkedListNode2 = new DoublyLinkedListNode();
      doublyLinkedListNode0.insertRight(doublyLinkedListNode2);
      doublyLinkedListNode0.remove();
      assertNotSame(doublyLinkedListNode0, doublyLinkedListNode2);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DoublyLinkedListNode doublyLinkedListNode0 = new DoublyLinkedListNode();
      DoublyLinkedListNode doublyLinkedListNode1 = new DoublyLinkedListNode();
      doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
      // Undeclared exception!
      try { 
        doublyLinkedListNode0.insertRight(doublyLinkedListNode1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // parameter is not singleton
         //
         verifyException("examples.DoublyLinkedListNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DoublyLinkedListNode doublyLinkedListNode0 = new DoublyLinkedListNode();
      // Undeclared exception!
      try { 
        doublyLinkedListNode0.insertRight((DoublyLinkedListNode) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // undefined for null parameter
         //
         verifyException("examples.DoublyLinkedListNode", e);
      }
  }
}
