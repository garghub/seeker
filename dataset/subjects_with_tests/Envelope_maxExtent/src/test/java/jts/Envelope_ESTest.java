/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 12 16:05:16 GMT 2022
 */

package jts;

import org.junit.Test;
import static org.junit.Assert.*;
import jts.Envelope;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Envelope_ESTest extends Envelope_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Envelope envelope0 = new Envelope(0.0, 452.0537617099, 1.0, 637.02218799333);
      double double0 = envelope0.maxExtent();
      assertEquals(452.0537617099, envelope0.getWidth(), 0.01);
      assertEquals(636.02218799333, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1782.0), 0.0, (-1.0), 0.0);
      assertEquals(1.0, envelope0.getHeight(), 0.01);
      
      envelope0.init((-1782.0), 0.0, 0.0, (-1782.0));
      assertEquals(1782.0, envelope0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1782.0), 0.0, (-1.0), 0.0);
      double double0 = envelope0.getWidth();
      assertEquals(1.0, envelope0.getHeight(), 0.01);
      assertEquals(1782.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Envelope envelope0 = new Envelope(0.0, 0.0, 0.0, 3132.4378183);
      double double0 = envelope0.getHeight();
      assertEquals(3132.4378183, double0, 0.01);
      assertEquals(0.0, envelope0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291));
      double double0 = envelope0.getHeight();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, envelope0.getWidth(), 0.01);
      assertFalse(envelope0.isEnvelopeNull());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291));
      double double0 = envelope0.getWidth();
      assertEquals(0.0, double0, 0.01);
      assertFalse(envelope0.isEnvelopeNull());
      assertEquals(0.0, envelope0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291));
      boolean boolean0 = envelope0.isEnvelopeNull();
      assertEquals(0.0, envelope0.getHeight(), 0.01);
      assertEquals(0.0, envelope0.maxExtent(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Envelope envelope0 = new Envelope(0.0, 0.0, 0.0, 0.0);
      envelope0.init(1.0, 0.0, 48.5, 48.5);
      assertEquals(1.0, envelope0.maxExtent(), 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291));
      double double0 = envelope0.maxExtent();
      assertFalse(envelope0.isEnvelopeNull());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, envelope0.getWidth(), 0.01);
      assertEquals(0.0, envelope0.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Envelope envelope0 = new Envelope((-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291), (-1492.8563744435291));
      envelope0.init((-1492.8563744435291), 0.0, (-1624.464305859703), (-1492.8563744435291));
      double double0 = envelope0.maxExtent();
      assertEquals(1492.8563744435291, envelope0.getWidth(), 0.01);
      assertEquals(1492.8563744435291, double0, 0.01);
  }
}
