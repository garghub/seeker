import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Class<?> wildcardClass1 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        java.lang.Class<?> wildcardClass9 = intSet5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        java.lang.Class<?> wildcardClass20 = intSet14.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        java.lang.Class<?> wildcardClass9 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        java.lang.Class<?> wildcardClass20 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        java.lang.Class<?> wildcardClass7 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        java.lang.Class<?> wildcardClass18 = intSet12.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        java.lang.Class<?> wildcardClass51 = intSet45.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        java.lang.Class<?> wildcardClass51 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods40.addElementToSet(intSet54, 0);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet76, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods82.addElementToSet(intSet87, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet87, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet87, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods40.addElementToSet(intSet54, 0);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 1);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet76, 0);
        examples.SimpleMethods simpleMethods82 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods82.addElementToSet(intSet87, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet87, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet87, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet87, 0);
        java.lang.Class<?> wildcardClass97 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, 10 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 100);
        java.lang.Class<?> wildcardClass58 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = intSet34.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods42.addElementToSet(intSet47, (int) (short) 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet76, 0);
        simpleMethods42.addElementToSet(intSet76, (int) (short) 1);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods84.addElementToSet(intSet87, (int) 'a');
        simpleMethods42.addElementToSet(intSet87, 10);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet34, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 0);
        java.lang.Class<?> wildcardClass42 = intSet34.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        java.lang.Class<?> wildcardClass31 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods42.addElementToSet(intSet47, (int) (short) 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet67, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet67, (int) (byte) 100);
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods42.addElementToSet(intSet47, (int) (short) 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet76, 0);
        simpleMethods42.addElementToSet(intSet76, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, 10 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 100);
        java.lang.Class<?> wildcardClass58 = intSet54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods42.addElementToSet(intSet47, (int) (short) 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet76, 0);
        simpleMethods42.addElementToSet(intSet76, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet76, (-1));
        java.lang.Class<?> wildcardClass86 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet34, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 0);
        java.lang.Class<?> wildcardClass42 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.lang.Class<?> wildcardClass45 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        java.lang.Class<?> wildcardClass64 = intSet54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods21.addElementToSet(intSet26, (int) (short) 100);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods39.addElementToSet(intSet44, (int) (short) 100);
        simpleMethods30.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods50.addElementToSet(intSet55, (int) (short) 100);
        simpleMethods30.addElementToSet(intSet55, (int) (short) 10);
        simpleMethods21.addElementToSet(intSet55, (int) (short) 0);
        simpleMethods20.addElementToSet(intSet55, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet55, (int) (byte) 100);
        java.lang.Class<?> wildcardClass67 = intSet55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet50, 10);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        simpleMethods0.addElementToSet(intSet23, (int) (short) -1);
        java.lang.Class<?> wildcardClass31 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        simpleMethods31.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet65, 0);
        simpleMethods31.addElementToSet(intSet65, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet65, (int) (short) 0);
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet74, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods80.addElementToSet(intSet85, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet85, (int) (short) 10);
        simpleMethods51.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods54.addElementToSet(intSet59, (int) (short) 100);
        simpleMethods45.addElementToSet(intSet59, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods65.addElementToSet(intSet70, (int) (short) 100);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods74.addElementToSet(intSet79, (int) (short) 100);
        simpleMethods65.addElementToSet(intSet79, 0);
        simpleMethods45.addElementToSet(intSet79, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet79, (int) (byte) 0);
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods42.addElementToSet(intSet47, (int) (short) 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet67, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet67, (int) (byte) 100);
        java.lang.Class<?> wildcardClass75 = intSet67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet23, (int) 'a');
        java.lang.Class<?> wildcardClass29 = intSet23.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet23, (int) 'a');
        java.lang.Class<?> wildcardClass29 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        simpleMethods0.addElementToSet(intSet23, (int) (short) -1);
        java.lang.Class<?> wildcardClass31 = intSet23.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods54.addElementToSet(intSet59, (int) (short) 100);
        simpleMethods45.addElementToSet(intSet59, 0);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods65.addElementToSet(intSet70, (int) (short) 100);
        examples.SimpleMethods simpleMethods74 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods74.addElementToSet(intSet79, (int) (short) 100);
        simpleMethods65.addElementToSet(intSet79, 0);
        simpleMethods45.addElementToSet(intSet79, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet79, (int) (byte) 0);
        java.lang.Class<?> wildcardClass89 = intSet79.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods18.addElementToSet(intSet21, (int) 'a');
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods25.addElementToSet(intSet30, (int) (short) 100);
        simpleMethods18.addElementToSet(intSet30, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods36.addElementToSet(intSet41, (int) (short) 100);
        simpleMethods18.addElementToSet(intSet41, (int) 'a');
        simpleMethods0.addElementToSet(intSet41, (int) '4');
        java.lang.Class<?> wildcardClass49 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods43.addElementToSet(intSet48, (int) (short) 100);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods52.addElementToSet(intSet57, (int) (short) 100);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods61.addElementToSet(intSet66, (int) (short) 100);
        simpleMethods52.addElementToSet(intSet66, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods72.addElementToSet(intSet77, (int) (short) 100);
        simpleMethods52.addElementToSet(intSet77, (int) (short) 10);
        simpleMethods43.addElementToSet(intSet77, (int) (short) 0);
        simpleMethods42.addElementToSet(intSet77, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet77, (int) ' ');
        java.lang.Class<?> wildcardClass89 = intSet77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods64.addElementToSet(intSet67, (int) 'a');
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.lang.Class<?> wildcardClass73 = intSet67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods64.addElementToSet(intSet69, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet69, (int) '#');
        java.lang.Class<?> wildcardClass75 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods43.addElementToSet(intSet48, (int) (short) 100);
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods52.addElementToSet(intSet57, (int) (short) 100);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods61.addElementToSet(intSet66, (int) (short) 100);
        simpleMethods52.addElementToSet(intSet66, 0);
        examples.SimpleMethods simpleMethods72 = new examples.SimpleMethods();
        java.lang.Integer[] intArray76 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet77 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet77, intArray76);
        simpleMethods72.addElementToSet(intSet77, (int) (short) 100);
        simpleMethods52.addElementToSet(intSet77, (int) (short) 10);
        simpleMethods43.addElementToSet(intSet77, (int) (short) 0);
        simpleMethods42.addElementToSet(intSet77, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet77, (int) ' ');
        java.lang.Class<?> wildcardClass89 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods42.addElementToSet(intSet47, (int) (short) 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet76, 0);
        simpleMethods42.addElementToSet(intSet76, (int) (short) 1);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods84.addElementToSet(intSet87, (int) 'a');
        simpleMethods42.addElementToSet(intSet87, 10);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 0);
        java.lang.Class<?> wildcardClass95 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, (int) (byte) 100);
        java.lang.Class<?> wildcardClass34 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet34, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods42.addElementToSet(intSet47, (int) (short) 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet76, 0);
        simpleMethods42.addElementToSet(intSet76, (int) (short) 1);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods84.addElementToSet(intSet87, (int) 'a');
        simpleMethods42.addElementToSet(intSet87, 10);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.lang.Class<?> wildcardClass95 = intSet87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods16.addElementToSet(intSet21, (int) (short) 100);
        simpleMethods7.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods36.addElementToSet(intSet41, (int) (short) 100);
        simpleMethods27.addElementToSet(intSet41, 0);
        simpleMethods7.addElementToSet(intSet41, (int) (short) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        simpleMethods49.addElementToSet(intSet63, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods78.addElementToSet(intSet83, (int) (short) 100);
        simpleMethods69.addElementToSet(intSet83, 0);
        simpleMethods49.addElementToSet(intSet83, (int) (short) 1);
        simpleMethods7.addElementToSet(intSet83, (-1));
        simpleMethods0.addElementToSet(intSet83, (int) '4');
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.lang.Class<?> wildcardClass45 = intSet35.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet7 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet7, intArray6);
        simpleMethods2.addElementToSet(intSet7, (int) (short) 100);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods11.addElementToSet(intSet16, (int) (short) 100);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods11.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        simpleMethods11.addElementToSet(intSet36, (int) (short) 10);
        simpleMethods2.addElementToSet(intSet36, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet36, (int) (byte) 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods46.addElementToSet(intSet51, (int) (short) 100);
        simpleMethods1.addElementToSet(intSet51, 10);
        simpleMethods0.addElementToSet(intSet51, (int) ' ');
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, (int) (short) 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet7 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet7, intArray6);
        simpleMethods2.addElementToSet(intSet7, (int) (short) 100);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods11.addElementToSet(intSet16, (int) (short) 100);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods11.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        simpleMethods11.addElementToSet(intSet36, (int) (short) 10);
        simpleMethods2.addElementToSet(intSet36, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet36, (int) (byte) 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods46.addElementToSet(intSet51, (int) (short) 100);
        simpleMethods1.addElementToSet(intSet51, 10);
        simpleMethods0.addElementToSet(intSet51, (int) ' ');
        java.lang.Class<?> wildcardClass59 = intSet51.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        simpleMethods31.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet65, 0);
        simpleMethods31.addElementToSet(intSet65, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet65, (int) (short) 0);
        java.lang.Class<?> wildcardClass75 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        simpleMethods20.addElementToSet(intSet43, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet43, (int) (byte) 100);
        java.lang.Class<?> wildcardClass53 = intSet43.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods18.addElementToSet(intSet21, (int) 'a');
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods25.addElementToSet(intSet30, (int) (short) 100);
        simpleMethods18.addElementToSet(intSet30, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods36.addElementToSet(intSet41, (int) (short) 100);
        simpleMethods18.addElementToSet(intSet41, (int) 'a');
        simpleMethods0.addElementToSet(intSet41, (int) '4');
        java.lang.Class<?> wildcardClass49 = intSet41.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet50, 10);
        java.lang.Class<?> wildcardClass56 = intSet50.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods16.addElementToSet(intSet21, (int) (short) 100);
        simpleMethods7.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods36.addElementToSet(intSet41, (int) (short) 100);
        simpleMethods27.addElementToSet(intSet41, 0);
        simpleMethods7.addElementToSet(intSet41, (int) (short) 1);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        simpleMethods49.addElementToSet(intSet63, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        examples.SimpleMethods simpleMethods78 = new examples.SimpleMethods();
        java.lang.Integer[] intArray82 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet83 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet83, intArray82);
        simpleMethods78.addElementToSet(intSet83, (int) (short) 100);
        simpleMethods69.addElementToSet(intSet83, 0);
        simpleMethods49.addElementToSet(intSet83, (int) (short) 1);
        simpleMethods7.addElementToSet(intSet83, (-1));
        simpleMethods0.addElementToSet(intSet83, (int) '4');
        java.lang.Class<?> wildcardClass95 = intSet83.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        java.util.HashSet<java.lang.Integer> intSet31 = null;
        simpleMethods0.addElementToSet(intSet31, (int) (byte) 100);
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods34.addElementToSet(intSet39, (int) (short) 100);
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods43.addElementToSet(intSet48, (int) (short) 100);
        simpleMethods34.addElementToSet(intSet48, 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods54.addElementToSet(intSet59, (int) (short) 100);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods63.addElementToSet(intSet68, (int) (short) 100);
        simpleMethods54.addElementToSet(intSet68, 0);
        simpleMethods34.addElementToSet(intSet68, (int) (short) 1);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods76.addElementToSet(intSet79, (int) 'a');
        simpleMethods34.addElementToSet(intSet79, 10);
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { 100, 10 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods34.addElementToSet(intSet88, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet88, (int) ' ');
        java.lang.Class<?> wildcardClass94 = intSet88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet65, 0);
        simpleMethods0.addElementToSet(intSet65, (int) (short) 0);
        java.lang.Class<?> wildcardClass73 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods47.addElementToSet(intSet52, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet52, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods29.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods9.addElementToSet(intSet63, (int) (short) -1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods73.addElementToSet(intSet76, (int) 'a');
        simpleMethods9.addElementToSet(intSet76, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet76, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods40.addElementToSet(intSet54, 0);
        simpleMethods31.addElementToSet(intSet54, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet54, 0);
        java.lang.Class<?> wildcardClass64 = intSet54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods20.addElementToSet(intSet23, (int) 'a');
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet32, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet43, (int) 'a');
        simpleMethods0.addElementToSet(intSet43, 0);
        java.lang.Class<?> wildcardClass51 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods64.addElementToSet(intSet67, (int) 'a');
        simpleMethods0.addElementToSet(intSet67, (int) (short) 0);
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet76, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet76, 10);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods47.addElementToSet(intSet52, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet52, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods29.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods9.addElementToSet(intSet63, (int) (short) -1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods73.addElementToSet(intSet76, (int) 'a');
        simpleMethods9.addElementToSet(intSet76, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet76, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, 0);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods47.addElementToSet(intSet52, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet52, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods29.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods9.addElementToSet(intSet63, (int) (short) -1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods73.addElementToSet(intSet76, (int) 'a');
        simpleMethods9.addElementToSet(intSet76, (-1));
        simpleMethods0.addElementToSet(intSet76, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = intSet76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        java.lang.Class<?> wildcardClass42 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods45.addElementToSet(intSet48, (int) 'a');
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods52.addElementToSet(intSet57, (int) (short) 100);
        simpleMethods45.addElementToSet(intSet57, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet57, (int) (short) 1);
        java.lang.Class<?> wildcardClass65 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        simpleMethods20.addElementToSet(intSet43, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet43, (int) (byte) 100);
        java.lang.Class<?> wildcardClass53 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods64.addElementToSet(intSet67, (int) 'a');
        simpleMethods0.addElementToSet(intSet67, (-1));
        java.lang.Class<?> wildcardClass73 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray68 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet69 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet69, intArray68);
        simpleMethods64.addElementToSet(intSet69, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet69, (int) '#');
        java.lang.Class<?> wildcardClass75 = intSet69.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods32.addElementToSet(intSet37, (int) (short) 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray45 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet46 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet46, intArray45);
        simpleMethods41.addElementToSet(intSet46, (int) (short) 100);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods50.addElementToSet(intSet55, (int) (short) 100);
        simpleMethods41.addElementToSet(intSet55, 0);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods61.addElementToSet(intSet66, (int) (short) 100);
        simpleMethods41.addElementToSet(intSet66, (int) (short) 10);
        simpleMethods32.addElementToSet(intSet66, (int) (short) 0);
        simpleMethods31.addElementToSet(intSet66, (int) (byte) 0);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods76.addElementToSet(intSet79, (int) 'a');
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods83.addElementToSet(intSet88, (int) (short) 100);
        simpleMethods76.addElementToSet(intSet88, (int) (short) 0);
        simpleMethods31.addElementToSet(intSet88, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet88, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods21.addElementToSet(intSet26, (int) (short) 100);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods39.addElementToSet(intSet44, (int) (short) 100);
        simpleMethods30.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods50.addElementToSet(intSet55, (int) (short) 100);
        simpleMethods30.addElementToSet(intSet55, (int) (short) 10);
        simpleMethods21.addElementToSet(intSet55, (int) (short) 0);
        simpleMethods20.addElementToSet(intSet55, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet55, (int) (byte) 100);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods21.addElementToSet(intSet26, (int) (short) 100);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods39.addElementToSet(intSet44, (int) (short) 100);
        simpleMethods30.addElementToSet(intSet44, 0);
        examples.SimpleMethods simpleMethods50 = new examples.SimpleMethods();
        java.lang.Integer[] intArray54 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet55 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet55, intArray54);
        simpleMethods50.addElementToSet(intSet55, (int) (short) 100);
        simpleMethods30.addElementToSet(intSet55, (int) (short) 10);
        simpleMethods21.addElementToSet(intSet55, (int) (short) 0);
        simpleMethods20.addElementToSet(intSet55, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet55, (int) (byte) 100);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods67.addElementToSet(intSet72, (int) (short) 100);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray80 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet81 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet81, intArray80);
        simpleMethods76.addElementToSet(intSet81, (int) (short) 100);
        examples.SimpleMethods simpleMethods85 = new examples.SimpleMethods();
        java.lang.Integer[] intArray89 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet90 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet90, intArray89);
        simpleMethods85.addElementToSet(intSet90, (int) (short) 100);
        simpleMethods76.addElementToSet(intSet90, 0);
        simpleMethods67.addElementToSet(intSet90, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet90, (int) (short) 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods18.addElementToSet(intSet21, (int) 'a');
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods25.addElementToSet(intSet30, (int) (short) 100);
        simpleMethods18.addElementToSet(intSet30, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods36.addElementToSet(intSet39, (int) 'a');
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods43.addElementToSet(intSet48, (int) (short) 100);
        simpleMethods36.addElementToSet(intSet48, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods54.addElementToSet(intSet59, (int) (short) 100);
        simpleMethods36.addElementToSet(intSet59, (int) 'a');
        simpleMethods18.addElementToSet(intSet59, (int) '4');
        simpleMethods0.addElementToSet(intSet59, (-1));
        java.lang.Class<?> wildcardClass69 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods20.addElementToSet(intSet23, (int) 'a');
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet32, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet43, (int) 'a');
        simpleMethods0.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet74, 0);
        simpleMethods51.addElementToSet(intSet74, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet74, (int) 'a');
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet64 = null;
        simpleMethods0.addElementToSet(intSet64, 100);
        java.lang.Class<?> wildcardClass67 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet74, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods80.addElementToSet(intSet85, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet85, (int) (short) 10);
        simpleMethods51.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet85, (int) (short) 10);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        simpleMethods31.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet74, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods80.addElementToSet(intSet85, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet85, (int) (short) 10);
        simpleMethods51.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods31.addElementToSet(intSet85, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods20.addElementToSet(intSet23, (int) 'a');
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet32, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet43, (int) 'a');
        simpleMethods0.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet74, 0);
        simpleMethods51.addElementToSet(intSet74, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet74, (int) 'a');
        java.lang.Class<?> wildcardClass84 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, (int) (short) 100);
        java.lang.Class<?> wildcardClass48 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        simpleMethods31.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet74, 0);
        examples.SimpleMethods simpleMethods80 = new examples.SimpleMethods();
        java.lang.Integer[] intArray84 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet85 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet85, intArray84);
        simpleMethods80.addElementToSet(intSet85, (int) (short) 100);
        simpleMethods60.addElementToSet(intSet85, (int) (short) 10);
        simpleMethods51.addElementToSet(intSet85, (int) (short) 0);
        simpleMethods31.addElementToSet(intSet85, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet85, (int) (byte) 0);
        java.lang.Class<?> wildcardClass97 = intSet85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods0.addElementToSet(intSet47, (int) (short) 10);
        java.lang.Class<?> wildcardClass51 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet50, 10);
        java.util.HashSet<java.lang.Integer> intSet56 = null;
        simpleMethods0.addElementToSet(intSet56, (int) (short) 0);
        java.lang.Class<?> wildcardClass59 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet65, 0);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet76, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet76, 10);
        java.lang.Class<?> wildcardClass84 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods28.addElementToSet(intSet33, (int) (short) 100);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods37.addElementToSet(intSet42, (int) (short) 100);
        simpleMethods28.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods48.addElementToSet(intSet53, (int) (short) 100);
        simpleMethods28.addElementToSet(intSet53, (int) (short) 10);
        simpleMethods19.addElementToSet(intSet53, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet53, (int) (byte) 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods63.addElementToSet(intSet68, (int) (short) 100);
        simpleMethods18.addElementToSet(intSet68, 10);
        simpleMethods0.addElementToSet(intSet68, 10);
        java.lang.Class<?> wildcardClass76 = intSet68.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods16.addElementToSet(intSet21, (int) (short) 100);
        simpleMethods7.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods36.addElementToSet(intSet41, (int) (short) 100);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods36.addElementToSet(intSet50, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods56.addElementToSet(intSet61, (int) (short) 100);
        simpleMethods36.addElementToSet(intSet61, (int) (short) 10);
        simpleMethods27.addElementToSet(intSet61, (int) (short) 0);
        simpleMethods7.addElementToSet(intSet61, (int) (short) -1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods71.addElementToSet(intSet74, (int) 'a');
        simpleMethods7.addElementToSet(intSet74, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet74, (int) (short) 0);
        java.lang.Class<?> wildcardClass82 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100, 10 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods0.addElementToSet(intSet54, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet58 = null;
        simpleMethods0.addElementToSet(intSet58, 0);
        java.lang.Class<?> wildcardClass61 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, (int) '#');
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet34, (int) (short) 10);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        simpleMethods49.addElementToSet(intSet63, 0);
        simpleMethods40.addElementToSet(intSet63, (int) (short) -1);
        simpleMethods9.addElementToSet(intSet63, 0);
        simpleMethods0.addElementToSet(intSet63, (int) (byte) 10);
        java.lang.Class<?> wildcardClass75 = intSet63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 1);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods42.addElementToSet(intSet45, (int) 'a');
        simpleMethods0.addElementToSet(intSet45, 10);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods0.addElementToSet(intSet51, (int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods16.addElementToSet(intSet21, (int) (short) 100);
        simpleMethods7.addElementToSet(intSet21, 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray40 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet41 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet41, intArray40);
        simpleMethods36.addElementToSet(intSet41, (int) (short) 100);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods36.addElementToSet(intSet50, 0);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods56.addElementToSet(intSet61, (int) (short) 100);
        simpleMethods36.addElementToSet(intSet61, (int) (short) 10);
        simpleMethods27.addElementToSet(intSet61, (int) (short) 0);
        simpleMethods7.addElementToSet(intSet61, (int) (short) -1);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods71.addElementToSet(intSet74, (int) 'a');
        simpleMethods7.addElementToSet(intSet74, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet74, (int) (short) 0);
        java.lang.Class<?> wildcardClass82 = intSet74.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods0.addElementToSet(intSet47, (int) (short) 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods51.addElementToSet(intSet54, (int) 'a');
        simpleMethods0.addElementToSet(intSet54, (int) '4');
        java.lang.Class<?> wildcardClass60 = intSet54.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet50, 10);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray60 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet61 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet61, intArray60);
        simpleMethods56.addElementToSet(intSet61, (int) (short) 100);
        examples.SimpleMethods simpleMethods65 = new examples.SimpleMethods();
        java.lang.Integer[] intArray69 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet70 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet70, intArray69);
        simpleMethods65.addElementToSet(intSet70, (int) (short) 100);
        simpleMethods56.addElementToSet(intSet70, 0);
        simpleMethods0.addElementToSet(intSet70, (int) (short) 0);
        java.lang.Class<?> wildcardClass78 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods18.addElementToSet(intSet21, (int) 'a');
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods25.addElementToSet(intSet30, (int) (short) 100);
        simpleMethods18.addElementToSet(intSet30, (int) (short) 0);
        examples.SimpleMethods simpleMethods36 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods36.addElementToSet(intSet39, (int) 'a');
        examples.SimpleMethods simpleMethods43 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods43.addElementToSet(intSet48, (int) (short) 100);
        simpleMethods36.addElementToSet(intSet48, (int) (short) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods54.addElementToSet(intSet59, (int) (short) 100);
        simpleMethods36.addElementToSet(intSet59, (int) 'a');
        simpleMethods18.addElementToSet(intSet59, (int) '4');
        simpleMethods0.addElementToSet(intSet59, (-1));
        java.lang.Class<?> wildcardClass69 = intSet59.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet54, (int) (short) 10);
        simpleMethods20.addElementToSet(intSet54, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet54, (int) (short) -1);
        examples.SimpleMethods simpleMethods64 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods64.addElementToSet(intSet67, (int) 'a');
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods64.addElementToSet(intSet76, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet76, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods0.addElementToSet(intSet47, (int) (short) 10);
        java.lang.Class<?> wildcardClass51 = intSet47.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet34, (int) (short) 10);
        simpleMethods0.addElementToSet(intSet34, (int) (short) 0);
        examples.SimpleMethods simpleMethods42 = new examples.SimpleMethods();
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods42.addElementToSet(intSet47, (int) (short) 100);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        simpleMethods42.addElementToSet(intSet56, 0);
        examples.SimpleMethods simpleMethods62 = new examples.SimpleMethods();
        java.lang.Integer[] intArray66 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet67 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet67, intArray66);
        simpleMethods62.addElementToSet(intSet67, (int) (short) 100);
        examples.SimpleMethods simpleMethods71 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods71.addElementToSet(intSet76, (int) (short) 100);
        simpleMethods62.addElementToSet(intSet76, 0);
        simpleMethods42.addElementToSet(intSet76, (int) (short) 1);
        examples.SimpleMethods simpleMethods84 = new examples.SimpleMethods();
        java.lang.Integer[] intArray86 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet87 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet87, intArray86);
        simpleMethods84.addElementToSet(intSet87, (int) 'a');
        simpleMethods42.addElementToSet(intSet87, 10);
        simpleMethods0.addElementToSet(intSet87, (int) (short) 100);
        java.lang.Class<?> wildcardClass95 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.util.HashSet<java.lang.Integer> intSet45 = null;
        simpleMethods0.addElementToSet(intSet45, (int) (short) 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods48.addElementToSet(intSet53, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet53, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet12, (int) (short) 0);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        examples.SimpleMethods simpleMethods28 = new examples.SimpleMethods();
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet33 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet33, intArray32);
        simpleMethods28.addElementToSet(intSet33, (int) (short) 100);
        examples.SimpleMethods simpleMethods37 = new examples.SimpleMethods();
        java.lang.Integer[] intArray41 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet42 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet42, intArray41);
        simpleMethods37.addElementToSet(intSet42, (int) (short) 100);
        simpleMethods28.addElementToSet(intSet42, 0);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods48.addElementToSet(intSet53, (int) (short) 100);
        simpleMethods28.addElementToSet(intSet53, (int) (short) 10);
        simpleMethods19.addElementToSet(intSet53, (int) (short) 0);
        simpleMethods18.addElementToSet(intSet53, (int) (byte) 0);
        examples.SimpleMethods simpleMethods63 = new examples.SimpleMethods();
        java.lang.Integer[] intArray67 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet68 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet68, intArray67);
        simpleMethods63.addElementToSet(intSet68, (int) (short) 100);
        simpleMethods18.addElementToSet(intSet68, 10);
        simpleMethods0.addElementToSet(intSet68, 10);
        examples.SimpleMethods simpleMethods76 = new examples.SimpleMethods();
        java.lang.Integer[] intArray78 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet79 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet79, intArray78);
        simpleMethods76.addElementToSet(intSet79, (int) 'a');
        simpleMethods0.addElementToSet(intSet79, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        simpleMethods0.addElementToSet(intSet23, (int) (short) -1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        simpleMethods31.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods52.addElementToSet(intSet57, (int) (short) 100);
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods61.addElementToSet(intSet66, (int) (short) 100);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods70.addElementToSet(intSet75, (int) (short) 100);
        simpleMethods61.addElementToSet(intSet75, 0);
        examples.SimpleMethods simpleMethods81 = new examples.SimpleMethods();
        java.lang.Integer[] intArray85 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet86 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet86, intArray85);
        simpleMethods81.addElementToSet(intSet86, (int) (short) 100);
        simpleMethods61.addElementToSet(intSet86, (int) (short) 10);
        simpleMethods52.addElementToSet(intSet86, (int) (short) 0);
        simpleMethods51.addElementToSet(intSet86, (int) (byte) 0);
        simpleMethods31.addElementToSet(intSet86, (int) (byte) 100);
        simpleMethods0.addElementToSet(intSet86, 100);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet50, 10);
        examples.SimpleMethods simpleMethods56 = new examples.SimpleMethods();
        java.lang.Integer[] intArray58 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet59 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet59, intArray58);
        simpleMethods56.addElementToSet(intSet59, (int) 'a');
        simpleMethods0.addElementToSet(intSet59, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        java.util.HashSet<java.lang.Integer> intSet20 = null;
        simpleMethods0.addElementToSet(intSet20, 1);
        java.lang.Class<?> wildcardClass23 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        java.lang.Integer[] intArray46 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet47 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet47, intArray46);
        simpleMethods0.addElementToSet(intSet47, (int) (short) 10);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods51.addElementToSet(intSet54, (int) 'a');
        simpleMethods0.addElementToSet(intSet54, (int) '4');
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet4 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet4, intArray3);
        simpleMethods1.addElementToSet(intSet4, (int) 'a');
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet13 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet13, intArray12);
        simpleMethods8.addElementToSet(intSet13, (int) (short) 100);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods17.addElementToSet(intSet22, (int) (short) 100);
        simpleMethods8.addElementToSet(intSet22, 0);
        simpleMethods1.addElementToSet(intSet22, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet22, (int) 'a');
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray36 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet37 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet37, intArray36);
        simpleMethods32.addElementToSet(intSet37, (int) (short) 100);
        examples.SimpleMethods simpleMethods41 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods41.addElementToSet(intSet44, (int) 'a');
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods48.addElementToSet(intSet53, (int) (short) 100);
        simpleMethods41.addElementToSet(intSet53, (int) (short) 0);
        examples.SimpleMethods simpleMethods59 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods59.addElementToSet(intSet62, (int) 'a');
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods66.addElementToSet(intSet71, (int) (short) 100);
        simpleMethods59.addElementToSet(intSet71, (int) (short) 0);
        examples.SimpleMethods simpleMethods77 = new examples.SimpleMethods();
        java.lang.Integer[] intArray81 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet82 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet82, intArray81);
        simpleMethods77.addElementToSet(intSet82, (int) (short) 100);
        simpleMethods59.addElementToSet(intSet82, (int) 'a');
        simpleMethods41.addElementToSet(intSet82, (int) '4');
        simpleMethods32.addElementToSet(intSet82, (int) '4');
        simpleMethods0.addElementToSet(intSet82, (int) 'a');
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        simpleMethods0.addElementToSet(intSet23, (int) (short) -1);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        simpleMethods31.addElementToSet(intSet45, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray55 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet56 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet56, intArray55);
        simpleMethods51.addElementToSet(intSet56, (int) (short) 100);
        examples.SimpleMethods simpleMethods60 = new examples.SimpleMethods();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet65 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet65, intArray64);
        simpleMethods60.addElementToSet(intSet65, (int) (short) 100);
        simpleMethods51.addElementToSet(intSet65, 0);
        simpleMethods31.addElementToSet(intSet65, (int) (short) 1);
        simpleMethods0.addElementToSet(intSet65, (int) '#');
        java.lang.Class<?> wildcardClass75 = intSet65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        simpleMethods9.addElementToSet(intSet43, (int) (short) 1);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods51.addElementToSet(intSet54, (int) 'a');
        simpleMethods9.addElementToSet(intSet54, 10);
        simpleMethods0.addElementToSet(intSet54, (int) (short) 0);
        java.lang.Class<?> wildcardClass62 = intSet54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods16.addElementToSet(intSet21, (int) (short) 100);
        simpleMethods7.addElementToSet(intSet21, 0);
        simpleMethods0.addElementToSet(intSet21, (int) (short) -1);
        java.lang.Class<?> wildcardClass29 = intSet21.getClass();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods20.addElementToSet(intSet23, (int) 'a');
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet32, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods39.addElementToSet(intSet44, (int) (short) 100);
        examples.SimpleMethods simpleMethods48 = new examples.SimpleMethods();
        java.lang.Integer[] intArray52 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet53 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet53, intArray52);
        simpleMethods48.addElementToSet(intSet53, (int) (short) 100);
        examples.SimpleMethods simpleMethods57 = new examples.SimpleMethods();
        java.lang.Integer[] intArray61 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet62 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet62, intArray61);
        simpleMethods57.addElementToSet(intSet62, (int) (short) 100);
        simpleMethods48.addElementToSet(intSet62, 0);
        examples.SimpleMethods simpleMethods68 = new examples.SimpleMethods();
        java.lang.Integer[] intArray72 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet73 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet73, intArray72);
        simpleMethods68.addElementToSet(intSet73, (int) (short) 100);
        simpleMethods48.addElementToSet(intSet73, (int) (short) 10);
        simpleMethods39.addElementToSet(intSet73, (int) (short) 0);
        simpleMethods38.addElementToSet(intSet73, (int) (byte) 0);
        examples.SimpleMethods simpleMethods83 = new examples.SimpleMethods();
        java.lang.Integer[] intArray87 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet88 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet88, intArray87);
        simpleMethods83.addElementToSet(intSet88, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet88, 10);
        simpleMethods20.addElementToSet(intSet88, 10);
        simpleMethods0.addElementToSet(intSet88, 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet25, (int) (short) 10);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        simpleMethods40.addElementToSet(intSet54, 0);
        simpleMethods31.addElementToSet(intSet54, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet54, 0);
        java.lang.Class<?> wildcardClass64 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet34, 0);
        examples.SimpleMethods simpleMethods40 = new examples.SimpleMethods();
        java.lang.Integer[] intArray44 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet45 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet45, intArray44);
        simpleMethods40.addElementToSet(intSet45, (int) (short) 100);
        examples.SimpleMethods simpleMethods49 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods49.addElementToSet(intSet54, (int) (short) 100);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        simpleMethods49.addElementToSet(intSet63, 0);
        examples.SimpleMethods simpleMethods69 = new examples.SimpleMethods();
        java.lang.Integer[] intArray73 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet74 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet74, intArray73);
        simpleMethods69.addElementToSet(intSet74, (int) (short) 100);
        simpleMethods49.addElementToSet(intSet74, (int) (short) 10);
        simpleMethods40.addElementToSet(intSet74, (int) (short) 0);
        simpleMethods20.addElementToSet(intSet74, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet74, (int) (byte) 0);
        java.lang.Class<?> wildcardClass86 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods20.addElementToSet(intSet23, (int) 'a');
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet32, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet43, (int) 'a');
        simpleMethods0.addElementToSet(intSet43, 0);
        examples.SimpleMethods simpleMethods51 = new examples.SimpleMethods();
        java.lang.Integer[] intArray53 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet54 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet54, intArray53);
        simpleMethods51.addElementToSet(intSet54, (int) 'a');
        simpleMethods0.addElementToSet(intSet54, 0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods20.addElementToSet(intSet23, (int) 'a');
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet32, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet43, (int) 'a');
        simpleMethods0.addElementToSet(intSet43, 0);
        java.util.HashSet<java.lang.Integer> intSet51 = null;
        simpleMethods0.addElementToSet(intSet51, (int) (byte) 0);
        examples.SimpleMethods simpleMethods54 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods54.addElementToSet(intSet57, (int) 'a');
        examples.SimpleMethods simpleMethods61 = new examples.SimpleMethods();
        java.lang.Integer[] intArray65 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet66 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet66, intArray65);
        simpleMethods61.addElementToSet(intSet66, (int) (short) 100);
        examples.SimpleMethods simpleMethods70 = new examples.SimpleMethods();
        java.lang.Integer[] intArray74 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet75 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet75, intArray74);
        simpleMethods70.addElementToSet(intSet75, (int) (short) 100);
        simpleMethods61.addElementToSet(intSet75, 0);
        simpleMethods54.addElementToSet(intSet75, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet75, (-1));
        java.lang.Class<?> wildcardClass85 = intSet75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        examples.SimpleMethods simpleMethods19 = new examples.SimpleMethods();
        java.lang.Integer[] intArray23 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet24 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet24, intArray23);
        simpleMethods19.addElementToSet(intSet24, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet24, 0);
        examples.SimpleMethods simpleMethods30 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods30.addElementToSet(intSet35, (int) (short) 100);
        simpleMethods10.addElementToSet(intSet35, (int) (short) 10);
        simpleMethods1.addElementToSet(intSet35, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet35, (int) (byte) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray47 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet48 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet48, intArray47);
        simpleMethods45.addElementToSet(intSet48, (int) 'a');
        examples.SimpleMethods simpleMethods52 = new examples.SimpleMethods();
        java.lang.Integer[] intArray56 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet57 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet57, intArray56);
        simpleMethods52.addElementToSet(intSet57, (int) (short) 100);
        simpleMethods45.addElementToSet(intSet57, (int) (short) 0);
        simpleMethods0.addElementToSet(intSet57, (int) (short) 1);
        java.util.HashSet<java.lang.Integer> intSet65 = null;
        simpleMethods0.addElementToSet(intSet65, 1);
        java.lang.Class<?> wildcardClass68 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods2 = new examples.SimpleMethods();
        java.lang.Integer[] intArray6 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet7 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet7, intArray6);
        simpleMethods2.addElementToSet(intSet7, (int) (short) 100);
        examples.SimpleMethods simpleMethods11 = new examples.SimpleMethods();
        java.lang.Integer[] intArray15 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet16 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet16, intArray15);
        simpleMethods11.addElementToSet(intSet16, (int) (short) 100);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        simpleMethods11.addElementToSet(intSet25, 0);
        examples.SimpleMethods simpleMethods31 = new examples.SimpleMethods();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet36 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet36, intArray35);
        simpleMethods31.addElementToSet(intSet36, (int) (short) 100);
        simpleMethods11.addElementToSet(intSet36, (int) (short) 10);
        simpleMethods2.addElementToSet(intSet36, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet36, (int) (byte) 0);
        examples.SimpleMethods simpleMethods46 = new examples.SimpleMethods();
        java.lang.Integer[] intArray50 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet51 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet51, intArray50);
        simpleMethods46.addElementToSet(intSet51, (int) (short) 100);
        examples.SimpleMethods simpleMethods55 = new examples.SimpleMethods();
        java.lang.Integer[] intArray59 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet60 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet60, intArray59);
        simpleMethods55.addElementToSet(intSet60, (int) (short) 100);
        simpleMethods46.addElementToSet(intSet60, 0);
        examples.SimpleMethods simpleMethods66 = new examples.SimpleMethods();
        java.lang.Integer[] intArray70 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet71 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet71, intArray70);
        simpleMethods66.addElementToSet(intSet71, (int) (short) 100);
        examples.SimpleMethods simpleMethods75 = new examples.SimpleMethods();
        java.lang.Integer[] intArray79 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet80 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet80, intArray79);
        simpleMethods75.addElementToSet(intSet80, (int) (short) 100);
        simpleMethods66.addElementToSet(intSet80, 0);
        simpleMethods46.addElementToSet(intSet80, (int) (short) 1);
        simpleMethods1.addElementToSet(intSet80, (int) (byte) 0);
        simpleMethods0.addElementToSet(intSet80, (int) (short) 10);
        java.lang.Class<?> wildcardClass92 = intSet80.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray3 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet4 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet4, intArray3);
        simpleMethods1.addElementToSet(intSet4, (int) 'a');
        examples.SimpleMethods simpleMethods8 = new examples.SimpleMethods();
        java.lang.Integer[] intArray12 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet13 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet13, intArray12);
        simpleMethods8.addElementToSet(intSet13, (int) (short) 100);
        examples.SimpleMethods simpleMethods17 = new examples.SimpleMethods();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet22 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet22, intArray21);
        simpleMethods17.addElementToSet(intSet22, (int) (short) 100);
        simpleMethods8.addElementToSet(intSet22, 0);
        simpleMethods1.addElementToSet(intSet22, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet22, (int) 'a');
        java.lang.Class<?> wildcardClass32 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray24 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet25 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet25, intArray24);
        simpleMethods20.addElementToSet(intSet25, (int) (short) 100);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods29.addElementToSet(intSet43, 0);
        simpleMethods20.addElementToSet(intSet43, (int) (short) -1);
        simpleMethods0.addElementToSet(intSet43, (int) (byte) 100);
        java.util.HashSet<java.lang.Integer> intSet53 = null;
        simpleMethods0.addElementToSet(intSet53, (int) (byte) 100);
        java.lang.Class<?> wildcardClass56 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        simpleMethods0.addElementToSet(intSet14, 0);
        examples.SimpleMethods simpleMethods20 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods20.addElementToSet(intSet23, (int) 'a');
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray31 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet32 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet32, intArray31);
        simpleMethods27.addElementToSet(intSet32, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet32, (int) (short) 0);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        simpleMethods20.addElementToSet(intSet43, (int) 'a');
        simpleMethods0.addElementToSet(intSet43, 0);
        java.lang.Class<?> wildcardClass51 = intSet43.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray13 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet14 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet14, intArray13);
        simpleMethods9.addElementToSet(intSet14, (int) (short) 100);
        examples.SimpleMethods simpleMethods18 = new examples.SimpleMethods();
        java.lang.Integer[] intArray22 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet23 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet23, intArray22);
        simpleMethods18.addElementToSet(intSet23, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet23, 0);
        examples.SimpleMethods simpleMethods29 = new examples.SimpleMethods();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet34 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet34, intArray33);
        simpleMethods29.addElementToSet(intSet34, (int) (short) 100);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods47.addElementToSet(intSet52, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet52, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet63, (int) (short) 10);
        simpleMethods29.addElementToSet(intSet63, (int) (short) 0);
        simpleMethods9.addElementToSet(intSet63, (int) (short) -1);
        examples.SimpleMethods simpleMethods73 = new examples.SimpleMethods();
        java.lang.Integer[] intArray75 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet76 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet76, intArray75);
        simpleMethods73.addElementToSet(intSet76, (int) 'a');
        simpleMethods9.addElementToSet(intSet76, (-1));
        simpleMethods0.addElementToSet(intSet76, (int) (short) -1);
        java.util.HashSet<java.lang.Integer> intSet84 = null;
        simpleMethods0.addElementToSet(intSet84, (int) (byte) -1);
        java.lang.Class<?> wildcardClass87 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray2 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet3 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet3, intArray2);
        simpleMethods0.addElementToSet(intSet3, (int) 'a');
        examples.SimpleMethods simpleMethods7 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods7.addElementToSet(intSet12, (int) (short) 100);
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods16.addElementToSet(intSet21, (int) (short) 100);
        examples.SimpleMethods simpleMethods25 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods25.addElementToSet(intSet30, (int) (short) 100);
        simpleMethods16.addElementToSet(intSet30, 0);
        simpleMethods7.addElementToSet(intSet30, (int) (short) -1);
        examples.SimpleMethods simpleMethods38 = new examples.SimpleMethods();
        java.lang.Integer[] intArray42 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet43 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet43, intArray42);
        simpleMethods38.addElementToSet(intSet43, (int) (short) 100);
        examples.SimpleMethods simpleMethods47 = new examples.SimpleMethods();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet52 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet52, intArray51);
        simpleMethods47.addElementToSet(intSet52, (int) (short) 100);
        simpleMethods38.addElementToSet(intSet52, 0);
        examples.SimpleMethods simpleMethods58 = new examples.SimpleMethods();
        java.lang.Integer[] intArray62 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet63 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet63, intArray62);
        simpleMethods58.addElementToSet(intSet63, (int) (short) 100);
        examples.SimpleMethods simpleMethods67 = new examples.SimpleMethods();
        java.lang.Integer[] intArray71 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet72 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet72, intArray71);
        simpleMethods67.addElementToSet(intSet72, (int) (short) 100);
        simpleMethods58.addElementToSet(intSet72, 0);
        simpleMethods38.addElementToSet(intSet72, (int) (short) 1);
        simpleMethods7.addElementToSet(intSet72, (int) '#');
        simpleMethods0.addElementToSet(intSet72, (int) 'a');
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods9.addElementToSet(intSet12, (int) 'a');
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods16.addElementToSet(intSet21, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet21, (int) (short) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods27.addElementToSet(intSet30, (int) 'a');
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods34.addElementToSet(intSet39, (int) (short) 100);
        simpleMethods27.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods27.addElementToSet(intSet50, (int) 'a');
        simpleMethods9.addElementToSet(intSet50, (int) '4');
        simpleMethods0.addElementToSet(intSet50, (int) '4');
        java.util.HashSet<java.lang.Integer> intSet60 = null;
        simpleMethods0.addElementToSet(intSet60, (int) (short) 10);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        examples.SimpleMethods simpleMethods1 = new examples.SimpleMethods();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet6 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet6, intArray5);
        simpleMethods1.addElementToSet(intSet6, (int) (short) 100);
        examples.SimpleMethods simpleMethods10 = new examples.SimpleMethods();
        java.lang.Integer[] intArray14 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet15 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet15, intArray14);
        simpleMethods10.addElementToSet(intSet15, (int) (short) 100);
        simpleMethods1.addElementToSet(intSet15, 0);
        examples.SimpleMethods simpleMethods21 = new examples.SimpleMethods();
        java.lang.Integer[] intArray25 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet26 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet26, intArray25);
        simpleMethods21.addElementToSet(intSet26, (int) (short) 100);
        simpleMethods1.addElementToSet(intSet26, (int) (short) 10);
        examples.SimpleMethods simpleMethods32 = new examples.SimpleMethods();
        java.lang.Integer[] intArray34 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet35 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet35, intArray34);
        simpleMethods32.addElementToSet(intSet35, (int) 'a');
        examples.SimpleMethods simpleMethods39 = new examples.SimpleMethods();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet44 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet44, intArray43);
        simpleMethods39.addElementToSet(intSet44, (int) (short) 100);
        simpleMethods32.addElementToSet(intSet44, (int) (short) 0);
        simpleMethods1.addElementToSet(intSet44, (int) '4');
        simpleMethods0.addElementToSet(intSet44, 10);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        examples.SimpleMethods simpleMethods0 = new examples.SimpleMethods();
        java.lang.Integer[] intArray4 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet5 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet5, intArray4);
        simpleMethods0.addElementToSet(intSet5, (int) (short) 100);
        examples.SimpleMethods simpleMethods9 = new examples.SimpleMethods();
        java.lang.Integer[] intArray11 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet12 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet12, intArray11);
        simpleMethods9.addElementToSet(intSet12, (int) 'a');
        examples.SimpleMethods simpleMethods16 = new examples.SimpleMethods();
        java.lang.Integer[] intArray20 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet21 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet21, intArray20);
        simpleMethods16.addElementToSet(intSet21, (int) (short) 100);
        simpleMethods9.addElementToSet(intSet21, (int) (short) 0);
        examples.SimpleMethods simpleMethods27 = new examples.SimpleMethods();
        java.lang.Integer[] intArray29 = new java.lang.Integer[] { 100 };
        java.util.HashSet<java.lang.Integer> intSet30 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet30, intArray29);
        simpleMethods27.addElementToSet(intSet30, (int) 'a');
        examples.SimpleMethods simpleMethods34 = new examples.SimpleMethods();
        java.lang.Integer[] intArray38 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet39 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet39, intArray38);
        simpleMethods34.addElementToSet(intSet39, (int) (short) 100);
        simpleMethods27.addElementToSet(intSet39, (int) (short) 0);
        examples.SimpleMethods simpleMethods45 = new examples.SimpleMethods();
        java.lang.Integer[] intArray49 = new java.lang.Integer[] { (-1), 10, 1 };
        java.util.HashSet<java.lang.Integer> intSet50 = new java.util.HashSet<java.lang.Integer>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intSet50, intArray49);
        simpleMethods45.addElementToSet(intSet50, (int) (short) 100);
        simpleMethods27.addElementToSet(intSet50, (int) 'a');
        simpleMethods9.addElementToSet(intSet50, (int) '4');
        simpleMethods0.addElementToSet(intSet50, (int) '4');
        java.lang.Class<?> wildcardClass60 = simpleMethods0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }
}

