/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 05 05:43:36 GMT 2022
 */

package org.nibor.autolink.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.nibor.autolink.internal.Scanners;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Scanners_ESTest extends Scanners_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = '/';
      charArray0[2] = '#';
      charArray0[3] = '/';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1600);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = Scanners.isNonAscii('\u0081');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = Scanners.isAlnum('9');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = Scanners.isAlnum('0');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = Scanners.isAlpha('z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = Scanners.isAlnum('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = Scanners.isAlpha('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Scanners.findUrlEnd("~TtsYo4", (-1197));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Scanners.findUrlEnd((CharSequence) null, 173);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.nibor.autolink.internal.Scanners", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(134);
      // Undeclared exception!
      try { 
        Scanners.findUrlEnd(charBuffer0, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '/';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u009F';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[15];
      charArray0[1] = '\u009C';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0099';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0098';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0096';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0094';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0093';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '\u0092';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u008F';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u008D';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u008A';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0088';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0084';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0083';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '^';
      charArray0[1] = '\u0082';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0081';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0080';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = ':';
      charArray0[1] = '!';
      charArray0[2] = '';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '}';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '`';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = ']';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = '>';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.put(1, '<');
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'n';
      charArray0[1] = 'n';
      charArray0[2] = ',';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(134);
      charBuffer0.put('(');
      charBuffer0.position(0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '_';
      charArray0[1] = ' ';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      char[] charArray0 = new char[14];
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '\u001E';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 2);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = '/';
      charArray0[2] = '\u001D';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(134);
      charBuffer0.put('\u001C');
      charBuffer0.position(0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = '/';
      charArray0[2] = '\u001B';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(134);
      charBuffer0.put('\u001A');
      charBuffer0.position(0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '_';
      charArray0[1] = '\u0019';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '\u0017';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(134);
      charBuffer0.put('\u0015');
      charBuffer0.position(0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = '/';
      charArray0[2] = '\u0014';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      charArray0[4] = '\u0013';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = '/';
      charArray0[2] = '\u0012';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = '/';
      charArray0[2] = '\u0011';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(134);
      charBuffer0.put('\"');
      charBuffer0.position(0);
      int int0 = Scanners.findUrlEnd(charBuffer0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      boolean boolean0 = Scanners.isNonAscii('\u0080');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      boolean boolean0 = Scanners.isNonAscii('L');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = Scanners.isAlnum('<');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      boolean boolean0 = Scanners.isDigit('7');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      boolean boolean0 = Scanners.isDigit('d');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      boolean boolean0 = Scanners.isDigit(' ');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      boolean boolean0 = Scanners.isAlpha('');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      boolean boolean0 = Scanners.isAlpha('Z');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      boolean boolean0 = Scanners.isAlpha(' ');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Scanners scanners0 = new Scanners();
  }
}
