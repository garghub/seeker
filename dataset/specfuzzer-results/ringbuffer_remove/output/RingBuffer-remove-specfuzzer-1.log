> SpecFuzzer
# Inference step (Daikon + Fuzzed Specs)
Daikon version 5.8.2, released May 4, 2020; http://plse.cs.washington.edu/daikon.

Loading invariants from file: invs_file.xml
Loaded: 0

Fuzzing specs:
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != 1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < 1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= 1
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != 1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 <= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 > -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) implies (Integer_Variable_1 <= -1)
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + -1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) implies (Integer_Variable_1 > 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) or (Integer_Variable_1 > 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) iff (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 <= -1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) xor (Integer_Variable_1 >= -1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != 0)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 >= -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 > 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 1)
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1)
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) implies (Integer_Variable_1 >= -1)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 = Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) implies (Integer_Variable_1 <= 0)
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) implies (Integer_Variable_1 < 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= -1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) xor (Integer_Variable_1 < 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) implies (Integer_Variable_1 = 0)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 >= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) or (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 != 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 1)
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= 1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) xor (Integer_Variable_1 <= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 >= -1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 = -1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = 1
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 0)
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < -1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 0
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < 1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 > -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = 1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > -1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > -1)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 <= -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < 1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 > 0)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 0)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < 1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 != Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < 0)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) implies (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = -1)
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= -1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + -1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 1)
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 = -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < 1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % -1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= -1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= 1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < 0)
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 < 1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 != 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = 1)
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) xor (Integer_Variable_1 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 != 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > 1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > -1)
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % -1
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= -1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Unique fuzzed invariants: 473 (2000)
Unary: 23 - Binary: 151 - Ternary: 299 - Discarded: 181
Reading declaration files Processing trace data; reading 1 dtrace file:
Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/RingBufferTesterDriver-objects.xml
Total loaded objects: 2529

No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
examples.RingBuffer:::OBJECT
FuzzedInvariant ( some n : RingBuffer.data : n = null ) holds for: this
this.data != null
this.start one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.free
this.free >= 1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.capacity_
size(this.data[]) >= 1
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.capacity_>
this.start <= this.free
this.start <= this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_>
this.free <= this.capacity_
===========================================================================
examples.RingBuffer.RingBuffer(int):::ENTER
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: n
===========================================================================
examples.RingBuffer.RingBuffer(int):::EXIT
this.start == this.free
this.capacity_ == orig(n)
this.data[] == [null]
this.data[] elements == null
this.data[].getClass().getName() == [null]
this.data[].getClass().getName() elements == null
this.start == 1
size(this.data[]) == 1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
===========================================================================
examples.RingBuffer.capacity():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.capacity():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == return
return == orig(this.capacity_)
this.free one of { 1, 2, 3 }
return one of { 1, 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: return
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, return>
this.start <= return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, return>
this.free <= return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
===========================================================================
examples.RingBuffer.count():::ENTER
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.capacity_ % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.count():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
return one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.capacity_ % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, return>
this.free > return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
this.capacity_ > return
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.dataCount():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.dataCount():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
return one of { 2, 9, 11 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, return>
this.start < return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, return>
this.free < return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
this.capacity_ < return
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.extend(java.lang.Object):::ENTER
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
a_value.getClass().getName() == java.lang.String.class
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.extend(java.lang.Object):::EXIT
this.data == orig(this.data)
this.start == orig(this.start)
this.capacity_ == orig(this.capacity_)
size(this.data[])-1 == orig(size(this.data[]))
this.start one of { 1, 2 }
this.free one of { 2, 3, 4 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 2, 3, 4 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.data[]))-1
orig(a_value.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.free)>
orig(this.free) % this.start == 0
this.start <= orig(this.free)
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 + 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.free)>
this.free > orig(this.free)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <orig(this.free), this.capacity_>
this.capacity_ > orig(this.free)
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isEmpty():::ENTER
this.free one of { 1, 2, 3 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
(return == false)  <==>  (this.start < this.free)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[]))
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (size(this.data[]) one of { 2, 3 })
(return == false)  ==>  (this.capacity_ one of { 8, 10 })
(return == false)  ==>  (this.free < this.capacity_)
(return == false)  ==>  (this.free one of { 2, 3 })
(return == false)  ==>  (this.start < this.capacity_)
(return == false)  ==>  (this.start one of { 1, 2 })
(return == true)  <==>  (this.start == this.free)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.start, return>)
(return == true)  ==>  (size(this.data[]) one of { 1, 2, 3 })
(return == true)  ==>  (this.free one of { 1, 2, 3 })
(return == true)  ==>  (this.start one of { 1, 2, 3 })
this.free one of { 1, 2, 3 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT;condition="return == true"
this.start == this.free
this.start == orig(this.free)
return == true
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT;condition="not(return == true)"
this.start one of { 1, 2 }
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
return == false
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isFull():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isFull():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
return == false
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isFull():::EXIT;condition="not(return == true)"
===========================================================================
examples.RingBuffer.item():::ENTER
this.start one of { 1, 2 }
this.free one of { 2, 3 }
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.item():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 1, 2 }
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ == 8
return.getClass().getName() == java.lang.String.class
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
return.getClass().getName() in this.data[].getClass().getName()
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.remove():::ENTER
this.start one of { 1, 2 }
this.free one of { 2, 3 }
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, this.start>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.capacity_, this.start>
this.start < this.capacity_
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
===========================================================================
examples.RingBuffer.remove():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.start
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)>
this.start > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.start)>
this.free > orig(this.start)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.capacity_, orig(this.start)>
this.capacity_ > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
===========================================================================
examples.RingBuffer.wipeOut():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
===========================================================================
examples.RingBuffer.wipeOut():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == this.free
this.start == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)>
this.start >= orig(this.start)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 >= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_>
this.capacity_ > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
Exiting Daikon.

# Filtering step

- Mutation is: 1:LVR:0:POS:examples.RingBuffer@<init>(int):47:0 |==> 1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m1.dtrace.gz
Loaded invs from previous step: 0
                                                                               [4:09:32 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m1-objects.xml
Total loaded objects: 2500
[4:09:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:09:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:10:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:11:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 94 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 24 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 37 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 3,998,087 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 10:AOR:+(int,int):-(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n - 1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m10.dtrace.gz
Loaded invs from previous step: 0
                                                                               [4:11:59 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m10-objects.xml
Total loaded objects: 2529
[4:12:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:12:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:13:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 100:LVR:TRUE:FALSE:examples.RingBuffer@remove():161:true |==> false
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m100.dtrace.gz
Loaded invs from previous step: 0
                                                                               [4:14:24 PM]:                                                                  Saving mutants results file

- Mutation is: 11:AOR:+(int,int):/(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n / 1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m11.dtrace.gz
Loaded invs from previous step: 0
                                                                               [4:14:25 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m11-objects.xml
Total loaded objects: 2529
[4:14:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:14:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:15:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 12:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):49:data = new ArrayList<G>(n + 1) |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m12.dtrace.gz
Loaded invs from previous step: 0
                                                                               [4:16:45 PM]:                                                                  
No return from procedure observed 286 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 286 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 0 samples (NaN%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 0, which is NaN%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 13:STD:<CALL>:<NO-OP>:examples.RingBuffer@<init>(int):50:data.add(null) |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
Loaded invs from previous step: 0
                                                                               [4:16:46 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m13-objects.xml
Total loaded objects: 2500
[4:16:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:16:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:17:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:18:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 97 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 44 invocations
  examples.RingBuffer.remove() : 39 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 107,093 errors found in 3,940,367 samples (2.72%)
RingBufferTesterDriver.inv.gz: 463 false positives, out of 16317, which is 2.84%.
Preserving 99 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 99
Saving mutants results file

- Mutation is: 14:LVR:POS:0:examples.RingBuffer@<init>(int):51:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
Loaded invs from previous step: 99
                                                                               [4:19:11 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14-objects.xml
Total loaded objects: 2572
[4:19:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:19:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:20:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 28 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.remove() : 8 invocations
  examples.RingBuffer.item() : 6 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 334,244 errors found in 3,565,777 samples (9.37%)
RingBufferTesterDriver.inv.gz: 2151 false positives, out of 16317, which is 13.18%.
Preserving 568 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 99
Saving - Total: 647
Saving mutants results file

- Mutation is: 15:LVR:POS:NEG:examples.RingBuffer@<init>(int):51:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
Loaded invs from previous step: 647
                                                                               [4:21:20 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15-objects.xml
Total loaded objects: 2497
[4:21:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:21:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:22:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 73 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 52 invocations
  examples.RingBuffer.remove() : 7 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 409,366 errors found in 3,388,982 samples (12.08%)
RingBufferTesterDriver.inv.gz: 3290 false positives, out of 16317, which is 20.16%.
Preserving 728 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 647
Saving - Total: 885
Saving mutants results file

- Mutation is: 16:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):51:start = 1 |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Loaded invs from previous step: 885
                                                                               [4:23:26 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16-objects.xml
Total loaded objects: 2572
[4:23:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:23:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:24:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 28 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.remove() : 8 invocations
  examples.RingBuffer.item() : 6 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 334,244 errors found in 3,565,777 samples (9.37%)
RingBufferTesterDriver.inv.gz: 2151 false positives, out of 16317, which is 13.18%.
Preserving 568 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 885
Saving - Total: 885
Saving mutants results file

- Mutation is: 17:LVR:POS:0:examples.RingBuffer@<init>(int):52:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
Loaded invs from previous step: 885
                                                                               [4:25:42 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17-objects.xml
Total loaded objects: 2528
[4:25:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:25:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:26:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:27:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 74 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 17 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 425,560 errors found in 3,963,633 samples (10.74%)
RingBufferTesterDriver.inv.gz: 3871 false positives, out of 16317, which is 23.72%.
Preserving 983 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 885
Saving - Total: 1358
Saving mutants results file

- Mutation is: 18:LVR:POS:NEG:examples.RingBuffer@<init>(int):52:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Loaded invs from previous step: 1358
                                                                               [4:28:15 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18-objects.xml
Total loaded objects: 2547
[4:28:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:28:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:29:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:30:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 66 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 9 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 529,718 errors found in 4,042,133 samples (13.10%)
RingBufferTesterDriver.inv.gz: 5550 false positives, out of 16317, which is 34.01%.
                                                                               Preserving 1237 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1358
Saving - Total: 1560
Saving mutants results file

- Mutation is: 19:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):52:free = 1 |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Loaded invs from previous step: 1560
                                                                               [4:30:59 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19-objects.xml
Total loaded objects: 2528
[4:31:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:31:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:32:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 74 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 17 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 425,566 errors found in 3,963,633 samples (10.74%)
RingBufferTesterDriver.inv.gz: 3871 false positives, out of 16317, which is 23.72%.
Preserving 983 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 1560
Saving - Total: 1560
Saving mutants results file

- Mutation is: 2:LVR:0:NEG:examples.RingBuffer@<init>(int):47:0 |==> -1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
Loaded invs from previous step: 1560
                                                                               [4:33:42 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m2-objects.xml
Total loaded objects: 2533
[4:33:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:33:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:34:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:35:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 83 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 10 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 384 errors found in 4,017,071 samples (0.01%)
RingBufferTesterDriver.inv.gz: 96 false positives, out of 16317, which is 0.59%.
Preserving 54 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1560
Saving - Total: 1592
Saving mutants results file

- Mutation is: 20:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):53:capacity_ = n |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Loaded invs from previous step: 1592
                                                                               [4:36:27 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20-objects.xml
Total loaded objects: 2278
[4:36:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:36:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:37:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 158 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 32 invocations
  examples.RingBuffer.remove() : 38 invocations
  examples.RingBuffer.extend(java.lang.Object) : 74 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 679,835 errors found in 3,031,457 samples (22.43%)
RingBufferTesterDriver.inv.gz: 2299 false positives, out of 10236, which is 22.46%.
Preserving 594 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 1592
Saving - Total: 1868
Saving mutants results file

- Mutation is: 3:ROR:>(int,int):!=(int,int):examples.RingBuffer@<init>(int):47:n > 0 |==> n != 0
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Loaded invs from previous step: 1868
                                                                               [4:38:42 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m3-objects.xml
Total loaded objects: 2532
[4:38:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:38:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:39:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:40:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 84 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 11 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 300 errors found in 4,016,616 samples (0.01%)
RingBufferTesterDriver.inv.gz: 100 false positives, out of 16317, which is 0.61%.
Preserving 55 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1868
Saving - Total: 1888
Saving mutants results file

- Mutation is: 4:ROR:>(int,int):>=(int,int):examples.RingBuffer@<init>(int):47:n > 0 |==> n >= 0
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Loaded invs from previous step: 1888
                                                                               [4:41:39 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m4-objects.xml
Total loaded objects: 2533
[4:41:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:41:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:42:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:43:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 83 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 10 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 384 errors found in 4,017,071 samples (0.01%)
RingBufferTesterDriver.inv.gz: 96 false positives, out of 16317, which is 0.59%.
Preserving 54 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1888
Saving - Total: 1888
Saving mutants results file

- Mutation is: 5:ROR:>(int,int):FALSE(int,int):examples.RingBuffer@<init>(int):47:n > 0 |==> false
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m5.dtrace.gz
Loaded invs from previous step: 1888
                                                                               [4:44:34 PM]:                                                                  
No return from procedure observed 286 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 286 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 0 samples (NaN%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 0, which is NaN%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1888
Saving - Total: 1888
Saving mutants results file

- Mutation is: 6:LVR:POS:0:examples.RingBuffer@<init>(int):49:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m6.dtrace.gz
Loaded invs from previous step: 1888
                                                                               [4:44:54 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m6-objects.xml
Total loaded objects: 2529
[4:44:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:44:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:45:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:46:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1888
Saving - Total: 1888
Saving mutants results file

- Mutation is: 7:LVR:POS:NEG:examples.RingBuffer@<init>(int):49:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m7.dtrace.gz
Loaded invs from previous step: 1888
                                                                               [4:47:49 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m7-objects.xml
Total loaded objects: 2529
[4:47:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:47:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:48:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:49:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1888
Saving - Total: 1888
                                                                               Saving mutants results file

- Mutation is: 8:AOR:+(int,int):%(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n % 1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m8.dtrace.gz
Loaded invs from previous step: 1888
                                                                               [4:50:45 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m8-objects.xml
Total loaded objects: 2529
[4:50:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:50:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:51:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:52:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1888
Saving - Total: 1888
Saving mutants results file

- Mutation is: 9:AOR:+(int,int):*(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n RingBufferTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log hs_err_pid51463.log hs_err_pid53479.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers 1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m9.dtrace.gz
Loaded invs from previous step: 1888
                                                                               [4:53:41 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m9-objects.xml
Total loaded objects: 2529
[4:53:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:53:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:54:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:55:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1888
Saving - Total: 1888
Saving mutants results file

- Mutation is: 91:COR:isEmpty():TRUE:examples.RingBuffer@remove():155:isEmpty() |==> false
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Loaded invs from previous step: 1888
                                                                               [4:56:25 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91-objects.xml
Total loaded objects: 2568
[4:56:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:56:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:57:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:58:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 47 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 8,136 errors found in 4,099,410 samples (0.20%)
RingBufferTesterDriver.inv.gz: 508 false positives, out of 16317, which is 3.11%.
Preserving 246 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1888
Saving - Total: 1908
Saving mutants results file

- Mutation is: 92:COR:isEmpty():FALSE:examples.RingBuffer@remove():155:isEmpty() |==> true
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m92.dtrace.gz
Loaded invs from previous step: 1908
                                                                               [4:59:14 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m92-objects.xml
Total loaded objects: 2483
[4:59:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[4:59:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:00:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 103 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 32 invocations
  examples.RingBuffer.remove() : 57 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 3,810,614 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 14024, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1908
Saving - Total: 1908
Saving mutants results file

- Mutation is: 93:ROR:==(int,int):<=(int,int):examples.RingBuffer@remove():157:start == dataCount() |==> start <= dataCount()
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93.dtrace.gz
Loaded invs from previous step: 1908
                                                                               [5:01:55 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93-objects.xml
Total loaded objects: 2529
[5:01:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:01:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:02:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:03:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 85 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 32 invocations
  examples.RingBuffer.remove() : 39 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 2,624 errors found in 4,028,785 samples (0.07%)
RingBufferTesterDriver.inv.gz: 134 false positives, out of 16317, which is 0.82%.
Preserving 66 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1908
Saving - Total: 1939
Saving mutants results file

- Mutation is: 94:ROR:==(int,int):>=(int,int):examples.RingBuffer@remove():157:start == dataCount() |==> start >= dataCount()
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m94.dtrace.gz
Loaded invs from previous step: 1939
                                                                               [5:04:47 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m94-objects.xml
Total loaded objects: 2529
[5:04:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:04:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:05:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:06:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1939
Saving - Total: 1939
Saving mutants results file

- Mutation is: 95:ROR:==(int,int):FALSE(int,int):examples.RingBuffer@remove():157:start == dataCount() |==> false
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m95.dtrace.gz
Loaded invs from previous step: 1939
                                                                               [5:07:40 PM]: Checking size of experiments/ringbuffer_remove/setup-files/mutantLoaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m95-objects.xml
Total loaded objects: 2529
[5:07:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:07:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:08:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:09:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 3,977,954 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1939
Saving - Total: 1939
Saving mutants results file

- Mutation is: 96:LVR:POS:0:examples.RingBuffer@remove():158:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m96.dtrace.gz
Loaded invs from previous step: 1939
                                                                               [5:10:24 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m96-objects.xml
Total loaded objects: 2529
[5:10:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:10:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:11:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:12:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1939
Saving - Total: 1939
Saving mutants results file

- Mutation is: 97:LVR:POS:NEG:examples.RingBuffer@remove():158:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m97.dtrace.gz
Loaded invs from previous step: 1939
                                                                               [5:13:15 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m97-objects.xml
Total loaded objects: 2529
[5:13:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:13:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:14:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:15:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1939
Saving - Total: 1939
Saving mutants results file

- Mutation is: 98:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@remove():158:start = 1 |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m98.dtrace.gz
Loaded invs from previous step: 1939
                                                                               [5:16:14 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m98-objects.xml
Total loaded objects: 2529
[5:16:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:16:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:17:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:18:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,015,251 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16317, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1939
Saving - Total: 1939
Saving mutants results file

- Mutation is: 99:STD:<INC>:<NO-OP>:examples.RingBuffer@remove():160:start++ |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99.dtrace.gz
Loaded invs from previous step: 1939
                                                                               [5:19:09 PM]:                                                                  [5:19:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBufLoaded objects from file: /specfuzzer/experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99-objects.xml
Total loaded objects: 2529
[5:19:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:19:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:23 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:27 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:38 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:39 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:40 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:41 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:42 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:43 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:44 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:45 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:46 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:47 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:48 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:49 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:50 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:51 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:52 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:53 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:54 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:55 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:56 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:57 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:58 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:20:59 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:00 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:01 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:02 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:03 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:04 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:05 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:06 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:07 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:08 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:09 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:10 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:11 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:12 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:13 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:14 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:15 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:16 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:17 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:18 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:19 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:20 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:21 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:22 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:24 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:25 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:26 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:28 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:29 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:30 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:31 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:32 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:33 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:34 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:35 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:36 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf[5:21:37 PM]: Reading experiments/ringbuffer_remove/setup-files/mutants/RingBuf
No return from procedure observed 85 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 32 invocations
  examples.RingBuffer.remove() : 39 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 2,624 errors found in 4,028,785 samples (0.07%)
RingBufferTesterDriver.inv.gz: 134 false positives, out of 16317, which is 0.82%.
Preserving 66 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1939
Saving - Total: 1939
Saving mutants results file

# Filtering step took minutes: 72
# Mutation killing ability results saved in: experiments/ringbuffer_remove/output/RingBuffer-remove-specfuzzer-1-invs-by-mutants.csv

# Writing assertions to file: experiments/ringbuffer_remove/output/RingBuffer-remove-specfuzzer-1.assertions

# Filtering specs with buckets
> Mutant filter from file: experiments/ringbuffer_remove/output/RingBuffer-remove-specfuzzer-1-invs-by-mutants.csv
Unique mutants: 14
Loading assertions from: experiments/ringbuffer_remove/output/RingBuffer-remove-specfuzzer-1.assertions
Specs killing mutants: 376

> Minimizing by exploring the bit vector of each spec
Building bit vectors of size: 14
Building buckets
=====================================
Buckets: 51
Vector: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
Specs:
	FuzzedInvariant ( some n : RingBuffer.data : n = null ) holds for: this l:  71  - Fails:  2385 Quality:  2385
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free> l:  95  - Fails:  2046 Quality:  2047
Picked:
	FuzzedInvariant ( some n : RingBuffer.data : n = null ) holds for: this

Vector: [1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start> l:  96  - Fails:  2121 Quality:  2122
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>

Vector: [1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free> l:  94  - Fails:  2067 Quality:  2068
Picked:
	FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start l:  64  - Fails:  18151 Quality:  18152
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.start l:  65  - Fails:  18151 Quality:  18152
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_> l:  120  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_> l:  113  - Fails:  16791 Quality:  16793
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.free> l:  109  - Fails:  15507 Quality:  15509
	this.start == 1 || this.start == 2 || this.start == 3 l:  53  - Fails:  13287 Quality:  13287
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.start l:  65  - Fails:  12356 Quality:  12357
	FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free> l:  109  - Fails:  12138 Quality:  12140
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free> l:  98  - Fails:  11807 Quality:  11809
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free> l:  115  - Fails:  11624 Quality:  11626
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  11542 Quality:  11544
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  11542 Quality:  11544
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free> l:  100  - Fails:  8072 Quality:  8074
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free> l:  99  - Fails:  8072 Quality:  8074
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free> l:  108  - Fails:  2567 Quality:  2569
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free> l:  125  - Fails:  638 Quality:  640
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  139  - Fails:  414 Quality:  417
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  352 Quality:  355
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)> l:  135  - Fails:  286 Quality:  289
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  140  - Fails:  286 Quality:  289
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)> l:  136  - Fails:  286 Quality:  289
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  286 Quality:  289
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  141  - Fails:  286 Quality:  289
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  286 Quality:  289
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  262 Quality:  265
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  166  - Fails:  36 Quality:  39
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  168  - Fails:  36 Quality:  39
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  167  - Fails:  36 Quality:  39
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  167  - Fails:  36 Quality:  39
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  167  - Fails:  36 Quality:  39
Picked:
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  16956 Quality:  16958
	FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  11548 Quality:  11550
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Specs:
	this.start == 1 l:  15  - Fails:  1632 Quality:  1632
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  108 Quality:  110
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  108 Quality:  110
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  144  - Fails:  68 Quality:  71
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  143  - Fails:  68 Quality:  71
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_> l:  130  - Fails:  18 Quality:  20
Picked:
	this.start == 1

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  133  - Fails:  5222 Quality:  5225
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  3920 Quality:  3923
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 1. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  144  - Fails:  5222 Quality:  5225
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  160  - Fails:  4227 Quality:  4230
	FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_> l:  99  - Fails:  383 Quality:  384
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  162  - Fails:  3348 Quality:  3351
	FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.capacity_> l:  112  - Fails:  1110 Quality:  1112
	FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free l:  63  - Fails:  1110 Quality:  1111
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_> l:  118  - Fails:  1068 Quality:  1070
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_> l:  117  - Fails:  724 Quality:  726
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)> l:  136  - Fails:  574 Quality:  577
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.start)> l:  132  - Fails:  494 Quality:  496
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.start)> l:  132  - Fails:  366 Quality:  368
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  140  - Fails:  310 Quality:  313
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  141  - Fails:  310 Quality:  313
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  141  - Fails:  310 Quality:  313
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, orig(this.start)> l:  137  - Fails:  310 Quality:  312
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  139  - Fails:  292 Quality:  295
	FuzzedInvariant ( (Integer_Variable_0 = 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  149  - Fails:  268 Quality:  271
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)> l:  136  - Fails:  268 Quality:  271
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.capacity_, orig(this.start)> l:  136  - Fails:  224 Quality:  226
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.capacity_, orig(this.start)> l:  137  - Fails:  224 Quality:  226
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  141  - Fails:  42 Quality:  45
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_> l:  129  - Fails:  42 Quality:  44
	FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_> l:  100  - Fails:  20 Quality:  21
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 0. 1. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free> l:  130  - Fails:  906 Quality:  908
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.start)> l:  119  - Fails:  206 Quality:  208
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  140  - Fails:  36 Quality:  39
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  168  - Fails:  36 Quality:  39
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.capacity_, orig(this.start)> l:  124  - Fails:  36 Quality:  38
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - -1 ) holds for: <this.capacity_, orig(this.start)> l:  110  - Fails:  36 Quality:  38
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>

Vector: [0. 1. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free> l:  108  - Fails:  364 Quality:  366
	FuzzedInvariant ( (Integer_Variable_0 = 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  150  - Fails:  280 Quality:  283
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_> l:  118  - Fails:  280 Quality:  282
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)> l:  133  - Fails:  280 Quality:  282
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free> l:  113  - Fails:  280 Quality:  282
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)> l:  120  - Fails:  280 Quality:  282
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)> l:  132  - Fails:  280 Quality:  282
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>

Vector: [0. 1. 1. 1. 1. 0. 1. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)> l:  131  - Fails:  280 Quality:  282
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  206 Quality:  209
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  145  - Fails:  494 Quality:  497
	FuzzedInvariant ( (Integer_Variable_0 > 1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  143  - Fails:  366 Quality:  369
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.start)> l:  133  - Fails:  366 Quality:  368
	FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_> l:  113  - Fails:  366 Quality:  368
	FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.start l:  64  - Fails:  366 Quality:  367
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_> l:  119  - Fails:  348 Quality:  350
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>

Vector: [0. 1. 1. 1. 1. 0. 1. 0. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != 1) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  145  - Fails:  280 Quality:  283
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != 1) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  141  - Fails:  200 Quality:  203
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  141  - Fails:  200 Quality:  203
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)> l:  136  - Fails:  200 Quality:  203
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  133  - Fails:  4566 Quality:  4569
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  4535 Quality:  4538
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  165  - Fails:  897 Quality:  900
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  159  - Fails:  897 Quality:  900
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  9177 Quality:  9180
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	this.free < this.capacity_ l:  26  - Fails:  985 Quality:  985
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_> l:  98  - Fails:  973 Quality:  975
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  973 Quality:  975
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_> l:  129  - Fails:  973 Quality:  975
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_> l:  134  - Fails:  973 Quality:  975
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_> l:  131  - Fails:  973 Quality:  975
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_> l:  130  - Fails:  973 Quality:  975
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  973 Quality:  975
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_> l:  102  - Fails:  973 Quality:  975
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_> l:  130  - Fails:  973 Quality:  975
Picked:
	this.free < this.capacity_

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  166  - Fails:  24 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_> l:  133  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_> l:  99  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  24 Quality:  26
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_> l:  130  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  24 Quality:  26
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>

Vector: [0. 1. 0. 1. 1. 1. 1. 0. 1. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  4227 Quality:  4230
	this.start < this.capacity_ l:  27  - Fails:  1137 Quality:  1137
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_> l:  135  - Fails:  1125 Quality:  1127
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_> l:  131  - Fails:  1125 Quality:  1127
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  1125 Quality:  1127
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  1125 Quality:  1127
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_> l:  132  - Fails:  1125 Quality:  1127
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  1125 Quality:  1127
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_> l:  99  - Fails:  1125 Quality:  1127
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  166  - Fails:  18 Quality:  21
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  160  - Fails:  18 Quality:  21
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  144  - Fails:  2199 Quality:  2202
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  122 Quality:  125
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  146  - Fails:  1320 Quality:  1323
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_> l:  130  - Fails:  1101 Quality:  1103
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_> l:  131  - Fails:  1101 Quality:  1103
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  160  - Fails:  891 Quality:  894
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>

Vector: [0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  24 Quality:  27
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>

Vector: [0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  139  - Fails:  30 Quality:  33
Picked:
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>

Vector: [0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  12 Quality:  15
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  167  - Fails:  12 Quality:  15
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  169  - Fails:  12 Quality:  15
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  168  - Fails:  12 Quality:  15
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  141  - Fails:  12 Quality:  15
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  167  - Fails:  12 Quality:  15
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  168  - Fails:  12 Quality:  15
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  12 Quality:  14
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_> l:  134  - Fails:  12 Quality:  14
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_> l:  100  - Fails:  12 Quality:  14
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_> l:  131  - Fails:  12 Quality:  14
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  12 Quality:  14
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  12 Quality:  14
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free> l:  114  - Fails:  174 Quality:  176
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, this.free> l:  100  - Fails:  68 Quality:  70
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>

Vector: [0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)> l:  136  - Fails:  182 Quality:  185
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  5414 Quality:  5416
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free> l:  109  - Fails:  7435 Quality:  7437
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.start l:  65  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.start l:  65  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.start l:  66  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_> l:  113  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_> l:  118  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  143  - Fails:  4611 Quality:  4614
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  148  - Fails:  4611 Quality:  4614
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free> l:  99  - Fails:  3735 Quality:  3737
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free> l:  100  - Fails:  3735 Quality:  3737
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free> l:  113  - Fails:  3552 Quality:  3554
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.free> l:  108  - Fails:  3527 Quality:  3529
	FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)> l:  116  - Fails:  350 Quality:  352
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)> l:  133  - Fails:  230 Quality:  232
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)> l:  132  - Fails:  230 Quality:  232
	FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.start)> l:  115  - Fails:  148 Quality:  150
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  108 Quality:  110
	FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  152  - Fails:  86 Quality:  89
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  150  - Fails:  86 Quality:  89
	FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  150  - Fails:  86 Quality:  89
	FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  155  - Fails:  86 Quality:  89
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  145  - Fails:  86 Quality:  89
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.capacity_, orig(this.start)> l:  137  - Fails:  86 Quality:  88
	FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, orig(this.start)> l:  120  - Fails:  86 Quality:  88
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)> l:  136  - Fails:  86 Quality:  88
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.start)> l:  132  - Fails:  86 Quality:  88
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.capacity_, orig(this.start)> l:  120  - Fails:  86 Quality:  88
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)> l:  131  - Fails:  86 Quality:  88
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.capacity_, orig(this.start)> l:  138  - Fails:  86 Quality:  88
	FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)> l:  120  - Fails:  86 Quality:  88
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)> l:  124  - Fails:  80 Quality:  82
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  145  - Fails:  9109 Quality:  9112
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  145  - Fails:  9109 Quality:  9112
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)> l:  134  - Fails:  632 Quality:  634
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)> l:  116  - Fails:  568 Quality:  570
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)> l:  105  - Fails:  534 Quality:  536
	FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)> l:  116  - Fails:  468 Quality:  470
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  394 Quality:  396
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  394 Quality:  396
	FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  147  - Fails:  300 Quality:  303
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.start)> l:  133  - Fails:  300 Quality:  302
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.start)> l:  115  - Fails:  296 Quality:  298
	FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)> l:  115  - Fails:  234 Quality:  236
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)> l:  115  - Fails:  156 Quality:  158
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.start)> l:  132  - Fails:  166 Quality:  168
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.start)>

Vector: [0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  146  - Fails:  380 Quality:  383
	FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  151  - Fails:  110 Quality:  113
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.capacity_, orig(this.start)> l:  137  - Fails:  110 Quality:  112
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)> l:  133  - Fails:  166 Quality:  168
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)>

Vector: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  31 Quality:  34
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  148  - Fails:  31 Quality:  34
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)> l:  119  - Fails:  22 Quality:  24
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)> l:  120  - Fails:  22 Quality:  24
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.free l:  64  - Fails:  16758 Quality:  16759
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.free l:  63  - Fails:  16758 Quality:  16759
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_> l:  119  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_> l:  102  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_> l:  112  - Fails:  15640 Quality:  15642
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.free l:  64  - Fails:  11463 Quality:  11464
	FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  10789 Quality:  10791
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  10789 Quality:  10791
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  10789 Quality:  10791
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free> l:  100  - Fails:  4065 Quality:  4067
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.free> l:  99  - Fails:  4065 Quality:  4067
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free> l:  95  - Fails:  1560 Quality:  1561
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)> l:  122  - Fails:  426 Quality:  428
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  382 Quality:  384
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.start, orig(this.start)> l:  102  - Fails:  382 Quality:  384
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  382 Quality:  384
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  382 Quality:  384
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, this.free> l:  126  - Fails:  371 Quality:  373
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free> l:  130  - Fails:  371 Quality:  373
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  260 Quality:  262
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  260 Quality:  262
	FuzzedInvariant ( (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  151  - Fails:  214 Quality:  217
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  164  - Fails:  214 Quality:  217
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  163  - Fails:  214 Quality:  217
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  214 Quality:  216
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  214 Quality:  216
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  214 Quality:  216
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, orig(this.start)> l:  101  - Fails:  214 Quality:  216
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.start)> l:  104  - Fails:  214 Quality:  216
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.start)> l:  121  - Fails:  212 Quality:  214
	FuzzedInvariant ( (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  154  - Fails:  196 Quality:  199
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  149  - Fails:  152 Quality:  155
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  152 Quality:  154
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)> l:  106  - Fails:  152 Quality:  154
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.start)> l:  106  - Fails:  150 Quality:  152
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  150 Quality:  152
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)> l:  137  - Fails:  46 Quality:  48
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)> l:  133  - Fails:  46 Quality:  48
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.free

Vector: [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	this.start <= this.free l:  23  - Fails:  15673 Quality:  15673
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  161  - Fails:  14747 Quality:  14750
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free> l:  99  - Fails:  12450 Quality:  12452
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free> l:  99  - Fails:  12450 Quality:  12452
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free> l:  98  - Fails:  12450 Quality:  12452
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free> l:  99  - Fails:  12450 Quality:  12452
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.free> l:  99  - Fails:  12450 Quality:  12452
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free> l:  95  - Fails:  12450 Quality:  12452
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free> l:  129  - Fails:  12354 Quality:  12356
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  148  - Fails:  294 Quality:  297
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.start)> l:  104  - Fails:  294 Quality:  296
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, orig(this.start)> l:  100  - Fails:  294 Quality:  296
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.start)> l:  137  - Fails:  294 Quality:  296
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)> l:  104  - Fails:  294 Quality:  296
	this.free > \old(this.start) l:  28  - Fails:  294 Quality:  294
	FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.start)> l:  114  - Fails:  290 Quality:  292
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, orig(this.start)> l:  131  - Fails:  286 Quality:  288
	FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  150  - Fails:  152 Quality:  155
	FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  152  - Fails:  74 Quality:  77
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  152  - Fails:  74 Quality:  77
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  141  - Fails:  24 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  153  - Fails:  24 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  167  - Fails:  24 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  173  - Fails:  24 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  169  - Fails:  24 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  167  - Fails:  24 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  168  - Fails:  24 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)> l:  153  - Fails:  24 Quality:  27
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.capacity_, orig(this.start)> l:  110  - Fails:  24 Quality:  26
	FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, orig(this.start)> l:  119  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.capacity_, orig(this.start)> l:  109  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.capacity_, orig(this.start)> l:  109  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.capacity_, orig(this.start)> l:  110  - Fails:  24 Quality:  26
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.capacity_, orig(this.start)> l:  136  - Fails:  24 Quality:  26
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, orig(this.start)> l:  140  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)> l:  106  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, orig(this.start)> l:  110  - Fails:  24 Quality:  26
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, orig(this.start)> l:  142  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)> l:  105  - Fails:  24 Quality:  26
Picked:
	this.start <= this.free

Vector: [0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  19368 Quality:  19371
	this.capacity_ > \old(this.start) l:  33  - Fails:  164 Quality:  164
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  80 Quality:  82
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  150  - Fails:  12 Quality:  15
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>

Vector: [0. 0. 0. 0. 1. 0. 1. 0. 1. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  4535 Quality:  4538
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5267 Quality:  5269
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  5267 Quality:  5269
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5267 Quality:  5269
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5267 Quality:  5269
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_> l:  100  - Fails:  5267 Quality:  5269
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5267 Quality:  5269
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.free l:  65  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.free l:  64  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.free l:  64  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, this.capacity_> l:  112  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_> l:  117  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.free> l:  125  - Fails:  3883 Quality:  3885
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.free> l:  126  - Fails:  3883 Quality:  3885
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free> l:  100  - Fails:  208 Quality:  210
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free> l:  130  - Fails:  183 Quality:  185
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  122 Quality:  124
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.start, orig(this.start)> l:  115  - Fails:  120 Quality:  122
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)> l:  120  - Fails:  120 Quality:  122
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.start)> l:  106  - Fails:  64 Quality:  66
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  62 Quality:  64
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < 1) ) holds for: <this.free, orig(this.start)> l:  114  - Fails:  62 Quality:  64
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.start)> l:  119  - Fails:  62 Quality:  64
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free> l:  113  - Fails:  62 Quality:  64
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)> l:  106  - Fails:  62 Quality:  64
	FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  149  - Fails:  56 Quality:  59
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <this.start, this.free> l:  125  - Fails:  25 Quality:  27
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)> l:  137  - Fails:  20 Quality:  22
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  154  - Fails:  6 Quality:  9
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.start)> l:  114  - Fails:  4 Quality:  6
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, orig(this.start)> l:  120  - Fails:  4 Quality:  6
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.start)> l:  121  - Fails:  4 Quality:  6
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.start)> l:  106  - Fails:  2 Quality:  4
Picked:
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.free

Vector: [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_> l:  134  - Fails:  5243 Quality:  5245
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.capacity_ l:  68  - Fails:  5243 Quality:  5244
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.capacity_ l:  69  - Fails:  5243 Quality:  5244
	this.start <= this.capacity_ l:  28  - Fails:  4154 Quality:  4154
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.capacity_> l:  94  - Fails:  1946 Quality:  1947
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_ l:  69  - Fails:  5237 Quality:  5238
Picked:
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_> l:  102  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, this.capacity_> l:  99  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_> l:  133  - Fails:  4537 Quality:  4539
	this.free <= this.capacity_ l:  27  - Fails:  3588 Quality:  3588
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_> l:  100  - Fails:  1498 Quality:  1499
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  6 Quality:  8
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_> l:  130  - Fails:  6 Quality:  8
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  6 Quality:  8
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_> l:  131  - Fails:  6 Quality:  8
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.capacity_ l:  70  - Fails:  6 Quality:  7
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.capacity_ l:  69  - Fails:  6 Quality:  7
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.capacity_ l:  69  - Fails:  6 Quality:  7
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m91.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  162  - Fails:  80 Quality:  83
	FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  148  - Fails:  80 Quality:  83
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  168  - Fails:  80 Quality:  83
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)> l:  164  - Fails:  80 Quality:  83
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, orig(this.start)> l:  101  - Fails:  80 Quality:  82
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)> l:  135  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)> l:  105  - Fails:  80 Quality:  82
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  166  - Fails:  6 Quality:  9
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  172  - Fails:  6 Quality:  9
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  6 Quality:  9
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)> l:  140  - Fails:  6 Quality:  9
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m93.dtrace.gz
	experiments/ringbuffer_remove/setup-files/mutants/RingBufferTesterDriver-m99.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)> l:  105  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.start)> l:  105  - Fails:  80 Quality:  82
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)> l:  136  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.start, orig(this.start)> l:  101  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)> l:  105  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, orig(this.start)> l:  102  - Fails:  80 Quality:  82
	FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)> l:  115  - Fails:  80 Quality:  82
	FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  80 Quality:  82
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, orig(this.start)> l:  132  - Fails:  80 Quality:  82
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)> l:  138  - Fails:  80 Quality:  82
	this.start > \old(this.start) l:  29  - Fails:  80 Quality:  80
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>

Buckets: 51
Specs: 51
Saved in file: experiments/ringbuffer_remove/output/RingBuffer-remove-specfuzzer-1-buckets.assertions

