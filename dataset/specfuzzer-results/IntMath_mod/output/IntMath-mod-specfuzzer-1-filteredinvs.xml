<object-stream>
  <set>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 != 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 + 0 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 1) implies (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) implies (Integer_Variable_1 = 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &lt;= Integer_Variable_1 + Integer_Variable_2 ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) or (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= 0 ) holds for: orig(m)</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 &lt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 &lt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &lt;= Integer_Variable_1 + Integer_Variable_2 ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 = -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &lt;= 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= 1 ) holds for: orig(m)</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) xor (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 - Integer_Variable_2 ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= 0 ) holds for: return</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) xor (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) implies (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 &lt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 + -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - Integer_Variable_2 ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) or (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 - Integer_Variable_2 ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) or (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - Integer_Variable_2 ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) implies (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 + 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &gt; 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) implies (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) implies (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) iff (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 1) implies (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) or (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; -1 ) holds for: orig(m)</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &lt; 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= -1 ) holds for: orig(m)</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 * -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 * 0 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) xor (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) or (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) implies (Integer_Variable_1 = -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 != 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 = 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 / 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &lt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= -1 ) holds for: return</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) iff (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 * -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; 0 ) holds for: orig(m)</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt; 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) iff (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) xor (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 &lt; 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 * 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) implies (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) or (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - Integer_Variable_2 ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &lt; 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 / -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; -1 ) holds for: return</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) xor (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 % -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 = 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) iff (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 % 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 * 0 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) implies (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 &lt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - 0 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) iff (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 * 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &lt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) iff (Integer_Variable_1 = -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) implies (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 - 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &lt; Integer_Variable_1 + Integer_Variable_2 ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) iff (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 % 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 != 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 - 0 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 &lt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) xor (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) iff (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(m)</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) xor (Integer_Variable_1 &lt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) xor (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) xor (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) xor (Integer_Variable_1 &lt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) or (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 + -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) xor (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 != 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 / -1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) xor (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) xor (Integer_Variable_1 &lt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 &lt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &lt; -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 != 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &lt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 1) or (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &lt;= Integer_Variable_1 + Integer_Variable_2 ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 &lt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - Integer_Variable_2 ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 &gt; -1) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) or (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) implies (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(x) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= -1) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) or (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 != 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) implies (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 0) iff (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; -1) or (Integer_Variable_1 = -1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 / 1 ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 1) implies (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= 1) or (Integer_Variable_1 &gt;= -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= -1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 &gt;= 0) ) holds for: &lt;orig(x), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; -1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(x) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != -1) ) holds for: &lt;orig(x), orig(m)&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 0) or (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) implies (Integer_Variable_1 &lt; 1) ) holds for: &lt;orig(m), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(m) , orig(m) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 % -1 ) holds for: &lt;orig(m), return&gt;</string>
  </set>
</object-stream>