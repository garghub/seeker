> SpecFuzzer
# Inference step (Daikon + Fuzzed Specs)
Daikon version 5.8.2, released May 4, 2020; http://plse.cs.washington.edu/daikon.

Loading invariants from file: invs_file.xml
Loaded: 0

Fuzzing specs:
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 <= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 != 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < 0)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != -1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 >= 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1)
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= 1)
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 >= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 > -1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + -1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) xor (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= -1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 > 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != 0
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > -1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= -1)
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 >= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= -1)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(RingBuffer.data)
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 > 1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 0)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= -1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != -1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= 0)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < -1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) xor (Integer_Variable_1 = 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 != 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 < Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) xor (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = -1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = -1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= 0)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 1)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 0)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < 1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - -1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= -1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = 1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 0
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < -1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < 0)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 1)
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) implies (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = -1)
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 != 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) implies (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > -1)
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + -1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > -1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= 0
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= 1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = 1)
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) or (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 = 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != 0)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) xor (Integer_Variable_1 < 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + -1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > -1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + -1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 > -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= -1)
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % -1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 <= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 > 0)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 > 1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) iff (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = -1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) or (Integer_Variable_1 < 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > 0
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 0)
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 >= 1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < 1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) or (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 < 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != -1) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) implies (Integer_Variable_1 != 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 > 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Unique fuzzed invariants: 520 (2000)
Unary: 24 - Binary: 177 - Ternary: 319 - Discarded: 177
Reading declaration files Processing trace data; reading 1 dtrace file:
Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/RingBufferTesterDriver-objects.xml
Total loaded objects: 2529

No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
examples.RingBuffer:::OBJECT
FuzzedInvariant ( some n : RingBuffer.data : n = null ) holds for: this
this.data != null
this.start one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.free
this.free >= 1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.capacity_
size(this.data[]) >= 1
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.capacity_>
this.start <= this.free
this.start <= this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_>
this.free <= this.capacity_
===========================================================================
examples.RingBuffer.RingBuffer(int):::ENTER
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: n
===========================================================================
examples.RingBuffer.RingBuffer(int):::EXIT
this.start == this.free
this.capacity_ == orig(n)
this.data[] == [null]
this.data[] elements == null
this.data[].getClass().getName() == [null]
this.data[].getClass().getName() elements == null
this.start == 1
size(this.data[]) == 1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
===========================================================================
examples.RingBuffer.capacity():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.capacity():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == return
return == orig(this.capacity_)
this.free one of { 1, 2, 3 }
return one of { 1, 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: return
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, return>
this.start <= return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, return>
this.free <= return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
===========================================================================
examples.RingBuffer.count():::ENTER
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.capacity_ % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.count():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
return one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.capacity_ % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, return>
this.free > return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
this.capacity_ > return
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.dataCount():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.dataCount():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
return one of { 2, 9, 11 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, return>
this.start < return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, return>
this.free < return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
this.capacity_ < return
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.extend(java.lang.Object):::ENTER
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
a_value.getClass().getName() == java.lang.String.class
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.extend(java.lang.Object):::EXIT
this.data == orig(this.data)
this.start == orig(this.start)
this.capacity_ == orig(this.capacity_)
size(this.data[])-1 == orig(size(this.data[]))
this.start one of { 1, 2 }
this.free one of { 2, 3, 4 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 2, 3, 4 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.data[]))-1
orig(a_value.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.free)>
orig(this.free) % this.start == 0
this.start <= orig(this.free)
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.free)>
this.free > orig(this.free)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <orig(this.free), this.capacity_>
this.capacity_ > orig(this.free)
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isEmpty():::ENTER
this.free one of { 1, 2, 3 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
(return == false)  <==>  (this.start < this.free)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[]))
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[]))
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (size(this.data[]) one of { 2, 3 })
(return == false)  ==>  (this.capacity_ one of { 8, 10 })
(return == false)  ==>  (this.free < this.capacity_)
(return == false)  ==>  (this.free one of { 2, 3 })
(return == false)  ==>  (this.start < this.capacity_)
(return == false)  ==>  (this.start one of { 1, 2 })
(return == true)  <==>  (this.start == this.free)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.start, return>)
(return == true)  ==>  (size(this.data[]) one of { 1, 2, 3 })
(return == true)  ==>  (this.free one of { 1, 2, 3 })
(return == true)  ==>  (this.start one of { 1, 2, 3 })
this.free one of { 1, 2, 3 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT;condition="return == true"
this.start == this.free
this.start == orig(this.free)
return == true
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT;condition="not(return == true)"
this.start one of { 1, 2 }
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
return == false
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isFull():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isFull():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
return == false
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isFull():::EXIT;condition="not(return == true)"
===========================================================================
examples.RingBuffer.item():::ENTER
this.start one of { 1, 2 }
this.free one of { 2, 3 }
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.item():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 1, 2 }
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ == 8
return.getClass().getName() == java.lang.String.class
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
return.getClass().getName() in this.data[].getClass().getName()
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.remove():::ENTER
this.start one of { 1, 2 }
this.free one of { 2, 3 }
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, this.start>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.capacity_, this.start>
this.start < this.capacity_
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
===========================================================================
examples.RingBuffer.remove():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.start
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)>
this.start > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, orig(this.start)>
this.free > orig(this.start)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 + 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 + 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.capacity_, orig(this.start)>
this.capacity_ > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
===========================================================================
examples.RingBuffer.wipeOut():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
===========================================================================
examples.RingBuffer.wipeOut():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == this.free
this.start == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)>
this.start >= orig(this.start)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= -1) or (Integer_Variable_1 = 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_>
this.capacity_ > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
Exiting Daikon.

# Filtering step

- Mutation is: 1:LVR:0:POS:examples.RingBuffer@<init>(int):47:0 |==> 1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m1.dtrace.gz
Loaded invs from previous step: 0
                                                                               [5:25:27 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m1-objects.xml
Total loaded objects: 2500
[5:25:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:25:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:26:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 94 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 24 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 37 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,446,041 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 18335, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 10:AOR:+(int,int):-(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n - 1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m10.dtrace.gz
Loaded invs from previous step: 0
                                                                               [5:27:57 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m10-objects.xml
Total loaded objects: 2529
[5:27:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:27:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:28:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:29:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,464,922 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 18335, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 100:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@wipeOut():173:start = free |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m100.dtrace.gz
Loaded invs from previous step: 0
                                                                               [5:30:37 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m100-objects.xml
Total loaded objects: 2530
[5:30:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:30:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:31:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:32:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 86 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 39 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 128 errors found in 4,472,072 samples (0.00%)
RingBufferTesterDriver.inv.gz: 6 false positives, out of 18335, which is 0.03%.
Preserving 2 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 2
Saving mutants results file

- Mutation is: 101:LVR:TRUE:FALSE:examples.RingBuffer@wipeOut():174:true |==> false
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m101.dtrace.gz
Loaded invs from previous step: 2
                                                                               [5:33:15 PM]:                                                                  Saving mutants results file

- Mutation is: 11:AOR:+(int,int):/(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n / 1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m11.dtrace.gz
Loaded invs from previous step: 2
                                                                               [5:33:16 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m11-objects.xml
Total loaded objects: 2529
[5:33:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:33:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:34:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
[5:35:53 PM]: Finished reading experiments/ringbuffer_wipeOut/setup-files/mutan  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,464,922 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 18335, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2
Saving - Total: 2
Saving mutants results file

- Mutation is: 12:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):49:data = new ArrayList<G>(n + 1) |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m12.dtrace.gz
Loaded invs from previous step: 2
                                                                               [5:35:54 PM]:                                                                  
No return from procedure observed 286 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 286 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 0 samples (NaN%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 0, which is NaN%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2
Saving - Total: 2
Saving mutants results file

- Mutation is: 13:STD:<CALL>:<NO-OP>:examples.RingBuffer@<init>(int):50:data.add(null) |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
Loaded invs from previous step: 2
                                                                               [5:35:55 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m13-objects.xml
Total loaded objects: 2500
[5:35:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:35:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:36:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:37:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 97 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 44 invocations
  examples.RingBuffer.remove() : 39 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 106,043 errors found in 4,380,620 samples (2.42%)
RingBufferTesterDriver.inv.gz: 477 false positives, out of 18335, which is 2.60%.
Preserving 107 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2
Saving - Total: 108
                                                                               Saving mutants results file

- Mutation is: 14:LVR:POS:0:examples.RingBuffer@<init>(int):51:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
Loaded invs from previous step: 108
                                                                               [5:38:31 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14-objects.xml
Total loaded objects: 2572
[5:38:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:38:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:39:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:40:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 28 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.remove() : 8 invocations
  examples.RingBuffer.item() : 6 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 341,076 errors found in 3,951,079 samples (8.63%)
RingBufferTesterDriver.inv.gz: 2378 false positives, out of 18335, which is 12.97%.
Preserving 650 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 108
Saving - Total: 742
Saving mutants results file

- Mutation is: 15:LVR:POS:NEG:examples.RingBuffer@<init>(int):51:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
Loaded invs from previous step: 742
                                                                               [5:41:02 PM]:                                                                  [5:41:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBuLoaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15-objects.xml
Total loaded objects: 2497
[5:41:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:41:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:42:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 73 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 52 invocations
  examples.RingBuffer.remove() : 7 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 427,682 errors found in 3,752,077 samples (11.40%)
RingBufferTesterDriver.inv.gz: 3549 false positives, out of 18335, which is 19.36%.
Preserving 811 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 742
Saving - Total: 991
Saving mutants results file

- Mutation is: 16:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):51:start = 1 |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Loaded invs from previous step: 991
                                                                               [5:43:30 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16-objects.xml
Total loaded objects: 2572
[5:43:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:43:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:44:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:45:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 28 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.remove() : 8 invocations
  examples.RingBuffer.item() : 6 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 341,076 errors found in 3,951,079 samples (8.63%)
RingBufferTesterDriver.inv.gz: 2378 false positives, out of 18335, which is 12.97%.
Preserving 650 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 991
Saving - Total: 991
Saving mutants results file

- Mutation is: 17:LVR:POS:0:examples.RingBuffer@<init>(int):52:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
Loaded invs from previous step: 991
                                                                               [5:46:25 PM]:                                                                  [5:46:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBuLoaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17-objects.xml
Total loaded objects: 2528
[5:46:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:46:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:47:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:48:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:49:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:49:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 74 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 17 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 484,448 errors found in 4,408,959 samples (10.99%)
RingBufferTesterDriver.inv.gz: 4353 false positives, out of 18335, which is 23.74%.
Preserving 1107 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 991
Saving - Total: 1519
Saving mutants results file

- Mutation is: 18:LVR:POS:NEG:examples.RingBuffer@<init>(int):52:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Loaded invs from previous step: 1519
                                                                               [5:49:58 PM]:                                                                  [5:49:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBuLoaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18-objects.xml
Total loaded objects: 2547
[5:50:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:50:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:51:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:52:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 66 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 9 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 619,976 errors found in 4,498,722 samples (13.78%)
RingBufferTesterDriver.inv.gz: 6233 false positives, out of 18335, which is 34.00%.
Preserving 1358 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 1519
Saving - Total: 1716
Saving mutants results file

- Mutation is: 19:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):52:free = 1 |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Loaded invs from previous step: 1716
                                                                               [5:53:33 PM]:                                                                  [5:53:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBuLoaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19-objects.xml
Total loaded objects: 2528
[5:53:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:53:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:54:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:55:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 74 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 17 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 484,448 errors found in 4,408,959 samples (10.99%)
RingBufferTesterDriver.inv.gz: 4353 false positives, out of 18335, which is 23.74%.
Preserving 1107 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 1716
Saving - Total: 1716
Saving mutants results file

- Mutation is: 2:LVR:0:NEG:examples.RingBuffer@<init>(int):47:0 |==> -1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
Loaded invs from previous step: 1716
                                                                               [5:56:33 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m2-objects.xml
Total loaded objects: 2533
[5:56:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:56:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:57:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:58:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 83 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 10 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 432 errors found in 4,466,914 samples (0.01%)
RingBufferTesterDriver.inv.gz: 108 false positives, out of 18335, which is 0.59%.
Preserving 60 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1716
Saving - Total: 1750
Saving mutants results file

- Mutation is: 20:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):53:capacity_ = n |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Loaded invs from previous step: 1750
                                                                               [5:59:22 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20-objects.xml
Total loaded objects: 2278
[5:59:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[5:59:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:00:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 158 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 32 invocations
  examples.RingBuffer.remove() : 38 invocations
  examples.RingBuffer.extend(java.lang.Object) : 74 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 795,813 errors found in 3,355,207 samples (23.72%)
RingBufferTesterDriver.inv.gz: 2694 false positives, out of 11330, which is 23.78%.
Preserving 680 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 1750
Saving - Total: 2094
Saving mutants results file

- Mutation is: 3:ROR:>(int,int):!=(int,int):examples.RingBuffer@<init>(int):47:n > 0 |==> n != 0
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Loaded invs from previous step: 2094
                                                                               [6:01:50 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3-objects.xml
Total loaded objects: 2532
[6:01:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:01:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:02:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:03:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 84 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 11 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 351 errors found in 4,466,416 samples (0.01%)
RingBufferTesterDriver.inv.gz: 117 false positives, out of 18335, which is 0.64%.
Preserving 64 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2094
Saving - Total: 2114
Saving mutants results file

- Mutation is: 4:ROR:>(int,int):>=(int,int):examples.RingBuffer@<init>(int):47:n > 0 |==> n >= 0
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Loaded invs from previous step: 2114
                                                                               [6:04:53 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m4-objects.xml
Total loaded objects: 2533
[6:04:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:04:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:05:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:06:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:07:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 83 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 10 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 432 errors found in 4,466,914 samples (0.01%)
RingBufferTesterDriver.inv.gz: 108 false positives, out of 18335, which is 0.59%.
Preserving 60 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2114
Saving - Total: 2114
Saving mutants results file

- Mutation is: 5:ROR:>(int,int):FALSE(int,int):examples.RingBuffer@<init>(int):47:n > 0 |==> false
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m5.dtrace.gz
Loaded invs from previous step: 2114
                                                                               [6:07:46 PM]:                                                                  
No return from procedure observed 286 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 286 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 0 samples (NaN%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 0, which is NaN%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2114
Saving - Total: 2114
Saving mutants results file

- Mutation is: 6:LVR:POS:0:examples.RingBuffer@<init>(int):49:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m6.dtrace.gz
Loaded invs from previous step: 2114
                                                                               [6:08:15 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m6-objects.xml
Total loaded objects: 2529
[6:08:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:08:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:09:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:10:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,464,922 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 18335, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2114
Saving - Total: 2114
Saving mutants results file

- Mutation is: 7:LVR:POS:NEG:examples.RingBuffer@<init>(int):49:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m7.dtrace.gz
Loaded invs from previous step: 2114
                                                                               [6:11:22 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m7-objects.xml
Total loaded objects: 2529
[6:11:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:11:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:12:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:13:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,464,922 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 18335, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2114
Saving - Total: 2114
Saving mutants results file

- Mutation is: 8:AOR:+(int,int):%(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n % 1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m8.dtrace.gz
Loaded invs from previous step: 2114
                                                                               [6:14:26 PM]:                                                                  [6:14:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBuLoaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m8-objects.xml
Total loaded objects: 2529
[6:14:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:14:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:15:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:16:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,464,922 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 18335, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2114
Saving - Total: 2114
Saving mutants results file

- Mutation is: 9:AOR:+(int,int):*(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n RingBufferTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log hs_err_pid51463.log hs_err_pid53479.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers 1
Checking invs on mutant: experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m9.dtrace.gz
Loaded invs from previous step: 2114
                                                                               [6:17:26 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m9-objects.xml
Total loaded objects: 2529
[6:17:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:17:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:58 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:18:59 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:00 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:01 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:02 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:03 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:04 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:05 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:06 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:07 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:08 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:09 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:10 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:11 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:12 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:13 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:14 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:15 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:16 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:17 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:18 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:19 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:20 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:21 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:22 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:23 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:24 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:25 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:26 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:27 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:28 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:29 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:30 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:31 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:32 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:33 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:34 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:35 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:36 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:37 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:38 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:39 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:40 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:41 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:42 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:43 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:44 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:45 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:46 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:47 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:48 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:49 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:50 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:51 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:52 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:53 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:54 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:55 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:56 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu[6:19:57 PM]: Reading experiments/ringbuffer_wipeOut/setup-files/mutants/RingBu
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,464,922 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 18335, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 2114
Saving - Total: 2114
Saving mutants results file

# Filtering step took minutes: 55
# Mutation killing ability results saved in: experiments/ringbuffer_wipeOut/output/RingBuffer-wipeOut-specfuzzer-1-invs-by-mutants.csv

# Writing assertions to file: experiments/ringbuffer_wipeOut/output/RingBuffer-wipeOut-specfuzzer-1.assertions

# Filtering specs with buckets
> Mutant filter from file: experiments/ringbuffer_wipeOut/output/RingBuffer-wipeOut-specfuzzer-1-invs-by-mutants.csv
Unique mutants: 13
Loading assertions from: experiments/ringbuffer_wipeOut/output/RingBuffer-wipeOut-specfuzzer-1.assertions
Specs killing mutants: 219

> Minimizing by exploring the bit vector of each spec
Building bit vectors of size: 13
Building buckets
=====================================
Buckets: 32
Vector: [1. 1. 0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m100.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m101.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	this.start == this.free l:  23  - Fails:  3348 Quality:  3348
Picked:
	this.start == this.free

Vector: [1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m100.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m101.dtrace.gz
Specs:
	this.start == \old(this.free) l:  29  - Fails:  84 Quality:  84
Picked:
	this.start == \old(this.free)

Vector: [1. 1. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m100.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m101.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.start> l:  95  - Fails:  396 Quality:  397
Picked:
	FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.start>

Vector: [1. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m100.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m101.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.start> l:  96  - Fails:  306 Quality:  307
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.start>

Vector: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
Specs:
	daikon.Quant.size(this.data) == 1 || daikon.Quant.size(this.data) == 2 || daikon.Quant.size(this.data) == 3 l:  107  - Fails:  3317 Quality:  3317
	FuzzedInvariant ( some n : RingBuffer.data : n = null ) holds for: this l:  71  - Fails:  2385 Quality:  2385
	daikon.Quant.size(this.data) == 1 l:  33  - Fails:  544 Quality:  544
Picked:
	daikon.Quant.size(this.data) == 1 || daikon.Quant.size(this.data) == 2 || daikon.Quant.size(this.data) == 3
	daikon.Quant.size(this.data) == 1

Vector: [0. 0. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start> l:  96  - Fails:  2080 Quality:  2081
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>

Vector: [0. 0. 0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start l:  64  - Fails:  18151 Quality:  18152
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.start l:  65  - Fails:  18151 Quality:  18152
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_> l:  120  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  16950 Quality:  16952
	this.start == 1 || this.start == 2 || this.start == 3 l:  53  - Fails:  13287 Quality:  13287
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.start l:  65  - Fails:  12356 Quality:  12357
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  11542 Quality:  11544
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  11542 Quality:  11544
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  11434 Quality:  11436
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)> l:  133  - Fails:  1182 Quality:  1184
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)> l:  132  - Fails:  932 Quality:  934
	FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.start)> l:  116  - Fails:  800 Quality:  802
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <orig(this.start), this.capacity_> l:  109  - Fails:  514 Quality:  516
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  514 Quality:  516
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <orig(this.start), this.capacity_> l:  121  - Fails:  514 Quality:  516
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_> l:  109  - Fails:  514 Quality:  516
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_> l:  126  - Fails:  514 Quality:  516
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_> l:  121  - Fails:  514 Quality:  516
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_> l:  111  - Fails:  350 Quality:  352
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  350 Quality:  352
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <orig(this.start), this.capacity_> l:  120  - Fails:  350 Quality:  352
	FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_ l:  69  - Fails:  36 Quality:  37
	FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_> l:  100  - Fails:  17 Quality:  18
Picked:
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start

Vector: [0. 0. 0. 1. 1. 1. 1. 1. 1. 0. 0. 1. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_> l:  115  - Fails:  16956 Quality:  16958
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_> l:  115  - Fails:  16956 Quality:  16958
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Specs:
	this.start == 1 l:  15  - Fails:  1632 Quality:  1632
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  108 Quality:  110
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_> l:  132  - Fails:  18 Quality:  20
Picked:
	this.start == 1

Vector: [0. 0. 0. 1. 1. 1. 1. 1. 1. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  6149 Quality:  6151
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  1125 Quality:  1127
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  1125 Quality:  1127
	FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_ l:  68  - Fails:  1125 Quality:  1126
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  140  - Fails:  654 Quality:  657
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <orig(this.start), this.capacity_> l:  120  - Fails:  654 Quality:  656
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  141  - Fails:  608 Quality:  611
	FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_> l:  99  - Fails:  380 Quality:  381
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_> l:  135  - Fails:  5420 Quality:  5422
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 1. 0. 1. 1. 1. 1. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	this.start < this.capacity_ l:  27  - Fails:  1128 Quality:  1128
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_> l:  132  - Fails:  1119 Quality:  1121
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_> l:  99  - Fails:  1119 Quality:  1121
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  1119 Quality:  1121
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  1119 Quality:  1121
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  1119 Quality:  1121
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  1119 Quality:  1121
Picked:
	this.start < this.capacity_

Vector: [0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_> l:  100  - Fails:  12 Quality:  14
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  12 Quality:  14
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  12 Quality:  14
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  12 Quality:  14
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  12 Quality:  14
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_> l:  132  - Fails:  1101 Quality:  1103
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_> l:  130  - Fails:  1101 Quality:  1103
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 1. 0. 1. 1. 1. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_> l:  113  - Fails:  30 Quality:  32
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_> l:  130  - Fails:  30 Quality:  32
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.start l:  65  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.start l:  65  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.start l:  66  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_> l:  119  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.start)> l:  116  - Fails:  350 Quality:  352
	FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)> l:  118  - Fails:  350 Quality:  352
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)> l:  121  - Fails:  228 Quality:  230
	FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <orig(this.start), this.capacity_> l:  125  - Fails:  164 Quality:  166
	FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_> l:  122  - Fails:  164 Quality:  166
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_> l:  111  - Fails:  164 Quality:  166
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <orig(this.start), this.capacity_> l:  120  - Fails:  164 Quality:  166
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <orig(this.start), this.capacity_> l:  120  - Fails:  164 Quality:  166
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  164 Quality:  166
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  164 Quality:  166
Picked:
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.start

Vector: [0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_> l:  116  - Fails:  5414 Quality:  5416
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  5414 Quality:  5416
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  57 Quality:  59
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  57 Quality:  59
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  57 Quality:  59
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)> l:  117  - Fails:  568 Quality:  570
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)> l:  117  - Fails:  568 Quality:  570
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)> l:  105  - Fails:  534 Quality:  536
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  534 Quality:  536
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)> l:  105  - Fails:  534 Quality:  536
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  394 Quality:  396
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  394 Quality:  396
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  394 Quality:  396
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  394 Quality:  396
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  286 Quality:  288
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>

Vector: [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)> l:  120  - Fails:  120 Quality:  122
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>

Vector: [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.free l:  63  - Fails:  16758 Quality:  16759
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.free l:  64  - Fails:  16758 Quality:  16759
	FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_> l:  114  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1) ) holds for: <this.free, this.capacity_> l:  114  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_> l:  102  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_> l:  119  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_> l:  102  - Fails:  15760 Quality:  15762
	this.start <= this.free l:  23  - Fails:  15593 Quality:  15593
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.free l:  64  - Fails:  11463 Quality:  11464
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  10789 Quality:  10791
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  10789 Quality:  10791
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  10709 Quality:  10711
	FuzzedInvariant ( (Integer_Variable_0 <= 0) implies (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)> l:  122  - Fails:  426 Quality:  428
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  169  - Fails:  382 Quality:  385
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  382 Quality:  384
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  382 Quality:  384
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)> l:  133  - Fails:  382 Quality:  384
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / 1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  382 Quality:  384
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)> l:  105  - Fails:  382 Quality:  384
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.start, orig(this.start)> l:  102  - Fails:  382 Quality:  384
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)> l:  136  - Fails:  382 Quality:  384
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)> l:  137  - Fails:  382 Quality:  384
	this.start >= \old(this.start) l:  30  - Fails:  382 Quality:  382
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  260 Quality:  262
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  141  - Fails:  46 Quality:  49
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_> l:  130  - Fails:  18 Quality:  20
Picked:
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.free

Vector: [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_> l:  134  - Fails:  4657 Quality:  4659
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  140  - Fails:  588 Quality:  591
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  168  - Fails:  522 Quality:  525
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  141  - Fails:  522 Quality:  525
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  167  - Fails:  522 Quality:  525
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  141  - Fails:  448 Quality:  451
	this.capacity_ > \old(this.start) l:  33  - Fails:  158 Quality:  158
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <this.free, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  80 Quality:  82
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5261 Quality:  5263
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5261 Quality:  5263
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_> l:  100  - Fails:  5261 Quality:  5263
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5261 Quality:  5263
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 1. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_> l:  134  - Fails:  24 Quality:  26
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 1. 0. 1.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5255 Quality:  5257
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_> l:  135  - Fails:  5255 Quality:  5257
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_> l:  132  - Fails:  5255 Quality:  5257
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  5255 Quality:  5257
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.free l:  65  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.free l:  64  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.free l:  64  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_> l:  115  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_> l:  118  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  153  - Fails:  140 Quality:  143
	FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  151  - Fails:  140 Quality:  143
	FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  156  - Fails:  140 Quality:  143
	FuzzedInvariant ( (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  156  - Fails:  140 Quality:  143
	FuzzedInvariant ( (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)> l:  121  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  140 Quality:  142
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)> l:  116  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)> l:  107  - Fails:  122 Quality:  124
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)> l:  106  - Fails:  122 Quality:  124
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  40 Quality:  42
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  40 Quality:  42
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / -1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  40 Quality:  42
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)> l:  137  - Fails:  20 Quality:  22
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.start)> l:  116  - Fails:  2 Quality:  4
Picked:
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.free

Vector: [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  151  - Fails:  280 Quality:  283
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  141  - Fails:  280 Quality:  283
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_ l:  69  - Fails:  5237 Quality:  5238
Picked:
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  5243 Quality:  5245
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.capacity_ l:  69  - Fails:  5243 Quality:  5244
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.capacity_ l:  68  - Fails:  5243 Quality:  5244
	this.start <= this.capacity_ l:  28  - Fails:  4154 Quality:  4154
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.capacity_> l:  94  - Fails:  1946 Quality:  1947
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_> l:  131  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_> l:  134  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, this.capacity_> l:  99  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  4537 Quality:  4539
	this.free <= this.capacity_ l:  27  - Fails:  3588 Quality:  3588
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_> l:  100  - Fails:  1498 Quality:  1499
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  140  - Fails:  140 Quality:  143
	FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  150  - Fails:  140 Quality:  143
	FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  154  - Fails:  140 Quality:  143
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_> l:  155  - Fails:  140 Quality:  143
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  141  - Fails:  140 Quality:  143
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  140  - Fails:  140 Quality:  143
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_> l:  141  - Fails:  140 Quality:  143
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - 1 ) holds for: <orig(this.start), this.capacity_> l:  109  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 1 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  140 Quality:  142
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1) ) holds for: <orig(this.start), this.capacity_> l:  141  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / 1 ) holds for: <orig(this.start), this.capacity_> l:  109  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_> l:  109  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <orig(this.start), this.capacity_> l:  109  - Fails:  140 Quality:  142
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_> l:  138  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  140 Quality:  142
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > 0) ) holds for: <orig(this.start), this.capacity_> l:  136  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_> l:  105  - Fails:  140 Quality:  142
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0) ) holds for: <orig(this.start), this.capacity_> l:  138  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_> l:  106  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  140 Quality:  142
	FuzzedInvariant ( (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0) ) holds for: <orig(this.start), this.capacity_> l:  120  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <orig(this.start), this.capacity_> l:  110  - Fails:  140 Quality:  142
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <orig(this.start), this.capacity_> l:  111  - Fails:  140 Quality:  142
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_> l:  138  - Fails:  140 Quality:  142
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <orig(this.start), this.capacity_> l:  141  - Fails:  140 Quality:  142
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
Mutants:
	experiments/ringbuffer_wipeOut/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_> l:  119  - Fails:  6 Quality:  8
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  6 Quality:  8
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_> l:  118  - Fails:  6 Quality:  8
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.capacity_ l:  69  - Fails:  6 Quality:  7
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.capacity_ l:  70  - Fails:  6 Quality:  7
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.capacity_ l:  69  - Fails:  6 Quality:  7
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>

Buckets: 32
Specs: 33
Saved in file: experiments/ringbuffer_wipeOut/output/RingBuffer-wipeOut-specfuzzer-1-buckets.assertions

