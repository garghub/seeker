> SpecFuzzer
# Inference step (Daikon + Fuzzed Specs)
Daikon version 5.8.2, released May 4, 2020; http://plse.cs.washington.edu/daikon.

Loading invariants from file: invs_file.xml
Loaded: 0

Fuzzing specs:
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= 1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(Map.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(Map.data)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 0
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 < 1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 = #(Map.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 >= #(Map.data)) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 > -1)
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 >= #(Map.data)) xor (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(Map.data)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 < #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= -1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(Map.data)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < #(Map.data))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) implies (Integer_Variable_1 <= 0)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.keys)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 < Integer_Variable_2)
Discarded due to arity: 4 - (Integer_Variable_0 = #(Map.keys)) xor (Integer_Variable_1 > Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(Map.keys)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) iff (Integer_Variable_1 <= 1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 < #(Map.keys))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != #(Map.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.data)) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 > #(Map.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(Map.data)
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) implies (Integer_Variable_1 < #(Map.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(Map.data)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(Map.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(Map.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.data)) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= 0
Discarded due to arity: 4 - (Integer_Variable_0 > #(Map.data)) iff (Integer_Variable_1 > Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 = 0
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != #(Map.data))
Fuzzed spec: (Integer_Variable_0 <= -1) xor (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < -1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 <= -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(Map.keys)
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 0)
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < -1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > #(Map.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.data)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 = 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.data))
Fuzzed spec: some n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.data))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * -1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + #(Map.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.data))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 != #(Map.data)) or (Integer_Variable_1 <= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) iff (Integer_Variable_1 = #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(Map.keys)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 <= #(Map.keys)) iff (Integer_Variable_1 != -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(Map.keys)
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) implies (Integer_Variable_1 > 0)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 > #(Map.data))
Discarded due to arity: 4 - (Integer_Variable_0 < #(Map.keys)) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 >= #(Map.keys)) implies (Integer_Variable_1 != #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(Map.keys)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(Map.data)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= 0)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < 0)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < 1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) or (Integer_Variable_1 = 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(Map.keys)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) implies (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) or (Integer_Variable_1 = #(Map.data))
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = #(Map.data))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= 0)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > #(Map.data))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 <= #(Map.keys)) xor (Integer_Variable_1 != 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / #(Map.keys)
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 <= #(Map.keys)) xor (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) implies (Integer_Variable_1 > -1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < 0)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 != #(Map.data))
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 < 1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < -1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(Map.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % #(Map.data)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= 1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / -1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != -1)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(Map.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 != #(Map.keys)) or (Integer_Variable_1 = -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != #(Map.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 < #(Map.keys))
Discarded due to arity: 4 - (Integer_Variable_0 < #(Map.data)) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) implies (Integer_Variable_1 = #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 < #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > -1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 <= #(Map.keys)) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= 0)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > #(Map.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(Map.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > #(Map.data))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) xor (Integer_Variable_1 != 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(Map.data))
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + -1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < 1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(Map.data)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 > #(Map.keys)) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 < #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(Map.keys)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 <= 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 != #(Map.data))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = 0)
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) xor (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.data))
Fuzzed spec: (Integer_Variable_0 <= #(Map.keys)) xor (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != #(Map.data))
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < 1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 < 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > -1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 = -1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < -1)
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < -1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) xor (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.data))
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) implies (Integer_Variable_1 < -1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != -1) or (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 != -1) or (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Integer_Variable_0 < #(Map.data)) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 > #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 = 0)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 1)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 < 1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: (Integer_Variable_0 > -1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= -1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(Map.keys)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) or (Integer_Variable_1 > -1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(Map.keys)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 != #(Map.data))
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= 1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 > Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.keys)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(Map.data))
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 < -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(Map.keys)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > -1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= -1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 > 0)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: (Integer_Variable_0 > -1) implies (Integer_Variable_1 < 0)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != -1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > -1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.keys)) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= 0)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(Map.keys)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= 0)
Fuzzed spec: (Integer_Variable_0 >= #(Map.data)) or (Integer_Variable_1 >= 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Discarded due to arity: 4 - (Integer_Variable_0 != #(Map.keys)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 1)
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 >= 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != 1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 < #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < 1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = #(Map.data))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > -1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) or (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 <= -1)
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 < #(Map.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(Map.data)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 > -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) iff (Integer_Variable_1 < #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(Map.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.data))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < #(Map.data))
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 != -1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > 0)
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(Map.keys)
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(Map.data)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= 1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= 1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.keys)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) or (Integer_Variable_1 <= 1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != #(Map.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.data))
Fuzzed spec: some n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > 0)
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 <= #(Map.keys)) xor (Integer_Variable_1 >= 1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / -1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = 0)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / #(Map.keys)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + #(Map.data)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= 1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(Map.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 >= 1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) implies (Integer_Variable_1 > 0)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > 0
Discarded due to arity: 4 - (Integer_Variable_0 <= #(Map.data)) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= -1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) or (Integer_Variable_1 != 0)
Fuzzed spec: some n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 >= #(Map.keys)) xor (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: all n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 0)
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.keys)) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 = 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != #(Map.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % #(Map.keys)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(Map.data)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(Map.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != 1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Integer_Variable_0 > #(Map.data)) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Discarded due to arity: 4 - (Integer_Variable_0 > #(Map.data)) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) xor (Integer_Variable_1 < #(Map.data))
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(Map.keys)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= -1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + -1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.keys)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = -1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 = #(Map.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(Map.keys)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != 0)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) xor (Integer_Variable_1 <= #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 >= 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = 0)
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) or (Integer_Variable_1 < -1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.keys)) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= -1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != 1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 = 1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != #(Map.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= 1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) implies (Integer_Variable_1 > 1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) implies (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(Map.data))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 != #(Map.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 1)
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) iff (Integer_Variable_1 >= 0)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) xor (Integer_Variable_1 <= -1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) implies (Integer_Variable_1 != 1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) or (Integer_Variable_1 < 1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(Map.keys)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 != #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != -1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= -1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != 1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(Map.data))
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(Map.keys)
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 != #(Map.keys)) xor (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != -1) implies (Integer_Variable_1 < 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(Map.data)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 = -1)
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = #(Map.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(Map.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.keys)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = 0)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: (Integer_Variable_0 != #(Map.keys)) xor (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(Map.data)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(Map.data))
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > 1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = -1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > #(Map.data))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != 1)
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > 0)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.data))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(Map.keys)
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > #(Map.data))
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 < 1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Unique fuzzed invariants: 529 (2000)
Unary: 29 - Binary: 157 - Ternary: 343 - Discarded: 171
Reading declaration files Processing trace data; reading 1 dtrace file:
Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/MapTesterDriver-objects.xml
Total loaded objects: 2657

No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
examples.Map:::OBJECT
this.keys != null
this.data != null
===========================================================================
examples.Map.Map():::EXIT
this.keys[] == []
this.keys[].getClass().getName() == []
this.data[] == []
this.data[].getClass().getName() == []
===========================================================================
examples.Map.count():::ENTER
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.count():::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
return one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
size(this.keys[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 = #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 = #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(Map.keys) ) holds for: <orig(this), return>
===========================================================================
examples.Map.extend(java.lang.Object, java.lang.Object):::ENTER
k.getClass().getName() == v.getClass().getName()
k.getClass().getName() == java.lang.String.class
v.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.extend(java.lang.Object, java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.data == orig(this.data)
return one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( some n : Map.keys : n != null ) holds for: orig(this)
size(this.keys[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: orig(size(this.keys[]))-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.keys[]))-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))-1
orig(k.getClass().getName()) in this.keys[].getClass().getName()
orig(v.getClass().getName()) in this.keys[].getClass().getName()
orig(v.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( Integer_Variable_0 != #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 != #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
size(this.keys[]) >= orig(size(this.keys[]))
size(this.keys[])-1 <= orig(size(this.keys[]))
size(this.keys[])-1 >= orig(size(this.keys[]))-1
size(this.data[]) >= orig(size(this.data[]))
size(this.data[])-1 <= orig(size(this.data[]))
size(this.data[])-1 >= orig(size(this.data[]))-1
===========================================================================
examples.Map.hasKey(java.lang.Object):::ENTER
k.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.hasKey(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (size(this.data[]) one of { 0, 1, 2 })
(return == false)  ==>  (size(this.keys[]) one of { 0, 1, 2 })
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( all n : Map.data : n != null ) holds for: orig(this))
(return == true)  ==>  (FuzzedInvariant ( no n : Map.data : n = null ) holds for: orig(this))
(return == true)  ==>  (orig(k) != null)
(return == true)  ==>  (orig(k.getClass().getName()) in this.data[].getClass().getName())
(return == true)  ==>  (orig(k.getClass().getName()) in this.keys[].getClass().getName())
(return == true)  ==>  (size(this.data[]) one of { 1, 2 })
(return == true)  ==>  (size(this.keys[]) one of { 1, 2 })
(return == true)  ==>  (this.data[] elements != null)
(return == true)  ==>  (this.data[].getClass().getName() elements == java.lang.String.class)
(return == true)  ==>  (this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] })
size(this.keys[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasKey(java.lang.Object):::EXIT;condition="return == true"
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return == true
FuzzedInvariant ( all n : Map.data : n != null ) holds for: orig(this)
FuzzedInvariant ( no n : Map.data : n = null ) holds for: orig(this)
orig(k) != null
size(this.keys[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
orig(k.getClass().getName()) in this.keys[].getClass().getName()
orig(k.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasKey(java.lang.Object):::EXIT;condition="not(return == true)"
return == false
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasValue(java.lang.Object):::ENTER
FuzzedInvariant ( all n : Map.data : n != null ) holds for: this
FuzzedInvariant ( all n : Map.keys : n != null ) holds for: this
FuzzedInvariant ( no n : Map.data : n = null ) holds for: this
FuzzedInvariant ( no n : Map.keys : n = null ) holds for: this
this.keys[] elements != null
this.keys[].getClass().getName() elements == java.lang.String.class
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
v.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.hasValue(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (size(this.data[]) one of { 0, 1, 2 })
(return == false)  ==>  (size(this.keys[]) one of { 0, 1, 2 })
(return == false)  ==>  (this.data[] elements are equal)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[]))
(return == true)  ==>  (orig(v) != null)
(return == true)  ==>  (orig(v.getClass().getName()) in this.data[].getClass().getName())
(return == true)  ==>  (orig(v.getClass().getName()) in this.keys[].getClass().getName())
(return == true)  ==>  (size(this.data[]) one of { 1, 2 })
(return == true)  ==>  (size(this.keys[]) one of { 1, 2 })
(return == true)  ==>  (this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] })
(return == true)  ==>  (this.keys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] })
this.keys[] elements != null
this.keys[].getClass().getName() elements == java.lang.String.class
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasValue(java.lang.Object):::EXIT;condition="return == true"
this.keys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return == true
orig(v) != null
size(this.keys[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
orig(v.getClass().getName()) in this.keys[].getClass().getName()
orig(v.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasValue(java.lang.Object):::EXIT;condition="not(return == true)"
this.data[] elements are equal
return == false
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.indexOfKey(java.lang.Object):::ENTER
k.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.indexOfKey(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
return one of { -1, 0, 1 }
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
size(this.keys[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 != #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
===========================================================================
examples.Map.item(java.lang.Object):::ENTER
this.keys[] elements != null
this.keys[].getClass().getName() elements == java.lang.String.class
this.keys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
k != null
k.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 1, 2 }
size(this.data[]) one of { 1, 2 }
k.getClass().getName() in this.keys[].getClass().getName()
k.getClass().getName() in this.data[].getClass().getName()
===========================================================================
examples.Map.item(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
return.getClass().getName() == orig(k.getClass().getName())
this.keys[] elements != null
this.keys[].getClass().getName() elements == java.lang.String.class
this.keys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return != null
return.getClass().getName() == java.lang.String.class
FuzzedInvariant ( all n : Map.data : n != null ) holds for: orig(this)
FuzzedInvariant ( all n : Map.keys : n != null ) holds for: orig(this)
FuzzedInvariant ( no n : Map.data : n = null ) holds for: orig(this)
FuzzedInvariant ( no n : Map.keys : n = null ) holds for: orig(this)
FuzzedInvariant ( some n : Map.data : n != null ) holds for: orig(this)
FuzzedInvariant ( some n : Map.keys : n != null ) holds for: orig(this)
size(this.keys[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
return.getClass().getName() in this.keys[].getClass().getName()
return.getClass().getName() in this.data[].getClass().getName()
===========================================================================
examples.Map.remove(java.lang.Object):::ENTER
FuzzedInvariant ( all n : Map.data : n != null ) holds for: this
FuzzedInvariant ( no n : Map.data : n = null ) holds for: this
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
k != null
k.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 1, 2 }
size(this.data[]) one of { 1, 2 }
k.getClass().getName() in this.keys[].getClass().getName()
k.getClass().getName() in this.data[].getClass().getName()
===========================================================================
examples.Map.remove(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.data == orig(this.data)
size(this.keys[]) == orig(size(this.keys[]))-1
size(this.data[]) == orig(size(this.data[]))-1
this.data[] elements has only one value
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [], [java.lang.String] }
return one of { 0, 1 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 < 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 <= 0 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 < 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
Exiting Daikon.

# Filtering step

- Mutation is: 1:STD:<ASSIGN>:<NO-OP>:examples.Map@<init>():29:keys = new LinkedList<K>() |==> <NO-OP>
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m1.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:23:27 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m1-objects.xml
Total loaded objects: 805
[9:23:28 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 329 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 4 invocations
  examples.Map.count() : 212 invocations
  examples.Map.remove(java.lang.Object) : 1 invocation
  examples.Map.hasKey(java.lang.Object) : 16 invocations
  examples.Map.extend(java.lang.Object, java.lang.Object) : 48 invocations
  examples.Map.indexOfKey(java.lang.Object) : 48 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 1,023 errors found in 52,118 samples (1.96%)
MapTesterDriver.inv.gz: 5 false positives, out of 262, which is 1.91%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 2:STD:<ASSIGN>:<NO-OP>:examples.Map@<init>():30:data = new LinkedList<V>() |==> <NO-OP>
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m2.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:23:29 PM]: Checking size of experiments/map_remove/setup-files/mutants/MapTeLoaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m2-objects.xml
Total loaded objects: 1306

No return from procedure observed 278 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 7 invocations
  examples.Map.hasValue(java.lang.Object) : 123 invocations
  examples.Map.remove(java.lang.Object) : 7 invocations
  examples.Map.extend(java.lang.Object, java.lang.Object) : 141 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 2,085 errors found in 78,581 samples (2.65%)
MapTesterDriver.inv.gz: 11 false positives, out of 439, which is 2.51%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 47:EVR:<METHOD_INVOCATION(boolean)>:<DEFAULT>:examples.Map@remove(K):119:hasKey(k) |==> false
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m47.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:23:31 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m47-objects.xml
Total loaded objects: 2500
[9:23:32 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:33 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:34 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:35 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:36 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:37 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 129 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 47 invocations
  examples.Map.remove(java.lang.Object) : 82 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 0 errors found in 409,457 samples (0.00%)
MapTesterDriver.inv.gz: 0 false positives, out of 1480, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 48:LVR:0:POS:examples.Map@remove(K):120:0 |==> 1
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m48.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:23:38 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m48-objects.xml
Total loaded objects: 2634
[9:23:39 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:40 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:41 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:42 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:43 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:44 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 115 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 51 invocations
  examples.Map.remove(java.lang.Object) : 64 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 447,502 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 1753, which is 0.11%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 49:LVR:0:NEG:examples.Map@remove(K):120:0 |==> -1
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m49.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:23:45 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m49-objects.xml
Total loaded objects: 2657
[9:23:46 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:47 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:48 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:49 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:50 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:51 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 461,819 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 1753, which is 0.11%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 50:ROR:>(int,int):!=(int,int):examples.Map@remove(K):120:count() > 0 |==> count() != 0
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m50.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:23:52 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m50-objects.xml
Total loaded objects: 2657
[9:23:53 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:54 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:55 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:56 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:23:57 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 461,819 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 1753, which is 0.11%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 51:ROR:>(int,int):>=(int,int):examples.Map@remove(K):120:count() > 0 |==> count() >= 0
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m51.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:23:59 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m51-objects.xml
Total loaded objects: 2657
[9:24:00 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:01 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:02 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:03 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:04 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 461,819 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 1753, which is 0.11%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 52:ROR:>(int,int):FALSE(int,int):examples.Map@remove(K):120:count() > 0 |==> false
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m52.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:24:06 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m52-objects.xml
Total loaded objects: 2578
[9:24:07 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:08 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:09 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:10 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:11 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 129 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 47 invocations
  examples.Map.remove(java.lang.Object) : 82 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 0 errors found in 419,183 samples (0.00%)
MapTesterDriver.inv.gz: 0 false positives, out of 1480, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 53:COR:has_key:TRUE:examples.Map@remove(K):121:has_key |==> false
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m53.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:24:13 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m53-objects.xml
Total loaded objects: 2608
[9:24:14 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:15 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:16 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:17 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 129 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 47 invocations
  examples.Map.remove(java.lang.Object) : 82 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 0 errors found in 430,745 samples (0.00%)
MapTesterDriver.inv.gz: 0 false positives, out of 1480, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 54:COR:has_key:FALSE:examples.Map@remove(K):121:has_key |==> true
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m54.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:24:19 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m54-objects.xml
Total loaded objects: 2657
[9:24:20 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:21 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:22 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:23 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:24 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 102 times.  Unmatched entries are ignored!
[9:24:25 PM]: Finished reading experiments/map_remove/setup-files/mutants/MapTeUnterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 464,715 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 1753, which is 0.11%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 55:COR:not_empty:TRUE:examples.Map@remove(K):123:not_empty |==> false
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m55.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:24:26 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m55-objects.xml
Total loaded objects: 2608
[9:24:27 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:28 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:29 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:30 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:31 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 129 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 47 invocations
  examples.Map.remove(java.lang.Object) : 82 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 0 errors found in 430,745 samples (0.00%)
MapTesterDriver.inv.gz: 0 false positives, out of 1480, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 56:COR:not_empty:FALSE:examples.Map@remove(K):123:not_empty |==> true
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m56.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:24:33 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m56-objects.xml
Total loaded objects: 2657
[9:24:34 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:35 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:36 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:37 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:38 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 102 times.  Unmatched entries are ignored!
[9:24:39 PM]: Finished reading experiments/map_remove/setup-files/mutants/MapTeUnterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 461,819 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 1753, which is 0.11%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 57:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:examples.Map@remove(K):127:indexOfKey(k) |==> 0
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m57.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:24:40 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m57-objects.xml
Total loaded objects: 2659
[9:24:41 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:42 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:43 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:44 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:45 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:46 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 100 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 53 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 455,691 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 1753, which is 0.11%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 58:STD:<CALL>:<NO-OP>:examples.Map@remove(K):128:keys.remove(result) |==> <NO-OP>
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m58.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:24:47 PM]:                                                                  [9:24:48 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDriveLoaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m58-objects.xml
Total loaded objects: 2657
[9:24:49 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:50 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:51 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:52 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:53 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:55 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 46 invocations
  examples.Map.extend(java.lang.Object, java.lang.Object) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 758 errors found in 462,268 samples (0.16%)
MapTesterDriver.inv.gz: 44 false positives, out of 1753, which is 2.51%.
Preserving 11 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 11
Saving mutants results file

- Mutation is: 59:STD:<CALL>:<NO-OP>:examples.Map@remove(K):129:data.remove(result) |==> <NO-OP>
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m59.dtrace.gz
Loaded invs from previous step: 11
                                                                               [9:24:56 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m59-objects.xml
Total loaded objects: 2657
[9:24:57 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:58 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:24:59 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:00 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:01 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:02 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:03 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 728 errors found in 461,819 samples (0.16%)
MapTesterDriver.inv.gz: 44 false positives, out of 1753, which is 2.51%.
Preserving 8 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 11
Saving - Total: 18
Saving mutants results file

- Mutation is: 60:LVR:TRUE:FALSE:examples.Map@remove(K):142:true |==> false
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m60.dtrace.gz
Loaded invs from previous step: 18
                                                                               [9:25:04 PM]:                                                                  [9:25:05 PM]: Checking size of experiments/map_remove/setup-files/mutants/MapTeLoaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m60-objects.xml
Total loaded objects: 2608
Saving mutants results file

- Mutation is: 61:EVR:<IDENTIFIER(int)>:<DEFAULT>:examples.Map@remove(K):143:result |==> 0
Checking invs on mutant: experiments/map_remove/setup-files/mutants/MapTesterDriver-m61.dtrace.gz
Loaded invs from previous step: 18
                                                                               [9:25:06 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_remove/setup-files/mutants/MapTesterDriver-m61-objects.xml
Total loaded objects: 2657
[9:25:07 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:08 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:09 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:10 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:11 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive[9:25:12 PM]: Reading experiments/map_remove/setup-files/mutants/MapTesterDrive
No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 461,819 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 1753, which is 0.11%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 18
Saving - Total: 18
Saving mutants results file

# Filtering step took minutes: 1
# Mutation killing ability results saved in: experiments/map_remove/output/Map-remove-specfuzzer-1-invs-by-mutants.csv

# Writing assertions to file: experiments/map_remove/output/Map-remove-specfuzzer-1.assertions

# Filtering specs with buckets
> Mutant filter from file: experiments/map_remove/output/Map-remove-specfuzzer-1-invs-by-mutants.csv
Unique mutants: 13
Loading assertions from: experiments/map_remove/output/Map-remove-specfuzzer-1.assertions
Specs killing mutants: 7

> Minimizing by exploring the bit vector of each spec
Building bit vectors of size: 13
Building buckets
=====================================
Buckets: 5
Vector: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m1.dtrace.gz
Specs:
	this.keys != null l:  17  - Fails:  1023 Quality:  1023
Picked:
	this.keys != null

Vector: [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m2.dtrace.gz
Specs:
	this.data != null l:  17  - Fails:  2085 Quality:  2085
Picked:
	this.data != null

Vector: [0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m48.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m49.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m50.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m51.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m54.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m56.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m57.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m58.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m59.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m60.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m61.dtrace.gz
Specs:
	daikon.Quant.eltsNotEqual(this.data, null) l:  42  - Fails:  576 Quality:  576
Picked:
	daikon.Quant.eltsNotEqual(this.data, null)

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
Mutants:
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m58.dtrace.gz
Specs:
	daikon.Quant.size(this.keys) == \old(daikon.Quant.size(this.keys))-1 l:  68  - Fails:  92 Quality:  92
	FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return> l:  85  - Fails:  69 Quality:  70
Picked:
	daikon.Quant.size(this.keys) == \old(daikon.Quant.size(this.keys))-1

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.]
Mutants:
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m59.dtrace.gz
	experiments/map_remove/setup-files/mutants/MapTesterDriver-m60.dtrace.gz
Specs:
	daikon.Quant.size(this.data) == \old(daikon.Quant.size(this.data))-1 l:  68  - Fails:  180 Quality:  180
	daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this.data), new String[] {  }) || daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this.data), new String[] { "java.lang.String" }) l:  182  - Fails:  92 Quality:  92
Picked:
	daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this.data), new String[] {  }) || daikon.Quant.pairwiseEqual(daikon.Quant.typeArray(this.data), new String[] { "java.lang.String" })
	daikon.Quant.size(this.data) == \old(daikon.Quant.size(this.data))-1

Buckets: 5
Specs: 6
Saved in file: experiments/map_remove/output/Map-remove-specfuzzer-1-buckets.assertions

