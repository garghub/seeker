> SpecFuzzer
# Inference step (Daikon + Fuzzed Specs)
Daikon version 5.8.2, released May 4, 2020; http://plse.cs.washington.edu/daikon.

Loading invariants from file: invs_file.xml
Loaded: 0

Fuzzing specs:
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 > 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 <= 1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = -1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 0)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) iff (Integer_Variable_1 > -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) implies (Integer_Variable_1 > 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * -1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) iff (Integer_Variable_1 = 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= -1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= 1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 >= 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 != 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) implies (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(RingBuffer.data)
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 != 1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) or (Integer_Variable_1 > 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 >= 0
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 > -1) iff (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > 0)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = -1)
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) iff (Integer_Variable_1 > Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = 0)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > -1)
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > -1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= -1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = -1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 > -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - -1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = -1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = 1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 = 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) implies (Integer_Variable_1 >= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % -1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) implies (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = -1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) or (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < -1) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - -1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= -1)
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) or (Integer_Variable_1 >= -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) or (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 < #(RingBuffer.data)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != 0
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != -1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < -1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= -1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 > -1) implies (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= -1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 0)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) or (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 = 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 < 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= -1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = 0)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 > 1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < 0)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= -1) xor (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > -1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > -1)
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 = 1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 1)
Fuzzed spec: (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > -1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + -1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= -1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != 1)
Fuzzed spec: Integer_Variable_0 <= #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + -1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != #(RingBuffer.data)) iff (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= -1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > -1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= 0)
Discarded due to arity: 4 - (Integer_Variable_0 != #(RingBuffer.data)) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < 0)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= 1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > 0)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + -1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 = #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != -1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) xor (Integer_Variable_1 != 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 != 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 >= 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) iff (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 < #(RingBuffer.data)) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = #(RingBuffer.data)) or (Integer_Variable_1 >= 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 < -1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= -1)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 > #(RingBuffer.data)) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % -1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 < #(RingBuffer.data))
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 = #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < 1)
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 <= #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) xor (Integer_Variable_1 > 1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 0)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 < -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + #(RingBuffer.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= 0)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 > 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= #(RingBuffer.data)) implies (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 = -1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = -1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 <= -1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = 0)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(RingBuffer.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= 0)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= 1)
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= #(RingBuffer.data)) iff (Integer_Variable_1 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 > 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 <= 1)
Fuzzed spec: some n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 <= #(RingBuffer.data)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(RingBuffer.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 = #(RingBuffer.data)) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > -1)
Fuzzed spec: no n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 = #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 = #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 != -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + -1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < -1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 >= #(RingBuffer.data))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < #(RingBuffer.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 >= #(RingBuffer.data)) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 1)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > #(RingBuffer.data))
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 0)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(RingBuffer.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(RingBuffer.data)
Fuzzed spec: (Integer_Variable_0 != -1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : RingBuffer.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 > #(RingBuffer.data)
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: all n : RingBuffer.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : RingBuffer.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Unique fuzzed invariants: 474 (2000)
Unary: 23 - Binary: 163 - Ternary: 288 - Discarded: 181
Reading declaration files Processing trace data; reading 1 dtrace file:
Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/RingBufferTesterDriver-objects.xml
Total loaded objects: 2529

No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
examples.RingBuffer:::OBJECT
FuzzedInvariant ( some n : RingBuffer.data : n = null ) holds for: this
this.data != null
this.start one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.free
this.free >= 1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.capacity_
size(this.data[]) >= 1
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.capacity_>
this.start <= this.free
this.start <= this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, this.capacity_>
this.free <= this.capacity_
===========================================================================
examples.RingBuffer.RingBuffer(int):::ENTER
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: n
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: n
===========================================================================
examples.RingBuffer.RingBuffer(int):::EXIT
this.start == this.free
this.capacity_ == orig(n)
this.data[] == [null]
this.data[] elements == null
this.data[].getClass().getName() == [null]
this.data[].getClass().getName() elements == null
this.start == 1
size(this.data[]) == 1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 < 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) iff (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) xor (Integer_Variable_1 != -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
===========================================================================
examples.RingBuffer.capacity():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.capacity():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == return
return == orig(this.capacity_)
this.free one of { 1, 2, 3 }
return one of { 1, 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: return
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, return>
this.start <= return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, return>
this.free <= return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
===========================================================================
examples.RingBuffer.count():::ENTER
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.capacity_ % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.count():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
return one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.capacity_ % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, return>
this.free > return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
this.capacity_ > return
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.dataCount():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.dataCount():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.free one of { 1, 2, 3 }
this.capacity_ one of { 1, 8, 10 }
return one of { 2, 9, 11 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, return>
this.start < return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, return>
this.free < return
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.capacity_, return>
this.capacity_ < return
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), return>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.extend(java.lang.Object):::ENTER
this.start one of { 1, 2 }
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
a_value.getClass().getName() == java.lang.String.class
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.extend(java.lang.Object):::EXIT
this.data == orig(this.data)
this.start == orig(this.start)
this.capacity_ == orig(this.capacity_)
size(this.data[])-1 == orig(size(this.data[]))
this.start one of { 1, 2 }
this.free one of { 2, 3, 4 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 2, 3, 4 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.data[]))-1
orig(a_value.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.free)>
orig(this.free) % this.start == 0
this.start <= orig(this.free)
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.free)>
this.free > orig(this.free)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <orig(this.free), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <orig(this.free), this.capacity_>
this.capacity_ > orig(this.free)
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.free)>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.free) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <orig(this.free) , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isEmpty():::ENTER
this.free one of { 1, 2, 3 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
(return == false)  <==>  (this.start < this.free)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.free, return>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.start, return>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[]))
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[]))
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>)
(return == false)  ==>  (size(this.data[]) one of { 2, 3 })
(return == false)  ==>  (this.capacity_ one of { 8, 10 })
(return == false)  ==>  (this.free < this.capacity_)
(return == false)  ==>  (this.free one of { 2, 3 })
(return == false)  ==>  (this.start < this.capacity_)
(return == false)  ==>  (this.start one of { 1, 2 })
(return == true)  <==>  (this.start == this.free)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.start, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.free, return>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.start, return>)
(return == true)  ==>  (size(this.data[]) one of { 1, 2, 3 })
(return == true)  ==>  (this.free one of { 1, 2, 3 })
(return == true)  ==>  (this.start one of { 1, 2, 3 })
this.free one of { 1, 2, 3 }
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT;condition="return == true"
this.start == this.free
this.start == orig(this.free)
return == true
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.RingBuffer.isEmpty():::EXIT;condition="not(return == true)"
this.start one of { 1, 2 }
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
return == false
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isFull():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.isFull():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
return == false
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.free % this.start == 0
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.start, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.start, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.free, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.free, return>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = -1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <this.capacity_, return>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.free , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.start , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1) ) holds for: <this.free , this.capacity_ , return>
===========================================================================
examples.RingBuffer.isFull():::EXIT;condition="not(return == true)"
===========================================================================
examples.RingBuffer.item():::ENTER
this.start one of { 1, 2 }
this.free one of { 2, 3 }
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.item():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == orig(this.start)
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 1, 2 }
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ == 8
return.getClass().getName() == java.lang.String.class
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
return.getClass().getName() in this.data[].getClass().getName()
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
===========================================================================
examples.RingBuffer.remove():::ENTER
this.start one of { 1, 2 }
this.free one of { 2, 3 }
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, this.start>
this.start < this.free
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.capacity_, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.capacity_, this.start>
this.start < this.capacity_
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , this.start>
===========================================================================
examples.RingBuffer.remove():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.free == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.start one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.start
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.start
this.free one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.free
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.free
this.capacity_ == 8
size(this.data[]) one of { 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, this.free>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)>
this.start > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, orig(this.start)>
this.free > orig(this.start)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 + 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.capacity_, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.capacity_, orig(this.start)>
this.capacity_ > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.free , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.capacity_ , orig(this.start)>
===========================================================================
examples.RingBuffer.wipeOut():::ENTER
this.free one of { 1, 2, 3 }
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.free>
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <this, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, this.start>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.free, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>
this.free < this.capacity_
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.free , this.start , this.capacity_>
===========================================================================
examples.RingBuffer.wipeOut():::EXIT
this.data == orig(this.data)
this.data[] == orig(this.data[])
this.start == this.free
this.start == orig(this.free)
this.capacity_ == orig(this.capacity_)
this.capacity_ one of { 8, 10 }
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: this.capacity_
FuzzedInvariant ( Integer_Variable_0 > 1 ) holds for: this.capacity_
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>
this.start < this.capacity_
FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.start>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.start, orig(this.start)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, orig(this.start)>
this.start >= orig(this.start)
FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 != 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) or (Integer_Variable_1 != 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1) ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <orig(this.start), this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <orig(this.start), this.capacity_>
this.capacity_ > orig(this.start)
FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , orig(this.start) , this.capacity_>
Exiting Daikon.

# Filtering step

- Mutation is: 1:LVR:0:POS:examples.RingBuffer@<init>(int):47:0 |==> 1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m1.dtrace.gz
Loaded invs from previous step: 0
                                                                               [1:29:42 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m1-objects.xml
Total loaded objects: 2500
[1:29:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:29:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:30:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:31:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 94 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 24 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 37 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,057,648 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16378, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 10:AOR:+(int,int):-(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n - 1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m10.dtrace.gz
Loaded invs from previous step: 0
                                                                               [1:32:06 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m10-objects.xml
Total loaded objects: 2529
[1:32:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:32:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:33:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,075,118 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16378, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 11:AOR:+(int,int):/(int,int):examples.RingBuffer@<init>(int):49:n + 1 |==> n / 1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m11.dtrace.gz
Loaded invs from previous step: 0
                                                                               [1:34:38 PM]: Checking size of experiments/ringbuffer_count/setup-files/mutantsLoaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m11-objects.xml
Total loaded objects: 2529
[1:34:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:34:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:35:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:36:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,075,118 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16378, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 12:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):49:data = new ArrayList<G>(n + 1) |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m12.dtrace.gz
Loaded invs from previous step: 0
                                                                               [1:37:02 PM]:                                                                  
No return from procedure observed 286 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 286 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 0 samples (NaN%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 0, which is NaN%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 13:STD:<CALL>:<NO-OP>:examples.RingBuffer@<init>(int):50:data.add(null) |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
Loaded invs from previous step: 0
                                                                               [1:37:03 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13-objects.xml
Total loaded objects: 2500
[1:37:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:37:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:38:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 97 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 44 invocations
  examples.RingBuffer.remove() : 39 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 104,754 errors found in 3,999,186 samples (2.62%)
RingBufferTesterDriver.inv.gz: 471 false positives, out of 16378, which is 2.88%.
Preserving 105 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 105
Saving mutants results file

- Mutation is: 14:LVR:POS:0:examples.RingBuffer@<init>(int):51:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
Loaded invs from previous step: 105
                                                                               [1:39:30 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14-objects.xml
Total loaded objects: 2572
[1:39:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:39:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:40:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 28 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.remove() : 8 invocations
  examples.RingBuffer.item() : 6 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 385,592 errors found in 3,602,457 samples (10.70%)
RingBufferTesterDriver.inv.gz: 2413 false positives, out of 16378, which is 14.73%.
                                                                               Preserving 584 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 105
Saving - Total: 670
Saving mutants results file

- Mutation is: 15:LVR:POS:NEG:examples.RingBuffer@<init>(int):51:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
Loaded invs from previous step: 670
                                                                               [1:41:41 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15-objects.xml
Total loaded objects: 2497
[1:41:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:41:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:42:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 73 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 52 invocations
  examples.RingBuffer.remove() : 7 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 408,046 errors found in 3,423,864 samples (11.92%)
RingBufferTesterDriver.inv.gz: 3409 false positives, out of 16378, which is 20.81%.
Preserving 735 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 670
Saving - Total: 880
Saving mutants results file

- Mutation is: 16:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):51:start = 1 |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Loaded invs from previous step: 880
                                                                               [1:43:56 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16-objects.xml
Total loaded objects: 2572
[1:43:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:43:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:44:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:45:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 28 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.remove() : 8 invocations
  examples.RingBuffer.item() : 6 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 385,596 errors found in 3,602,457 samples (10.70%)
RingBufferTesterDriver.inv.gz: 2413 false positives, out of 16378, which is 14.73%.
Preserving 584 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 880
Saving - Total: 880
Saving mutants results file

- Mutation is: 17:LVR:POS:0:examples.RingBuffer@<init>(int):52:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
Loaded invs from previous step: 880
                                                                               [1:46:18 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17-objects.xml
Total loaded objects: 2528
[1:46:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:46:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:47:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 74 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 17 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 475,790 errors found in 4,021,610 samples (11.83%)
RingBufferTesterDriver.inv.gz: 4276 false positives, out of 16378, which is 26.11%.
Preserving 1008 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 880
Saving - Total: 1344
Saving mutants results file

- Mutation is: 18:LVR:POS:NEG:examples.RingBuffer@<init>(int):52:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Loaded invs from previous step: 1344
                                                                               [1:48:55 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18-objects.xml
Total loaded objects: 2547
[1:48:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:48:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:49:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:50:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 66 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 9 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 557,006 errors found in 4,101,216 samples (13.58%)
RingBufferTesterDriver.inv.gz: 5797 false positives, out of 16378, which is 35.40%.
Preserving 1229 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 1344
Saving - Total: 1529
Saving mutants results file

- Mutation is: 19:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):52:free = 1 |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Loaded invs from previous step: 1529
                                                                               [1:51:41 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19-objects.xml
Total loaded objects: 2528
[1:51:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:51:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:52:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:53:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 74 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 43 invocations
  examples.RingBuffer.remove() : 17 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 475,796 errors found in 4,021,610 samples (11.83%)
RingBufferTesterDriver.inv.gz: 4276 false positives, out of 16378, which is 26.11%.
Preserving 1008 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 1529
Saving - Total: 1529
Saving mutants results file

- Mutation is: 2:LVR:0:NEG:examples.RingBuffer@<init>(int):47:0 |==> -1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
Loaded invs from previous step: 1529
                                                                               [1:54:32 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m2-objects.xml
Total loaded objects: 2533
[1:54:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:54:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:55:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:56:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 83 times.  Unmatched entries are ignored!
Unterminated calls:
[1:56:54 PM]: Finished reading experiments/ringbuffer_count/setup-files/mutants  examples.RingBuffer.RingBuffer(int) : 10 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 472 errors found in 4,076,990 samples (0.01%)
RingBufferTesterDriver.inv.gz: 118 false positives, out of 16378, which is 0.72%.
Preserving 67 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1529
Saving - Total: 1572
Saving mutants results file

- Mutation is: 20:STD:<ASSIGN>:<NO-OP>:examples.RingBuffer@<init>(int):53:capacity_ = n |==> <NO-OP>
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Loaded invs from previous step: 1572
                                                                               [1:57:19 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20-objects.xml
Total loaded objects: 2278
[1:57:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:57:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:58:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 158 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 32 invocations
  examples.RingBuffer.remove() : 38 invocations
  examples.RingBuffer.extend(java.lang.Object) : 74 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 732,174 errors found in 3,078,801 samples (23.78%)
RingBufferTesterDriver.inv.gz: 2483 false positives, out of 10338, which is 24.02%.
Preserving 607 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 1572
Saving - Total: 1855
Saving mutants results file

- Mutation is: 25:ROR:>(int,int):!=(int,int):examples.RingBuffer@count():84:free > start |==> free != start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m25.dtrace.gz
Loaded invs from previous step: 1855
                                                                               [1:59:40 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m25-objects.xml
Total loaded objects: 2529
[1:59:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[1:59:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:00:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:01:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 0 errors found in 4,075,118 samples (0.00%)
RingBufferTesterDriver.inv.gz: 0 false positives, out of 16378, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1855
Saving - Total: 1855
Saving mutants results file

- Mutation is: 26:ROR:>(int,int):>=(int,int):examples.RingBuffer@count():84:free > start |==> free >= start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m26.dtrace.gz
Loaded invs from previous step: 1855
                                                                               [2:02:33 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m26-objects.xml
Total loaded objects: 2529
[2:02:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:02:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:03:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:04:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 12 errors found in 4,075,118 samples (0.00%)
RingBufferTesterDriver.inv.gz: 12 false positives, out of 16378, which is 0.07%.
Preserving 6 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1855
Saving - Total: 1855
Saving mutants results file

- Mutation is: 27:ROR:>(int,int):FALSE(int,int):examples.RingBuffer@count():84:free > start |==> false
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
Loaded invs from previous step: 1855
                                                                               [2:05:28 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27-objects.xml
Total loaded objects: 2529
[2:05:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:05:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:06:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:07:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 1,446 errors found in 4,075,118 samples (0.04%)
RingBufferTesterDriver.inv.gz: 107 false positives, out of 16378, which is 0.65%.
Preserving 53 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1855
Saving - Total: 1855
Saving mutants results file

- Mutation is: 28:AOR:-(int,int):%(int,int):examples.RingBuffer@count():85:free - start |==> free % start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m28.dtrace.gz
Loaded invs from previous step: 1855
                                                                               [2:08:16 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m28-objects.xml
Total loaded objects: 2529
[2:08:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:08:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:09:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:10:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 168 errors found in 4,075,118 samples (0.00%)
RingBufferTesterDriver.inv.gz: 8 false positives, out of 16378, which is 0.05%.
Preserving 4 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1855
Saving - Total: 1855
Saving mutants results file

- Mutation is: 29:AOR:-(int,int):*(int,int):examples.RingBuffer@count():85:free - start |==> free RingBufferTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log hs_err_pid51463.log hs_err_pid53479.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
Loaded invs from previous step: 1855
                                                                               [2:11:09 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29-objects.xml
Total loaded objects: 2529
[2:11:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:11:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:12:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:13:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 1,480 errors found in 4,075,118 samples (0.04%)
RingBufferTesterDriver.inv.gz: 72 false positives, out of 16378, which is 0.44%.
Preserving 35 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1855
                                                                               Saving - Total: 1855
Saving mutants results file

- Mutation is: 3:ROR:>(int,int):!=(int,int):examples.RingBuffer@<init>(int):47:n > 0 |==> n != 0
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Loaded invs from previous step: 1855
                                                                               [2:13:59 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m3-objects.xml
Total loaded objects: 2532
[2:14:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:14:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:15:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 84 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 11 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 351 errors found in 4,076,522 samples (0.01%)
RingBufferTesterDriver.inv.gz: 117 false positives, out of 16378, which is 0.71%.
Preserving 65 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1855
Saving - Total: 1873
Saving mutants results file

- Mutation is: 30:AOR:-(int,int):+(int,int):examples.RingBuffer@count():85:free - start |==> free + start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
Loaded invs from previous step: 1873
                                                                               [2:16:53 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30-objects.xml
Total loaded objects: 2529
[2:16:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:16:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:17:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:18:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 1,454 errors found in 4,075,118 samples (0.04%)
RingBufferTesterDriver.inv.gz: 70 false positives, out of 16378, which is 0.43%.
Preserving 34 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1873
Saving - Total: 1873
Saving mutants results file

- Mutation is: 31:AOR:-(int,int):/(int,int):examples.RingBuffer@count():85:free - start |==> free / start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
Loaded invs from previous step: 1873
                                                                               [2:19:47 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31-objects.xml
Total loaded objects: 2529
[2:19:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:19:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:20:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:21:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 1,480 errors found in 4,075,118 samples (0.04%)
RingBufferTesterDriver.inv.gz: 72 false positives, out of 16378, which is 0.44%.
Preserving 35 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1873
Saving - Total: 1873
                                                                               Saving mutants results file

- Mutation is: 32:LVR:POS:0:examples.RingBuffer@count():87:1 |==> 0
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
Loaded invs from previous step: 1873
                                                                               [2:22:44 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32-objects.xml
Total loaded objects: 2529
[2:22:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:22:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:23:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:24:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 11,842 errors found in 4,075,118 samples (0.29%)
RingBufferTesterDriver.inv.gz: 160 false positives, out of 16378, which is 0.98%.
Preserving 79 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1873
Saving - Total: 1877
Saving mutants results file

- Mutation is: 33:LVR:POS:NEG:examples.RingBuffer@count():87:1 |==> -1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
Loaded invs from previous step: 1877
                                                                               [2:25:32 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33-objects.xml
Total loaded objects: 2529
[2:25:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:25:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:26:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:27:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 10,352 errors found in 4,075,118 samples (0.25%)
RingBufferTesterDriver.inv.gz: 138 false positives, out of 16378, which is 0.84%.
Preserving 67 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1877
Saving - Total: 1879
Saving mutants results file

- Mutation is: 34:AOR:-(int,int):%(int,int):examples.RingBuffer@count():87:data.size() - 1 |==> data.size() % 1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m34.dtrace.gz
Loaded invs from previous step: 1879
                                                                               [2:28:24 PM]:                                                                  [2:28:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuffLoaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m34-objects.xml
Total loaded objects: 2529
[2:28:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:28:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:29:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:30:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 12 errors found in 4,075,118 samples (0.00%)
RingBufferTesterDriver.inv.gz: 12 false positives, out of 16378, which is 0.07%.
Preserving 6 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1879
Saving - Total: 1879
Saving mutants results file

- Mutation is: 35:AOR:-(int,int):*(int,int):examples.RingBuffer@count():87:data.size() - 1 |==> data.size() RingBufferTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log hs_err_pid51463.log hs_err_pid53479.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers 1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
Loaded invs from previous step: 1879
                                                                               [2:31:22 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35-objects.xml
Total loaded objects: 2529
[2:31:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:31:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:32:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:33:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 11,842 errors found in 4,075,118 samples (0.29%)
RingBufferTesterDriver.inv.gz: 160 false positives, out of 16378, which is 0.98%.
Preserving 79 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1879
Saving - Total: 1879
Saving mutants results file

- Mutation is: 36:AOR:-(int,int):+(int,int):examples.RingBuffer@count():87:data.size() - 1 |==> data.size() + 1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
Loaded invs from previous step: 1879
                                                                               [2:34:12 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36-objects.xml
Total loaded objects: 2529
[2:34:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:34:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:35:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:36:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 10,352 errors found in 4,075,118 samples (0.25%)
RingBufferTesterDriver.inv.gz: 138 false positives, out of 16378, which is 0.84%.
Preserving 67 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1879
Saving - Total: 1879
Saving mutants results file

- Mutation is: 37:AOR:-(int,int):/(int,int):examples.RingBuffer@count():87:data.size() - 1 |==> data.size() / 1
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
Loaded invs from previous step: 1879
                                                                               [2:37:00 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37-objects.xml
Total loaded objects: 2529
[2:37:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:37:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:38:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 11,842 errors found in 4,075,118 samples (0.29%)
RingBufferTesterDriver.inv.gz: 160 false positives, out of 16378, which is 0.98%.
Preserving 79 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1879
Saving - Total: 1879
Saving mutants results file

- Mutation is: 38:AOR:-(int,int):%(int,int):examples.RingBuffer@count():87:(data.size() - 1) - start |==> (data.size() - 1) % start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
Loaded invs from previous step: 1879
                                                                               [2:39:54 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38-objects.xml
Total loaded objects: 2529
[2:39:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:39:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:40:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:41:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 11,843 errors found in 4,075,118 samples (0.29%)
RingBufferTesterDriver.inv.gz: 189 false positives, out of 16378, which is 1.15%.
Preserving 93 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1879
Saving - Total: 1879
Saving mutants results file

- Mutation is: 39:AOR:-(int,int):*(int,int):examples.RingBuffer@count():87:(data.size() - 1) - start |==> (data.size() - 1) RingBufferTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log hs_err_pid51463.log hs_err_pid53479.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
Loaded invs from previous step: 1879
                                                                               [2:42:50 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39-objects.xml
Total loaded objects: 2529
[2:42:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:42:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:43:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:44:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 11,853 errors found in 4,075,118 samples (0.29%)
RingBufferTesterDriver.inv.gz: 197 false positives, out of 16378, which is 1.20%.
Preserving 97 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1879
Saving - Total: 1881
Saving mutants results file

- Mutation is: 4:ROR:>(int,int):>=(int,int):examples.RingBuffer@<init>(int):47:n > 0 |==> n >= 0
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Loaded invs from previous step: 1881
                                                                               [2:45:40 PM]:                                                                  [2:45:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuffLoaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m4-objects.xml
Total loaded objects: 2533
[2:45:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:45:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:46:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:47:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 83 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 10 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 472 errors found in 4,076,990 samples (0.01%)
RingBufferTesterDriver.inv.gz: 118 false positives, out of 16378, which is 0.72%.
Preserving 67 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1881
Saving - Total: 1881
Saving mutants results file

- Mutation is: 40:AOR:-(int,int):+(int,int):examples.RingBuffer@count():87:(data.size() - 1) - start |==> (data.size() - 1) + start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Loaded invs from previous step: 1881
                                                                               [2:48:35 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40-objects.xml
Total loaded objects: 2529
[2:48:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:48:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:49:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:50:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 10,362 errors found in 4,075,118 samples (0.25%)
RingBufferTesterDriver.inv.gz: 146 false positives, out of 16378, which is 0.89%.
Preserving 71 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1881
Saving - Total: 1881
Saving mutants results file

- Mutation is: 41:AOR:-(int,int):/(int,int):examples.RingBuffer@count():87:(data.size() - 1) - start |==> (data.size() - 1) / start
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Loaded invs from previous step: 1881
                                                                               [2:51:25 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41-objects.xml
Total loaded objects: 2529
[2:51:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:51:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:52:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:53:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 11,842 errors found in 4,075,118 samples (0.29%)
RingBufferTesterDriver.inv.gz: 160 false positives, out of 16378, which is 0.98%.
Preserving 79 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1881
Saving - Total: 1881
Saving mutants results file

- Mutation is: 42:AOR:+(int,int):%(int,int):examples.RingBuffer@count():87:(data.size() - 1) - start + free |==> ((data.size() - 1) - start) % free
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
Loaded invs from previous step: 1881
                                                                               [2:54:15 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42-objects.xml
Total loaded objects: 2529
[2:54:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:54:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:55:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:56:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 58 errors found in 4,075,118 samples (0.00%)
RingBufferTesterDriver.inv.gz: 58 false positives, out of 16378, which is 0.35%.
Preserving 26 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1881
Saving - Total: 1881
Saving mutants results file

- Mutation is: 43:AOR:+(int,int):*(int,int):examples.RingBuffer@count():87:(data.size() - 1) - start + free |==> ((data.size() - 1) - start) RingBufferTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log hs_err_pid51463.log hs_err_pid53479.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers free
Checking invs on mutant: experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Loaded invs from previous step: 1881
                                                                               [2:57:03 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43-objects.xml
Total loaded objects: 2529
[2:57:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:54 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:57:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:28 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:29 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:30 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:31 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:32 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:33 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:34 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:35 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:36 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:37 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:38 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:39 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:40 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:41 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:42 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:43 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:44 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:45 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:46 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:47 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:48 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:49 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:50 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:51 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:52 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:53 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:55 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:56 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:57 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:58 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:58:59 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:00 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:01 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:02 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:03 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:04 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:05 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:06 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:07 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:08 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:09 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:10 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:11 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:12 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:13 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:14 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:15 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:16 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:17 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:18 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:19 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:20 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:21 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:22 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:23 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:24 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:25 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:26 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff[2:59:27 PM]: Reading experiments/ringbuffer_count/setup-files/mutants/RingBuff
No return from procedure observed 87 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.RingBuffer.RingBuffer(int) : 14 invocations
  examples.RingBuffer.item() : 33 invocations
  examples.RingBuffer.remove() : 40 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

RingBufferTesterDriver.inv.gz: 11,640 errors found in 4,075,118 samples (0.29%)
RingBufferTesterDriver.inv.gz: 102 false positives, out of 16378, which is 0.62%.
Preserving 48 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 1881
Saving - Total: 1881
Saving mutants results file

Filtering step finished due to timeout: 5417
# Filtering step took minutes: 90
# Mutation killing ability results saved in: experiments/ringbuffer_count/output/RingBuffer-count-specfuzzer-1-invs-by-mutants.csv

# Writing assertions to file: experiments/ringbuffer_count/output/RingBuffer-count-specfuzzer-1.assertions

# Filtering specs with buckets
> Mutant filter from file: experiments/ringbuffer_count/output/RingBuffer-count-specfuzzer-1-invs-by-mutants.csv
Unique mutants: 29
Loading assertions from: experiments/ringbuffer_count/output/RingBuffer-count-specfuzzer-1.assertions
Specs killing mutants: 295

> Minimizing by exploring the bit vector of each spec
Building bit vectors of size: 29
Building buckets
=====================================
Buckets: 82
Vector: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
Specs:
	daikon.Quant.size(this.data) == 1 || daikon.Quant.size(this.data) == 2 || daikon.Quant.size(this.data) == 3 l:  107  - Fails:  3317 Quality:  3317
	FuzzedInvariant ( some n : RingBuffer.data : n = null ) holds for: this l:  71  - Fails:  2386 Quality:  2386
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.free> l:  95  - Fails:  2047 Quality:  2048
	daikon.Quant.size(this.data) == 1 l:  33  - Fails:  544 Quality:  544
Picked:
	daikon.Quant.size(this.data) == 1
	daikon.Quant.size(this.data) == 1 || daikon.Quant.size(this.data) == 2 || daikon.Quant.size(this.data) == 3

Vector: [1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start> l:  96  - Fails:  2082 Quality:  2083
	FuzzedInvariant ( Integer_Variable_0 = #(RingBuffer.data) ) holds for: <orig(this), this.free> l:  94  - Fails:  2065 Quality:  2066
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), this.start>

Vector: [1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return> l:  126  - Fails:  1714 Quality:  1717
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return> l:  128  - Fails:  1704 Quality:  1706
	FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, return> l:  111  - Fails:  1704 Quality:  1706
	FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return> l:  115  - Fails:  1704 Quality:  1706
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.free, return> l:  127  - Fails:  1704 Quality:  1706
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, return> l:  128  - Fails:  1704 Quality:  1706
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return> l:  132  - Fails:  1704 Quality:  1706
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.capacity_, return> l:  132  - Fails:  1704 Quality:  1706
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return> l:  127  - Fails:  1704 Quality:  1706
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return l:  61  - Fails:  1704 Quality:  1705
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return l:  61  - Fails:  1704 Quality:  1705
	FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.free, return> l:  110  - Fails:  1378 Quality:  1380
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return l:  62  - Fails:  1376 Quality:  1377
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , return>

Vector: [1. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
 0. 1. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return> l:  128  - Fails:  1728 Quality:  1730
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.capacity_, return> l:  128  - Fails:  1400 Quality:  1402
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.capacity_, return>

Vector: [1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 1. 0. 1. 0. 1. 1. 0. 1. 0. 0. 1. 0. 1. 1.
 0. 1. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	\result == 0 || \result == 1 || \result == 2 l:  44  - Fails:  1960 Quality:  1960
Picked:
	\result == 0 || \result == 1 || \result == 2

Vector: [1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, return> l:  95  - Fails:  1814 Quality:  1816
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, return> l:  96  - Fails:  800 Quality:  802
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, return>

Vector: [1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m26.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m28.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m34.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return> l:  96  - Fails:  772 Quality:  774
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.free, return> l:  109  - Fails:  52 Quality:  54
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.free, return>

Vector: [1. 1. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.
 0. 1. 1. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m26.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m28.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m34.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.free, return> l:  95  - Fails:  5454 Quality:  5456
Picked:
	FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - -1 ) holds for: <this.free, return>

Vector: [1. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, return> l:  108  - Fails:  4982 Quality:  4984
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.capacity_, return> l:  113  - Fails:  102 Quality:  104
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 = 0) ) holds for: <this.free, return>

Vector: [1. 0. 1. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 1.
 0. 1. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.free, return> l:  123  - Fails:  3300 Quality:  3302
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != -1) ) holds for: <this.free, return> l:  123  - Fails:  2972 Quality:  2974
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0) ) holds for: <this.free, return>

Vector: [1. 0. 1. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, return> l:  97  - Fails:  1444 Quality:  1446
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, return>

Vector: [1. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, return> l:  96  - Fails:  1804 Quality:  1806
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, return>

Vector: [1. 0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m26.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m34.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return> l:  97  - Fails:  1710 Quality:  1712
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, return>

Vector: [1. 1. 1. 1. 0. 0. 0. 0. 1. 0. 1. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), return> l:  92  - Fails:  2107 Quality:  2108
Picked:
	FuzzedInvariant ( Integer_Variable_0 != #(RingBuffer.data) ) holds for: <orig(this), return>

Vector: [1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), return> l:  91  - Fails:  2284 Quality:  2285
Picked:
	FuzzedInvariant ( Integer_Variable_0 < #(RingBuffer.data) ) holds for: <orig(this), return>

Vector: [1. 0. 0. 0. 1. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, return> l:  101  - Fails:  384 Quality:  386
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.capacity_, return>

Vector: [1. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return> l:  131  - Fails:  390 Quality:  393
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.capacity_, return> l:  100  - Fails:  390 Quality:  392
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>

Vector: [1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return> l:  130  - Fails:  372 Quality:  375
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>

Vector: [1. 1. 1. 1. 1. 1. 1. 0. 0. 1. 0. 1. 0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1.
 0. 1. 1. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m26.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m28.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m34.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, return> l:  104  - Fails:  5404 Quality:  5406
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = 1) xor (Integer_Variable_1 > 0) ) holds for: <this.free, return>

Vector: [1. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
 0. 0. 0. 1. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m13.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m26.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m34.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m42.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, return> l:  110  - Fails:  12 Quality:  14
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, return>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start l:  64  - Fails:  18151 Quality:  18152
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.start l:  65  - Fails:  18151 Quality:  18152
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.capacity_> l:  115  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  16950 Quality:  16952
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_> l:  113  - Fails:  16791 Quality:  16793
	this.start == 1 || this.start == 2 || this.start == 3 l:  53  - Fails:  13287 Quality:  13287
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.start l:  65  - Fails:  12356 Quality:  12357
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, this.free> l:  110  - Fails:  11807 Quality:  11809
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, this.free> l:  98  - Fails:  11807 Quality:  11809
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, this.free> l:  99  - Fails:  11807 Quality:  11809
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, this.free> l:  98  - Fails:  11807 Quality:  11809
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  11542 Quality:  11544
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  11542 Quality:  11544
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, this.free> l:  99  - Fails:  8072 Quality:  8074
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, this.free> l:  100  - Fails:  8072 Quality:  8074
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.start, return> l:  95  - Fails:  4984 Quality:  4986
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.start, return> l:  95  - Fails:  4984 Quality:  4986
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.start, return> l:  96  - Fails:  4984 Quality:  4986
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, return> l:  105  - Fails:  4326 Quality:  4328
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.start, return> l:  96  - Fails:  3358 Quality:  3360
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.start, return> l:  97  - Fails:  3358 Quality:  3360
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.start, this.free> l:  108  - Fails:  2567 Quality:  2569
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_> l:  130  - Fails:  177 Quality:  179
Picked:
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.start

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Specs:
	this.start == 1 l:  15  - Fails:  1632 Quality:  1632
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, this.capacity_> l:  132  - Fails:  159 Quality:  161
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  108 Quality:  110
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  160  - Fails:  99 Quality:  102
	FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  143  - Fails:  99 Quality:  102
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  143  - Fails:  68 Quality:  71
Picked:
	this.start == 1

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  144  - Fails:  14438 Quality:  14441
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, return> l:  107  - Fails:  5312 Quality:  5314
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.start, return>

Vector: [0. 1. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	this.free % this.start == 0 l:  27  - Fails:  3453 Quality:  3453
	this.capacity_ % this.start == 0 l:  32  - Fails:  1209 Quality:  1209
	FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  135  - Fails:  812 Quality:  815
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  135  - Fails:  810 Quality:  813
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  140  - Fails:  806 Quality:  809
Picked:
	this.free % this.start == 0

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  141  - Fails:  1216 Quality:  1219
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 1. 0. 1. 0. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, return> l:  90  - Fails:  4682 Quality:  4684
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.free, return> l:  96  - Fails:  4682 Quality:  4684
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.free, return> l:  94  - Fails:  4682 Quality:  4684
	this.free > \result l:  19  - Fails:  4682 Quality:  4682
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  136  - Fails:  4284 Quality:  4287
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.free, return>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 1. 0. 1. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  153  - Fails:  9408 Quality:  9411
	FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  136  - Fails:  5540 Quality:  5543
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  137  - Fails:  5540 Quality:  5543
	FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  137  - Fails:  5540 Quality:  5543
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.free, return> l:  95  - Fails:  4258 Quality:  4260
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.free, return> l:  123  - Fails:  4258 Quality:  4260
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.free, return> l:  91  - Fails:  4258 Quality:  4260
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 1. 0. 1. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return> l:  122  - Fails:  4586 Quality:  4588
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return>

Vector: [0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, return> l:  124  - Fails:  700 Quality:  702
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.start, return>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  152  - Fails:  844 Quality:  847
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.free , return>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 1.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  136  - Fails:  2004 Quality:  2007
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>

Vector: [0. 1. 1. 1. 1. 1. 1. 0. 0. 0. 1. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  157  - Fails:  1278 Quality:  1281
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  133  - Fails:  4566 Quality:  4569
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  4535 Quality:  4538
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  162  - Fails:  378 Quality:  381
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  9177 Quality:  9180
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 1. 1. 1. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 1. 0. 0.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, return> l:  126  - Fails:  186 Quality:  188
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.free, return>

Vector: [0. 1. 1. 1. 1. 0. 1. 0. 0. 0. 1. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m29.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m31.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, return> l:  97  - Fails:  598 Quality:  600
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.start, return> l:  96  - Fails:  598 Quality:  600
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.start, return>

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return> l:  130  - Fails:  432 Quality:  435
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 ) holds for: <this.capacity_, return> l:  95  - Fails:  432 Quality:  434
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - -1 ) holds for: <this.capacity_, return> l:  101  - Fails:  432 Quality:  434
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 1 ) holds for: <this.capacity_, return> l:  99  - Fails:  432 Quality:  434
	this.capacity_ > \result l:  24  - Fails:  432 Quality:  432
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>

Vector: [0. 1. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  158  - Fails:  1220 Quality:  1223
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  157  - Fails:  1220 Quality:  1223
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= -1) ) holds for: <this.capacity_, return> l:  128  - Fails:  408 Quality:  410
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.capacity_, return> l:  100  - Fails:  408 Quality:  410
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 ) holds for: <this.capacity_, return> l:  96  - Fails:  408 Quality:  410
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 1. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return> l:  127  - Fails:  736 Quality:  738
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return>

Vector: [0. 1. 1. 1. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  142  - Fails:  1690 Quality:  1693
	FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  141  - Fails:  1690 Quality:  1693
	FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  142  - Fails:  1690 Quality:  1693
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  140  - Fails:  12 Quality:  15
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 1. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  157  - Fails:  372 Quality:  375
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 1. 1. 1. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  141  - Fails:  818 Quality:  821
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  140  - Fails:  792 Quality:  795
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 1. 0. 1. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  140  - Fails:  2118 Quality:  2121
	FuzzedInvariant ( (Integer_Variable_0 > -1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  141  - Fails:  2118 Quality:  2121
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  141  - Fails:  2118 Quality:  2121
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>

Vector: [0. 1. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return> l:  130  - Fails:  124 Quality:  127
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.free , this.capacity_ , return>

Vector: [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m14.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m16.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  160  - Fails:  72 Quality:  75
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.start l:  65  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.start l:  65  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.start l:  66  - Fails:  5795 Quality:  5796
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.capacity_> l:  117  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.capacity_> l:  114  - Fails:  5408 Quality:  5410
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, this.free> l:  109  - Fails:  3735 Quality:  3737
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, this.free> l:  99  - Fails:  3735 Quality:  3737
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, this.free> l:  100  - Fails:  3735 Quality:  3737
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, this.free> l:  112  - Fails:  3552 Quality:  3554
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, this.free> l:  109  - Fails:  3527 Quality:  3529
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.start, return> l:  109  - Fails:  1626 Quality:  1628
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.start, return> l:  97  - Fails:  1626 Quality:  1628
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.start, return> l:  96  - Fails:  1626 Quality:  1628
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.start, return> l:  106  - Fails:  1592 Quality:  1594
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  145  - Fails:  392 Quality:  395
	FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  142  - Fails:  392 Quality:  395
Picked:
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.start

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  145  - Fails:  9109 Quality:  9112
	FuzzedInvariant ( (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  145  - Fails:  9109 Quality:  9112
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  57 Quality:  59
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  57 Quality:  59
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free> l:  99  - Fails:  7392 Quality:  7394
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.start, this.free> l:  100  - Fails:  7184 Quality:  7186
Picked:
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.start, this.free>

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, return> l:  106  - Fails:  1954 Quality:  1956
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.start, return>

Vector: [0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 1.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, return> l:  95  - Fails:  1596 Quality:  1598
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.free, return> l:  95  - Fails:  1596 Quality:  1598
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.free, return> l:  91  - Fails:  1596 Quality:  1598
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.free, return> l:  95  - Fails:  1596 Quality:  1598
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.free, return> l:  121  - Fails:  1596 Quality:  1598
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.free, return> l:  126  - Fails:  1562 Quality:  1564
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.free, return>

Vector: [0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 0.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, return> l:  96  - Fails:  1596 Quality:  1598
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, return>

Vector: [0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 1.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  152  - Fails:  2584 Quality:  2587
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.free , return>

Vector: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  152  - Fails:  440 Quality:  443
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>

Vector: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 1. 1.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m27.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m30.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), return> l:  92  - Fails:  770 Quality:  771
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= #(RingBuffer.data) ) holds for: <orig(this), return>

Vector: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, return> l:  100  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * 1 ) holds for: <this.capacity_, return> l:  100  - Fails:  24 Quality:  26
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0) ) holds for: <this.capacity_, return> l:  131  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.capacity_, return> l:  101  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 ) holds for: <this.capacity_, return> l:  96  - Fails:  24 Quality:  26
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 0 ) holds for: <this.capacity_, return> l:  100  - Fails:  24 Quality:  26
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0) ) holds for: <this.capacity_, return> l:  126  - Fails:  24 Quality:  26
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + 0 ) holds for: <this.capacity_, return>

Vector: [0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  156  - Fails:  384 Quality:  387
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  157  - Fails:  384 Quality:  387
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>

Vector: [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  157  - Fails:  6 Quality:  9
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m15.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  140  - Fails:  1114 Quality:  1117
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return>

Vector: [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.free l:  64  - Fails:  16758 Quality:  16759
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.free l:  63  - Fails:  16758 Quality:  16759
	this.free == 1 || this.free == 2 || this.free == 3 l:  50  - Fails:  16253 Quality:  16253
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_> l:  102  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, this.capacity_> l:  102  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, this.capacity_> l:  114  - Fails:  15760 Quality:  15762
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_> l:  112  - Fails:  15640 Quality:  15642
	this.start <= this.free l:  23  - Fails:  15593 Quality:  15593
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  160  - Fails:  14673 Quality:  14676
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.free> l:  98  - Fails:  12370 Quality:  12372
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.free> l:  99  - Fails:  12370 Quality:  12372
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.free> l:  99  - Fails:  12370 Quality:  12372
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.free> l:  95  - Fails:  12370 Quality:  12372
	FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free> l:  108  - Fails:  12350 Quality:  12352
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.free l:  64  - Fails:  11463 Quality:  11464
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  10789 Quality:  10791
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  10789 Quality:  10791
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.free> l:  126  - Fails:  8670 Quality:  8672
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.free> l:  99  - Fails:  8305 Quality:  8307
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.free, return> l:  94  - Fails:  6336 Quality:  6338
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.free, return> l:  95  - Fails:  6336 Quality:  6338
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.free, return> l:  94  - Fails:  6336 Quality:  6338
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.free, return> l:  104  - Fails:  6330 Quality:  6332
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  152  - Fails:  5096 Quality:  5099
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.free, return> l:  96  - Fails:  4302 Quality:  4304
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.free, return> l:  95  - Fails:  4302 Quality:  4304
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.free> l:  100  - Fails:  4065 Quality:  4067
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.free> l:  95  - Fails:  1557 Quality:  1558
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.free, return> l:  96  - Fails:  1014 Quality:  1016
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  139  - Fails:  730 Quality:  733
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= 1) ) holds for: <this.start, this.free> l:  113  - Fails:  242 Quality:  244
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1) ) holds for: <this.free, this.capacity_> l:  131  - Fails:  120 Quality:  122
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_> l:  129  - Fails:  120 Quality:  122
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  49 Quality:  52
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.free

Vector: [0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  162  - Fails:  19140 Quality:  19143
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  133  - Fails:  4578 Quality:  4581
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, return> l:  106  - Fails:  6012 Quality:  6014
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.free, return>

Vector: [0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1. 1.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return> l:  131  - Fails:  104 Quality:  107
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  156  - Fails:  3404 Quality:  3407
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return>

Vector: [0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  80 Quality:  82
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <this.free, this.capacity_>

Vector: [0. 0. 0. 0. 1. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_> l:  134  - Fails:  4529 Quality:  4532
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2 ) holds for: <this.start , this.free , this.capacity_>

Vector: [0. 0. 0. 0. 1. 1. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5261 Quality:  5263
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_> l:  103  - Fails:  5261 Quality:  5263
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.start, this.capacity_> l:  100  - Fails:  5261 Quality:  5263
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5261 Quality:  5263
Picked:
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m17.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m19.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_> l:  131  - Fails:  5255 Quality:  5257
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.start, this.capacity_> l:  104  - Fails:  5255 Quality:  5257
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.free l:  64  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.free l:  65  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.free l:  64  - Fails:  5295 Quality:  5296
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, this.capacity_> l:  113  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, this.capacity_> l:  116  - Fails:  4971 Quality:  4973
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free> l:  131  - Fails:  3883 Quality:  3885
	FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free> l:  114  - Fails:  3883 Quality:  3885
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.free> l:  131  - Fails:  3883 Quality:  3885
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % 1 ) holds for: <this.free, return> l:  95  - Fails:  2034 Quality:  2036
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.free, return> l:  96  - Fails:  2034 Quality:  2036
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0) ) holds for: <this.free, return> l:  108  - Fails:  1708 Quality:  1710
	FuzzedInvariant ( (Integer_Variable_0 > -1) or (Integer_Variable_1 <= 0) ) holds for: <this.free, return> l:  105  - Fails:  1674 Quality:  1676
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  144  - Fails:  360 Quality:  363
	FuzzedInvariant ( (Integer_Variable_0 != -1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  141  - Fails:  360 Quality:  363
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, return> l:  97  - Fails:  360 Quality:  362
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.start, this.free> l:  100  - Fails:  208 Quality:  210
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free> l:  125  - Fails:  183 Quality:  185
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.free> l:  130  - Fails:  183 Quality:  185
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 / -1 ) holds for: <this.free, this.capacity_> l:  104  - Fails:  40 Quality:  42
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * -1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  40 Quality:  42
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 * -1 ) holds for: <this.capacity_, return> l:  101  - Fails:  6 Quality:  8
Picked:
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.free

Vector: [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return> l:  105  - Fails:  1710 Quality:  1712
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.capacity_, return> l:  110  - Fails:  328 Quality:  330
	FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return l:  62  - Fails:  328 Quality:  329
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1) ) holds for: <this.free, return>

Vector: [0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 1.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m18.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m43.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return> l:  111  - Fails:  1860 Quality:  1862
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= -1) ) holds for: <this.capacity_, return>

Vector: [0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_ l:  69  - Fails:  5237 Quality:  5238
Picked:
	FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: this.capacity_

Vector: [0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 1. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m2.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_> l:  113  - Fails:  5243 Quality:  5245
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.start, this.capacity_> l:  135  - Fails:  5243 Quality:  5245
	FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: this.capacity_ l:  68  - Fails:  5243 Quality:  5244
	FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: this.capacity_ l:  69  - Fails:  5243 Quality:  5244
	this.start <= this.capacity_ l:  28  - Fails:  4154 Quality:  4154
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <this, this.capacity_> l:  94  - Fails:  1946 Quality:  1947
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_> l:  134  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = -1) ) holds for: <this.free, this.capacity_> l:  130  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <this.free, this.capacity_> l:  99  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_> l:  102  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 - -1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <this.free, this.capacity_> l:  112  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <this.free, this.capacity_> l:  103  - Fails:  4537 Quality:  4539
	FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  144  - Fails:  4467 Quality:  4470
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2) ) holds for: <this.start , this.free , this.capacity_> l:  166  - Fails:  4467 Quality:  4470
	this.free <= this.capacity_ l:  27  - Fails:  3588 Quality:  3588
	this.capacity_ == 1 || this.capacity_ == 8 || this.capacity_ == 10 l:  66  - Fails:  2460 Quality:  2460
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  156  - Fails:  1532 Quality:  1535
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  157  - Fails:  1532 Quality:  1535
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % 1 ) holds for: <this.capacity_, return> l:  100  - Fails:  1532 Quality:  1534
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 % -1 ) holds for: <this.capacity_, return> l:  101  - Fails:  1532 Quality:  1534
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % 1 ) holds for: <this.capacity_, return> l:  99  - Fails:  1532 Quality:  1534
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 % -1 ) holds for: <this.capacity_, return> l:  100  - Fails:  1532 Quality:  1534
	FuzzedInvariant ( Integer_Variable_0 > Integer_Variable_1 * 0 ) holds for: <this.capacity_, return> l:  99  - Fails:  1532 Quality:  1534
	FuzzedInvariant ( Integer_Variable_0 >= #(RingBuffer.data) ) holds for: <orig(this), this.capacity_> l:  100  - Fails:  1498 Quality:  1499
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  161  - Fails:  360 Quality:  363
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2) ) holds for: <this.free , this.capacity_ , return> l:  156  - Fails:  360 Quality:  363
	FuzzedInvariant ( (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1) ) holds for: <this.capacity_, return> l:  109  - Fails:  360 Quality:  362
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <this.free, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m20.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return> l:  131  - Fails:  414 Quality:  417
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2 ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m3.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_> l:  105  - Fails:  6 Quality:  8
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <this.start, this.capacity_> l:  136  - Fails:  6 Quality:  8
	FuzzedInvariant ( (Integer_Variable_0 > -1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_> l:  119  - Fails:  6 Quality:  8
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1) ) holds for: <this.start, this.capacity_> l:  136  - Fails:  6 Quality:  8
	FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: this.capacity_ l:  69  - Fails:  6 Quality:  7
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: this.capacity_ l:  69  - Fails:  6 Quality:  7
	FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: this.capacity_ l:  70  - Fails:  6 Quality:  7
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - -1 ) holds for: <this.start, this.capacity_>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1.
 0. 1. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return> l:  161  - Fails:  54 Quality:  57
	FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  139  - Fails:  18 Quality:  21
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2) ) holds for: <this.start , this.capacity_ , return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 0. 0.
 0. 0. 1. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m32.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m35.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m37.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m41.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, return> l:  127  - Fails:  8 Quality:  10
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 1) ) holds for: <this.start, return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m33.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m36.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m38.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return> l:  136  - Fails:  10 Quality:  13
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.start , this.free , return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
 0. 1. 0. 0. 0.]
Mutants:
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m39.dtrace.gz
	experiments/ringbuffer_count/setup-files/mutants/RingBufferTesterDriver-m40.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, return> l:  96  - Fails:  4 Quality:  6
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 - 1 ) holds for: <this.free, return> l:  95  - Fails:  4 Quality:  6
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.free, return>

Buckets: 82
Specs: 83
Saved in file: experiments/ringbuffer_count/output/RingBuffer-count-specfuzzer-1-buckets.assertions

