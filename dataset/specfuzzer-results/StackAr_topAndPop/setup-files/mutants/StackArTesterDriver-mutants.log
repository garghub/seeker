1:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@<init>(int):33:theArray = new Object[capacity] |==> <NO-OP>
2:LVR:NEG:0:DataStructures.StackAr@<init>(int):34:-1 |==> 0
3:LVR:NEG:POS:DataStructures.StackAr@<init>(int):34:-1 |==> 1
4:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@<init>(int):34:topOfStack = -1 |==> <NO-OP>
5:LVR:NEG:0:DataStructures.StackAr@isEmpty():44:-1 |==> 0
6:LVR:NEG:POS:DataStructures.StackAr@isEmpty():44:-1 |==> 1
7:ROR:==(int,int):<=(int,int):DataStructures.StackAr@isEmpty():44:topOfStack == -1 |==> topOfStack <= -1
8:ROR:==(int,int):>=(int,int):DataStructures.StackAr@isEmpty():44:topOfStack == -1 |==> topOfStack >= -1
9:ROR:==(int,int):FALSE(int,int):DataStructures.StackAr@isEmpty():44:topOfStack == -1 |==> false
10:LVR:POS:0:DataStructures.StackAr@isFull():54:1 |==> 0
11:LVR:POS:NEG:DataStructures.StackAr@isFull():54:1 |==> -1
12:AOR:-(int,int):%(int,int):DataStructures.StackAr@isFull():54:theArray.length - 1 |==> theArray.length % 1
13:AOR:-(int,int):*(int,int):DataStructures.StackAr@isFull():54:theArray.length - 1 |==> theArray.length * 1
14:AOR:-(int,int):+(int,int):DataStructures.StackAr@isFull():54:theArray.length - 1 |==> theArray.length + 1
15:AOR:-(int,int):/(int,int):DataStructures.StackAr@isFull():54:theArray.length - 1 |==> theArray.length / 1
16:ROR:==(int,int):<=(int,int):DataStructures.StackAr@isFull():54:topOfStack == theArray.length - 1 |==> topOfStack <= theArray.length - 1
17:ROR:==(int,int):>=(int,int):DataStructures.StackAr@isFull():54:topOfStack == theArray.length - 1 |==> topOfStack >= theArray.length - 1
18:ROR:==(int,int):FALSE(int,int):DataStructures.StackAr@isFull():54:topOfStack == theArray.length - 1 |==> false
19:LVR:0:POS:DataStructures.StackAr@makeEmpty():63:0 |==> 1
20:LVR:0:NEG:DataStructures.StackAr@makeEmpty():63:0 |==> -1
21:LVR:POS:0:DataStructures.StackAr@makeEmpty():63:1 |==> 0
22:LVR:POS:NEG:DataStructures.StackAr@makeEmpty():63:1 |==> -1
23:AOR:+(int,int):%(int,int):DataStructures.StackAr@makeEmpty():63:topOfStack + 1 |==> topOfStack % 1
24:AOR:+(int,int):*(int,int):DataStructures.StackAr@makeEmpty():63:topOfStack + 1 |==> topOfStack * 1
25:AOR:+(int,int):-(int,int):DataStructures.StackAr@makeEmpty():63:topOfStack + 1 |==> topOfStack - 1
26:AOR:+(int,int):/(int,int):DataStructures.StackAr@makeEmpty():63:topOfStack + 1 |==> topOfStack / 1
27:STD:<CALL>:<NO-OP>:DataStructures.StackAr@makeEmpty():63:java.util.Arrays.fill(theArray, 0, topOfStack + 1, null) |==> <NO-OP>
28:LVR:NEG:0:DataStructures.StackAr@makeEmpty():64:-1 |==> 0
29:LVR:NEG:POS:DataStructures.StackAr@makeEmpty():64:-1 |==> 1
30:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@makeEmpty():64:topOfStack = -1 |==> <NO-OP>
31:COR:isEmpty():TRUE:DataStructures.StackAr@top():75:isEmpty() |==> false
32:COR:isEmpty():FALSE:DataStructures.StackAr@top():75:isEmpty() |==> true
33:STD:<RETURN>:<NO-OP>:DataStructures.StackAr@top():76:return null; |==> <NO-OP>
34:EVR:<ARRAY_ACCESS(java.lang.Object)>:<DEFAULT>:DataStructures.StackAr@top():77:theArray[topOfStack] |==> null
35:COR:isEmpty():TRUE:DataStructures.StackAr@pop():86:isEmpty() |==> false
36:COR:isEmpty():FALSE:DataStructures.StackAr@pop():86:isEmpty() |==> true
37:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@pop():88:theArray[topOfStack--] = null |==> <NO-OP>
38:COR:isFull():TRUE:DataStructures.StackAr@push(java.lang.Object):98:isFull() |==> false
39:COR:isFull():FALSE:DataStructures.StackAr@push(java.lang.Object):98:isFull() |==> true
40:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@push(java.lang.Object):100:theArray[++topOfStack] = x |==> <NO-OP>
41:COR:isEmpty():TRUE:DataStructures.StackAr@topAndPop():109:isEmpty() |==> false
42:COR:isEmpty():FALSE:DataStructures.StackAr@topAndPop():109:isEmpty() |==> true
43:STD:<RETURN>:<NO-OP>:DataStructures.StackAr@topAndPop():110:return null; |==> <NO-OP>
44:EVR:<METHOD_INVOCATION(java.lang.Object)>:<DEFAULT>:DataStructures.StackAr@topAndPop():111:top() |==> null
45:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@topAndPop():113:theArray[topOfStack] = null |==> <NO-OP>
46:LVR:POS:0:DataStructures.StackAr@topAndPop():114:1 |==> 0
47:LVR:POS:NEG:DataStructures.StackAr@topAndPop():114:1 |==> -1
48:AOR:-(int,int):%(int,int):DataStructures.StackAr@topAndPop():114:topOfStack - 1 |==> topOfStack % 1
49:AOR:-(int,int):*(int,int):DataStructures.StackAr@topAndPop():114:topOfStack - 1 |==> topOfStack * 1
50:AOR:-(int,int):+(int,int):DataStructures.StackAr@topAndPop():114:topOfStack - 1 |==> topOfStack + 1
51:AOR:-(int,int):/(int,int):DataStructures.StackAr@topAndPop():114:topOfStack - 1 |==> topOfStack / 1
52:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@topAndPop():114:topOfStack = topOfStack - 1 |==> <NO-OP>
53:LVR:TRUE:FALSE:DataStructures.StackAr@topAndPop():115:true |==> false
54:EVR:<IDENTIFIER(java.lang.Object)>:<DEFAULT>:DataStructures.StackAr@topAndPop():116:result |==> null
