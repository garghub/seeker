> SpecFuzzer
# Inference step (Daikon + Fuzzed Specs)
Daikon version 5.8.2, released May 4, 2020; http://plse.cs.washington.edu/daikon.

Loading invariants from file: invs_file.xml
Loaded: 0

Fuzzing specs:
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != -1) implies (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != -1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) xor (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > -1) implies (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= -1)
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 != -1) or (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: (Integer_Variable_0 > -1) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= -1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > -1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 <= -1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 <= -1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 != -1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= -1)
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * -1
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 <= -1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 != -1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 <= -1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > -1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: (Integer_Variable_0 != -1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 < -1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= -1)
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 <= -1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 != -1)
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= -1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 <= -1)
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * -1
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= -1) xor (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 = -1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 < -1)
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < -1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 != -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 >= -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - -1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 != -1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % -1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % -1
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 != 1)
Unique fuzzed invariants: 687 (2000)
Unary: 18 - Binary: 405 - Ternary: 264 - Discarded: 0
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
org.apache.commons.math3.util.MathUtilsNew:::OBJECT
this has only one value
===========================================================================
org.apache.commons.math3.util.MathUtilsNew.MathUtilsNew():::EXIT
===========================================================================
org.apache.commons.math3.util.MathUtilsNew.copySignInt(int, int):::ENTER
===========================================================================
org.apache.commons.math3.util.MathUtilsNew.copySignInt(int, int):::EXIT
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != -1) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != 1) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > 0) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= -1) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 <= 1) or (Integer_Variable_1 != 1) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 < 1) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 != 0) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < 0) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > -1) ) holds for: <orig(magnitude), return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <orig(magnitude), return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(magnitude), return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <orig(magnitude), return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <orig(magnitude), return>
Exiting Daikon.

# Filtering step

- Mutation is: 1:LVR:0:POS:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:0 |==> 1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m1.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:46:29 PM]:                                                                  [9:46:30 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:31 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:32 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:33 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:34 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:35 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:36 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 10:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:sign >= 0 |==> true
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m10.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:46:37 PM]:                                                                  [9:46:38 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:39 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:40 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:41 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:42 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:43 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 11:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:magnitude >= 0 && sign >= 0 |==> magnitude >= 0 == sign >= 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m11.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:46:45 PM]:                                                                  [9:46:46 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:47 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:48 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:49 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:50 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:51 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:52 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 12:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:magnitude >= 0 && sign >= 0 |==> false
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m12.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:46:53 PM]:                                                                  [9:46:54 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:55 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:56 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:57 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:58 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:46:59 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:00 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 13:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:magnitude >= 0 && sign >= 0 |==> magnitude >= 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m13.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:47:01 PM]:                                                                  [9:47:02 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:03 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:04 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:05 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:06 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:07 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 14:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:magnitude >= 0 && sign >= 0 |==> sign >= 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m14.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:47:09 PM]:                                                                  [9:47:10 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:11 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:12 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:13 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:14 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:15 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 15:LVR:0:POS:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:0 |==> 1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m15.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:47:17 PM]:                                                                  [9:47:18 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:19 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:20 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:21 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:22 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:23 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 16:LVR:0:NEG:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:0 |==> -1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m16.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:47:24 PM]:                                                                  [9:47:25 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:27 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:28 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:29 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:30 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:31 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 17:ROR:<(int,int):!=(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:magnitude < 0 |==> magnitude != 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m17.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:47:32 PM]:                                                                  [9:47:33 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:34 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:35 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:37 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:38 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 18:ROR:<(int,int):<=(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:magnitude < 0 |==> magnitude <= 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m18.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:47:40 PM]:                                                                  [9:47:41 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:42 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:43 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:45 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:46 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:47 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 19:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:magnitude < 0 |==> false
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m19.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:47:48 PM]:                                                                  [9:47:49 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:50 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:51 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 2:LVR:0:NEG:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:0 |==> -1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m2.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:47:56 PM]:                                                                  [9:47:57 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:58 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:47:59 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:00 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:01 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:02 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 20:LVR:0:POS:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:0 |==> 1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m20.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:48:03 PM]:                                                                  [9:48:04 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:05 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:07 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 21:LVR:0:NEG:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:0 |==> -1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m21.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:48:11 PM]:                                                                  [9:48:12 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:13 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:14 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:15 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:16 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:17 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 22:ROR:<(int,int):!=(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:sign < 0 |==> sign != 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m22.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:48:19 PM]:                                                                  [9:48:20 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:21 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:22 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:23 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:24 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:25 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 23:ROR:<(int,int):<=(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:sign < 0 |==> sign <= 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m23.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:48:26 PM]:                                                                  [9:48:27 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:28 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:29 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:30 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:31 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:32 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:33 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 24:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:sign < 0 |==> false
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m24.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:48:34 PM]:                                                                  [9:48:35 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:36 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:37 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:38 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:39 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:40 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 25:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:magnitude < 0 && sign < 0 |==> magnitude < 0 == sign < 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m25.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:48:41 PM]:                                                                  [9:48:42 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:43 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:44 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:45 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:46 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:48 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 0 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 0 false positives, out of 259, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 26:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:magnitude < 0 && sign < 0 |==> false
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m26.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:48:49 PM]:                                                                  [9:48:50 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:51 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:52 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:53 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:54 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:55 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 27:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:magnitude < 0 && sign < 0 |==> magnitude < 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m27.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:48:57 PM]:                                                                  [9:48:58 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:48:59 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:00 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:01 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:02 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:03 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 28:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:magnitude < 0 && sign < 0 |==> sign < 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m28.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:49:05 PM]:                                                                  [9:49:06 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:07 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:08 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:09 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:10 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:11 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:12 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 29:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:(magnitude >= 0 && sign >= 0) || (magnitude < 0 && sign < 0) |==> (magnitude >= 0 && sign >= 0) != (magnitude < 0 && sign < 0)
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m29.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:49:13 PM]:                                                                  [9:49:14 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:15 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:16 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 65,111 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 135, which is 1.48%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 3:ROR:>=(int,int):==(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:magnitude >= 0 |==> magnitude == 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m3.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:49:17 PM]:                                                                  [9:49:18 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:19 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:20 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:21 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:22 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:23 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:24 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 30:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:(magnitude >= 0 && sign >= 0) || (magnitude < 0 && sign < 0) |==> (magnitude >= 0 && sign >= 0)
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m30.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:49:26 PM]:                                                                  [9:49:27 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:28 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:29 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 65,111 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 135, which is 1.48%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 31:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):39:(magnitude >= 0 && sign >= 0) || (magnitude < 0 && sign < 0) |==> (magnitude < 0 && sign < 0)
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m31.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:49:30 PM]:                                                                  [9:49:31 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:32 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:33 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 65,111 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 135, which is 1.48%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 32:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:(magnitude >= 0 && sign >= 0) || (magnitude < 0 && sign < 0) |==> true
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m32.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:49:35 PM]:                                                                  [9:49:36 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:37 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:38 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:39 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 65,111 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 135, which is 1.48%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 33:EVR:<IDENTIFIER(int)>:<DEFAULT>:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):40:magnitude |==> 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m33.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:49:40 PM]:                                                                  [9:49:41 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:42 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:43 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:44 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:45 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:46 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 1,730 errors found in 126,739 samples (1.37%)
MathUtilsNewTesterDriver.inv.gz: 22 false positives, out of 259, which is 8.49%.
Preserving 10 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 10
Saving mutants results file

- Mutation is: 34:LVR:0:POS:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):41:0 |==> 1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m34.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:49:48 PM]:                                                                  [9:49:49 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:50 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:51 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:53 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:54 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 35:LVR:0:NEG:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):41:0 |==> -1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m35.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:49:55 PM]:                                                                  [9:49:56 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:57 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:58 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:49:59 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:00 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:01 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:02 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 36:ROR:>=(int,int):==(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):41:sign >= 0 |==> sign == 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m36.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:50:03 PM]:                                                                  [9:50:04 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:05 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:06 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:07 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:08 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:09 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:10 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 37:ROR:>=(int,int):>(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):41:sign >= 0 |==> sign > 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m37.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:50:12 PM]:                                                                  [9:50:13 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:14 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:15 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:16 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:17 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:18 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 38:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):41:sign >= 0 |==> true
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m38.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:50:19 PM]:                                                                  [9:50:20 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:21 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:22 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:23 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:24 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:25 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:26 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 39:ROR:==(int,int):<=(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):42:magnitude == Integer.MIN_VALUE |==> magnitude <= Integer.MIN_VALUE
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m39.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:50:28 PM]:                                                                  [9:50:29 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:30 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:31 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:34 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 4:ROR:>=(int,int):>(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:magnitude >= 0 |==> magnitude > 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m4.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:50:35 PM]:                                                                  [9:50:36 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:37 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:39 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 40:ROR:==(int,int):>=(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):42:magnitude == Integer.MIN_VALUE |==> magnitude >= Integer.MIN_VALUE
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m40.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:50:43 PM]:                                                                  [9:50:44 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:45 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:46 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:47 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:48 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:49 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:50 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:51 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
No return from procedure observed 116 times.  Unmatched entries are ignored!
Unterminated calls:
  org.apache.commons.math3.util.MathUtilsNew.copySignInt(int, int) : 116 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MathUtilsNewTesterDriver.inv.gz: 2 errors found in 97,159 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 41:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):42:magnitude == Integer.MIN_VALUE |==> false
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m41.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:50:52 PM]:                                                                  [9:50:53 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:54 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:55 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:56 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:57 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:50:58 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 42:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):41:sign >= 0 && magnitude == Integer.MIN_VALUE |==> sign >= 0 == (magnitude == Integer.MIN_VALUE)
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m42.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:50:59 PM]:                                                                  [9:51:00 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:01 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:02 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:03 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:04 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
No return from procedure observed 113 times.  Unmatched entries are ignored!
Unterminated calls:
  org.apache.commons.math3.util.MathUtilsNew.copySignInt(int, int) : 113 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MathUtilsNewTesterDriver.inv.gz: 0 errors found in 50,308 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 0 false positives, out of 135, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 43:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):41:sign >= 0 && magnitude == Integer.MIN_VALUE |==> false
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m43.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:51:06 PM]:                                                                  [9:51:07 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:08 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:10 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 65,111 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 135, which is 1.48%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 44:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):41:sign >= 0 && magnitude == Integer.MIN_VALUE |==> sign >= 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m44.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:51:11 PM]:                                                                  [9:51:12 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:13 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:14 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:15 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:16 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
No return from procedure observed 116 times.  Unmatched entries are ignored!
Unterminated calls:
  org.apache.commons.math3.util.MathUtilsNew.copySignInt(int, int) : 116 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MathUtilsNewTesterDriver.inv.gz: 2 errors found in 49,915 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 135, which is 1.48%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 45:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):42:sign >= 0 && magnitude == Integer.MIN_VALUE |==> magnitude == Integer.MIN_VALUE
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m45.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:51:17 PM]:                                                                  [9:51:18 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:19 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:20 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 65,111 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 135, which is 1.48%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 46:ORU:-(int):+(int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):45:-magnitude |==> +magnitude
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m46.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:51:22 PM]:                                                                  [9:51:23 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:24 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:25 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:26 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:27 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:28 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:29 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 10
Saving mutants results file

- Mutation is: 47:ORU:-(int):~(int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):45:-magnitude |==> ~magnitude
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m47.dtrace.gz
Loaded invs from previous step: 10
                                                                               [9:51:30 PM]:                                                                  [9:51:31 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:32 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:33 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:34 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:35 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:36 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:37 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 332 errors found in 126,739 samples (0.26%)
MathUtilsNewTesterDriver.inv.gz: 20 false positives, out of 259, which is 7.72%.
Preserving 9 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 10
Saving - Total: 13
Saving mutants results file

- Mutation is: 5:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:magnitude >= 0 |==> true
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m5.dtrace.gz
Loaded invs from previous step: 13
                                                                               [9:51:39 PM]:                                                                  [9:51:40 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:41 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:42 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:43 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:45 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:46 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 13
Saving - Total: 13
Saving mutants results file

- Mutation is: 6:LVR:0:POS:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:0 |==> 1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m6.dtrace.gz
Loaded invs from previous step: 13
                                                                               [9:51:47 PM]:                                                                  [9:51:48 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:49 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:50 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:51 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:52 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:53 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 13
Saving - Total: 13
Saving mutants results file

- Mutation is: 7:LVR:0:NEG:org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:0 |==> -1
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m7.dtrace.gz
Loaded invs from previous step: 13
                                                                               [9:51:54 PM]:                                                                  [9:51:55 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:56 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:57 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:58 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:51:59 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:00 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:01 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 13
Saving - Total: 13
Saving mutants results file

- Mutation is: 8:ROR:>=(int,int):==(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:sign >= 0 |==> sign == 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m8.dtrace.gz
Loaded invs from previous step: 13
                                                                               [9:52:02 PM]:                                                                  [9:52:03 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:04 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:05 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:06 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:07 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:08 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:09 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 13
Saving - Total: 13
Saving mutants results file

- Mutation is: 9:ROR:>=(int,int):>(int,int):org.apache.commons.math3.util.MathUtilsNew@copySignInt(int,int):38:sign >= 0 |==> sign > 0
Checking invs on mutant: experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m9.dtrace.gz
Loaded invs from previous step: 13
                                                                               [9:52:10 PM]: Checking size of experiments/MathUtilsNew_copySignInt/setup-files[9:52:11 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:12 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:13 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:14 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:15 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/[9:52:16 PM]: Reading experiments/MathUtilsNew_copySignInt/setup-files/mutants/
MathUtilsNewTesterDriver.inv.gz: 2 errors found in 126,739 samples (0.00%)
MathUtilsNewTesterDriver.inv.gz: 2 false positives, out of 259, which is 0.77%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 13
Saving - Total: 13
                                                                               Saving mutants results file

# Filtering step took minutes: 5
# Mutation killing ability results saved in: experiments/MathUtilsNew_copySignInt/output/MathUtilsNew-copySignInt-specfuzzer-1-invs-by-mutants.csv

# Writing assertions to file: experiments/MathUtilsNew_copySignInt/output/MathUtilsNew-copySignInt-specfuzzer-1.assertions

# Filtering specs with buckets
> Mutant filter from file: experiments/MathUtilsNew_copySignInt/output/MathUtilsNew-copySignInt-specfuzzer-1-invs-by-mutants.csv
Unique mutants: 45
Loading assertions from: experiments/MathUtilsNew_copySignInt/output/MathUtilsNew-copySignInt-specfuzzer-1.assertions
Specs killing mutants: 11

> Minimizing by exploring the bit vector of each spec
Building bit vectors of size: 45
Building buckets
=====================================
Buckets: 4
Vector: [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.
 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m1.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m10.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m11.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m12.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m13.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m14.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m15.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m16.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m17.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m18.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m19.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m2.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m20.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m21.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m22.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m23.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m24.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m26.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m27.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m28.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m29.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m3.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m30.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m31.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m32.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m33.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m34.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m35.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m36.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m37.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m38.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m39.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m4.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m40.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m41.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m43.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m44.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m45.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m46.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m47.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m5.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m6.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m7.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m8.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m9.dtrace.gz
Specs:
	this != null l:  12  - Fails:  90 Quality:  90
Picked:
	this != null

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m33.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(magnitude), return> l:  128  - Fails:  334 Quality:  336
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < 0) ) holds for: <orig(magnitude), return> l:  131  - Fails:  334 Quality:  336
	FuzzedInvariant ( (Integer_Variable_0 > 0) implies (Integer_Variable_1 != 0) ) holds for: <orig(magnitude), return> l:  115  - Fails:  334 Quality:  336
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(magnitude), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m33.dtrace.gz
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m47.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <orig(magnitude), return> l:  132  - Fails:  164 Quality:  166
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > 0) ) holds for: <orig(magnitude), return> l:  131  - Fails:  164 Quality:  166
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - -1 ) holds for: <orig(magnitude), return> l:  102  - Fails:  82 Quality:  84
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(magnitude), return> l:  101  - Fails:  82 Quality:  84
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + -1 ) holds for: <orig(magnitude), return> l:  102  - Fails:  64 Quality:  66
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <orig(magnitude), return> l:  101  - Fails:  64 Quality:  66
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= 1) ) holds for: <orig(magnitude), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/MathUtilsNew_copySignInt/setup-files/mutants/MathUtilsNewTesterDriver-m47.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != -1) ) holds for: <orig(magnitude), return> l:  112  - Fails:  34 Quality:  36
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 != -1) ) holds for: <orig(magnitude), return>

Buckets: 4
Specs: 4
Saved in file: experiments/MathUtilsNew_copySignInt/output/MathUtilsNew-copySignInt-specfuzzer-1-buckets.assertions

