1:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@<init>(int):44:theArray = new Object[capacity] |==> <NO-OP>
2:LVR:NEG:0:DataStructures.StackAr@<init>(int):45:-1 |==> 0
3:LVR:NEG:POS:DataStructures.StackAr@<init>(int):45:-1 |==> 1
4:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@<init>(int):45:topOfStack = -1 |==> <NO-OP>
5:LVR:NEG:0:DataStructures.StackAr@isEmpty():54:-1 |==> 0
6:LVR:NEG:POS:DataStructures.StackAr@isEmpty():54:-1 |==> 1
7:ROR:==(int,int):<=(int,int):DataStructures.StackAr@isEmpty():54:topOfStack == -1 |==> topOfStack <= -1
8:ROR:==(int,int):>=(int,int):DataStructures.StackAr@isEmpty():54:topOfStack == -1 |==> topOfStack >= -1
9:ROR:==(int,int):FALSE(int,int):DataStructures.StackAr@isEmpty():54:topOfStack == -1 |==> false
10:EVR:<IDENTIFIER(boolean)>:<DEFAULT>:DataStructures.StackAr@isEmpty():55:result |==> false
11:LVR:POS:0:DataStructures.StackAr@isFull():64:1 |==> 0
12:LVR:POS:NEG:DataStructures.StackAr@isFull():64:1 |==> -1
13:AOR:-(int,int):%(int,int):DataStructures.StackAr@isFull():64:theArray.length - 1 |==> theArray.length % 1
14:AOR:-(int,int):*(int,int):DataStructures.StackAr@isFull():64:theArray.length - 1 |==> theArray.length * 1
15:AOR:-(int,int):+(int,int):DataStructures.StackAr@isFull():64:theArray.length - 1 |==> theArray.length + 1
16:AOR:-(int,int):/(int,int):DataStructures.StackAr@isFull():64:theArray.length - 1 |==> theArray.length / 1
17:ROR:==(int,int):<=(int,int):DataStructures.StackAr@isFull():64:topOfStack == theArray.length - 1 |==> topOfStack <= theArray.length - 1
18:ROR:==(int,int):>=(int,int):DataStructures.StackAr@isFull():64:topOfStack == theArray.length - 1 |==> topOfStack >= theArray.length - 1
19:ROR:==(int,int):FALSE(int,int):DataStructures.StackAr@isFull():64:topOfStack == theArray.length - 1 |==> false
20:EVR:<IDENTIFIER(boolean)>:<DEFAULT>:DataStructures.StackAr@isFull():65:result |==> false
21:LVR:0:POS:DataStructures.StackAr@makeEmpty():73:0 |==> 1
22:LVR:0:NEG:DataStructures.StackAr@makeEmpty():73:0 |==> -1
23:LVR:POS:0:DataStructures.StackAr@makeEmpty():73:1 |==> 0
24:LVR:POS:NEG:DataStructures.StackAr@makeEmpty():73:1 |==> -1
25:AOR:+(int,int):%(int,int):DataStructures.StackAr@makeEmpty():73:topOfStack + 1 |==> topOfStack % 1
26:AOR:+(int,int):*(int,int):DataStructures.StackAr@makeEmpty():73:topOfStack + 1 |==> topOfStack * 1
27:AOR:+(int,int):-(int,int):DataStructures.StackAr@makeEmpty():73:topOfStack + 1 |==> topOfStack - 1
28:AOR:+(int,int):/(int,int):DataStructures.StackAr@makeEmpty():73:topOfStack + 1 |==> topOfStack / 1
29:STD:<CALL>:<NO-OP>:DataStructures.StackAr@makeEmpty():73:java.util.Arrays.fill(theArray, 0, topOfStack + 1, null) |==> <NO-OP>
30:LVR:NEG:0:DataStructures.StackAr@makeEmpty():74:-1 |==> 0
31:LVR:NEG:POS:DataStructures.StackAr@makeEmpty():74:-1 |==> 1
32:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@makeEmpty():74:topOfStack = -1 |==> <NO-OP>
33:COR:isEmpty():TRUE:DataStructures.StackAr@top():85:isEmpty() |==> false
34:COR:isEmpty():FALSE:DataStructures.StackAr@top():85:isEmpty() |==> true
35:EVR:<ARRAY_ACCESS(java.lang.Object)>:<DEFAULT>:DataStructures.StackAr@top():88:theArray[topOfStack] |==> null
36:EVR:<IDENTIFIER(java.lang.Object)>:<DEFAULT>:DataStructures.StackAr@top():91:result |==> null
37:COR:isEmpty():TRUE:DataStructures.StackAr@pop():99:isEmpty() |==> false
38:COR:isEmpty():FALSE:DataStructures.StackAr@pop():99:isEmpty() |==> true
39:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@pop():102:theArray[topOfStack] = null |==> <NO-OP>
40:LVR:POS:0:DataStructures.StackAr@pop():103:1 |==> 0
41:LVR:POS:NEG:DataStructures.StackAr@pop():103:1 |==> -1
42:AOR:-(int,int):%(int,int):DataStructures.StackAr@pop():103:topOfStack - 1 |==> topOfStack % 1
43:AOR:-(int,int):*(int,int):DataStructures.StackAr@pop():103:topOfStack - 1 |==> topOfStack * 1
44:AOR:-(int,int):+(int,int):DataStructures.StackAr@pop():103:topOfStack - 1 |==> topOfStack + 1
45:AOR:-(int,int):/(int,int):DataStructures.StackAr@pop():103:topOfStack - 1 |==> topOfStack / 1
46:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@pop():103:topOfStack = topOfStack - 1 |==> <NO-OP>
47:LVR:POS:0:DataStructures.StackAr@pop():105:1 |==> 0
48:LVR:POS:NEG:DataStructures.StackAr@pop():105:1 |==> -1
49:AOR:+(int,int):%(int,int):DataStructures.StackAr@pop():105:topOfStack + 1 |==> topOfStack % 1
50:AOR:+(int,int):*(int,int):DataStructures.StackAr@pop():105:topOfStack + 1 |==> topOfStack * 1
51:AOR:+(int,int):-(int,int):DataStructures.StackAr@pop():105:topOfStack + 1 |==> topOfStack - 1
52:AOR:+(int,int):/(int,int):DataStructures.StackAr@pop():105:topOfStack + 1 |==> topOfStack / 1
53:LVR:TRUE:FALSE:DataStructures.StackAr@pop():106:true |==> false
54:COR:isFull():TRUE:DataStructures.StackAr@push(java.lang.Object):117:isFull() |==> false
55:COR:isFull():FALSE:DataStructures.StackAr@push(java.lang.Object):117:isFull() |==> true
56:LVR:POS:0:DataStructures.StackAr@push(java.lang.Object):120:1 |==> 0
57:LVR:POS:NEG:DataStructures.StackAr@push(java.lang.Object):120:1 |==> -1
58:AOR:+(int,int):%(int,int):DataStructures.StackAr@push(java.lang.Object):120:topOfStack + 1 |==> topOfStack % 1
59:AOR:+(int,int):*(int,int):DataStructures.StackAr@push(java.lang.Object):120:topOfStack + 1 |==> topOfStack * 1
60:AOR:+(int,int):-(int,int):DataStructures.StackAr@push(java.lang.Object):120:topOfStack + 1 |==> topOfStack - 1
61:AOR:+(int,int):/(int,int):DataStructures.StackAr@push(java.lang.Object):120:topOfStack + 1 |==> topOfStack / 1
62:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@push(java.lang.Object):120:topOfStack = topOfStack + 1 |==> <NO-OP>
63:STD:<ASSIGN>:<NO-OP>:DataStructures.StackAr@push(java.lang.Object):121:theArray[topOfStack] = x |==> <NO-OP>
