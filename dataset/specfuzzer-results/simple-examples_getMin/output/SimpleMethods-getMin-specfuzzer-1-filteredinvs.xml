<object-stream>
  <set>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &lt;= 1) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) implies (Integer_Variable_1 &lt;= 1) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 1) implies (Integer_Variable_1 &lt;= 0) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &lt;= 1) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt; Integer_Variable_1 - 1 ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 = 0) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 &lt;= 1) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 != 1) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) or (Integer_Variable_1 != 0) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &lt; 0) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 = 0) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) iff (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 / 1 ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &lt; 1) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt; Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - 1 ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 + 0 ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 - 0 ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= 0) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) implies (Integer_Variable_1 &gt; 0) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(a) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( Integer_Variable_0 &gt;= Integer_Variable_1 * 1 ) holds for: &lt;orig(a), return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != 1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) or (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) or (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) implies (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt;= Integer_Variable_1) iff (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) implies (Integer_Variable_1 &lt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt;= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2) ) holds for: &lt;orig(b) , return , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &lt; Integer_Variable_1) iff (Integer_Variable_1 &lt; Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(b) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 &gt; Integer_Variable_1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(b) , return&gt;</string>
    <string>FuzzedInvariant ( (Integer_Variable_0 = 1) or (Integer_Variable_1 &gt;= Integer_Variable_2) ) holds for: &lt;orig(a) , orig(a) , return&gt;</string>
  </set>
</object-stream>