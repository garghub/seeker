buckets=6
specs=8
=====================================
:::OBJECT
this.currentSize <= daikon.Quant.size(this.theArray)
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <this.currentSize, this.back>
this.back <= daikon.Quant.size(this.theArray)-1
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 % -1 ) holds for: <this.currentSize, this.back>
=====================================
:::POSTCONDITION
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.currentSize , this.front , this.back>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <orig(this.currentSize) , orig(this.front) , this.back>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2) ) holds for: <this.currentSize , orig(this.front) , this.back>
\old(this.currentSize) <= daikon.Quant.size(this.theArray)
