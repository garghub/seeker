> SpecFuzzer
# Inference step (Daikon + Fuzzed Specs)
Daikon version 5.8.2, released May 4, 2020; http://plse.cs.washington.edu/daikon.

Loading invariants from file: invs_file.xml
Loaded: 0

Fuzzing specs:
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 >= -1.0) or (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / 0.0
Fuzzed spec: (Double_Variable_0 != 0.0) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: (Double_Variable_0 > 0.0) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 < -1.0) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: (Double_Variable_0 != -1.0) or (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 < 1.0) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 = 1.0) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / -1.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 >= 1.0)
Fuzzed spec: (Double_Variable_0 >= 1.0) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 <= -1.0)
Fuzzed spec: (Double_Variable_0 = 0.0) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 <= 0.0) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 < 0.0) or (Double_Variable_1 < 0.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 < 0.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * -1.0
Fuzzed spec: (Double_Variable_0 != 1.0) iff (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 > -1.0) xor (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= -1.0) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 0.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: (Double_Variable_0 > 0.0) iff (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 >= -1.0) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * 0.0
Fuzzed spec: (Double_Variable_0 = 1.0) iff (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= -1.0) iff (Double_Variable_1 <= -1.0)
Fuzzed spec: (Double_Variable_0 > 1.0) xor (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 = 1.0) xor (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 >= -1.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 > 0.0) xor (Double_Variable_1 > 1.0)
Fuzzed spec: (Double_Variable_0 < -1.0) iff (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= -1.0) or (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 <= 1.0) iff (Double_Variable_1 <= -1.0)
Fuzzed spec: (Double_Variable_0 < -1.0) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: (Double_Variable_0 <= 1.0) implies (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= 1.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: (Double_Variable_0 <= 0.0) xor (Double_Variable_1 < 1.0)
Fuzzed spec: (Double_Variable_0 >= 1.0) xor (Double_Variable_1 >= -1.0)
Fuzzed spec: (Double_Variable_0 = -1.0) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= -1.0) or (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 > 1.0) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 0.0) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / -1.0
Fuzzed spec: (Double_Variable_0 = -1.0) xor (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= 1.0) implies (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= -1.0) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: (Double_Variable_0 > 0.0) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 1.0) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 > -1.0)
Fuzzed spec: (Double_Variable_0 <= 1.0) xor (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = -1.0) xor (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 < -1.0) iff (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / -1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 >= 1.0) or (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= -1.0) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 < -1.0)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 0.0) or (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 != 1.0)
Fuzzed spec: (Double_Variable_0 = 1.0) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > 0.0) iff (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 < 1.0) xor (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + -1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < -1.0) iff (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 != -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 != -1.0) or (Double_Variable_1 = 1.0)
Fuzzed spec: (Double_Variable_0 >= 1.0) xor (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= -1.0) iff (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - 0.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= -1.0) iff (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % -1.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 != 1.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 0.0
Fuzzed spec: (Double_Variable_0 != 0.0) or (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / 0.0
Fuzzed spec: (Double_Variable_0 > -1.0) iff (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 > -1.0) implies (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 > 1.0)
Fuzzed spec: (Double_Variable_0 < 1.0) xor (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 > 1.0) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= 0.0) implies (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / 0.0
Fuzzed spec: (Double_Variable_0 < -1.0) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 = 0.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 1.0
Fuzzed spec: (Double_Variable_0 = 0.0) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = 1.0) iff (Double_Variable_1 != 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > -1.0)
Fuzzed spec: (Double_Variable_0 > -1.0) iff (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 <= 0.0) xor (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 = -1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 = 1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 1.0
Fuzzed spec: (Double_Variable_0 < 0.0) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 != 1.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 != -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 < 1.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 <= -1.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 < 1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 != 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 < 1.0) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 < 0.0) xor (Double_Variable_1 > -1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 = 1.0) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < 0.0) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * 0.0
Fuzzed spec: (Double_Variable_0 < 1.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 < 0.0) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 1.0) xor (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= 0.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: (Double_Variable_0 > 1.0) xor (Double_Variable_1 < -1.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 = 0.0)
Fuzzed spec: (Double_Variable_0 != 1.0) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= -1.0) xor (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 < 0.0)
Fuzzed spec: (Double_Variable_0 > 0.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 < -1.0)
Fuzzed spec: (Double_Variable_0 > 0.0) or (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < 1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = 1.0) xor (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 <= 0.0) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = 1.0) xor (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 1.0) implies (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 != -1.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: (Double_Variable_0 = -1.0) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 < -1.0) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: (Double_Variable_0 = 1.0) or (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: (Double_Variable_0 != -1.0) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 1.0
Fuzzed spec: (Double_Variable_0 < 0.0) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 1.0
Fuzzed spec: (Double_Variable_0 < -1.0) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= 0.0) xor (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 0.0) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - 1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 0.0
Fuzzed spec: (Double_Variable_0 <= 0.0) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 <= 1.0) xor (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * -1.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: (Double_Variable_0 < 1.0) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 = 1.0) xor (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= -1.0) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != 0.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 >= -1.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 = 0.0) iff (Double_Variable_1 > 1.0)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 < 0.0) iff (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= -1.0) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 != -1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: (Double_Variable_0 = -1.0) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 > 1.0) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: (Double_Variable_0 <= 1.0) or (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: (Double_Variable_0 >= -1.0) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < -1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 < 0.0) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 = 1.0) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= 1.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: (Double_Variable_0 = -1.0) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != 1.0) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != 0.0) implies (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * -1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 != -1.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: (Double_Variable_0 < 0.0) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * -1.0
Fuzzed spec: (Double_Variable_0 = -1.0) or (Double_Variable_1 >= 1.0)
Fuzzed spec: (Double_Variable_0 < 1.0) implies (Double_Variable_1 != 1.0)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 0.0
Fuzzed spec: (Double_Variable_0 > 1.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % 1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 = 1.0) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 != 1.0) xor (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 != 0.0) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 >= -1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 > -1.0)
Fuzzed spec: (Double_Variable_0 = 0.0) iff (Double_Variable_1 = 1.0)
Fuzzed spec: (Double_Variable_0 != 1.0) xor (Double_Variable_1 < -1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 < 0.0)
Fuzzed spec: (Double_Variable_0 > -1.0) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > 1.0) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 = 1.0)
Fuzzed spec: (Double_Variable_0 = -1.0) iff (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 = 1.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 >= 1.0)
Fuzzed spec: (Double_Variable_0 < 1.0) iff (Double_Variable_1 <= -1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 < -1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + -1.0
Fuzzed spec: (Double_Variable_0 <= 0.0) iff (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 != -1.0) iff (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 = 1.0)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 1.0) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + -1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 0.0) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 > 0.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= 0.0) xor (Double_Variable_1 != 1.0)
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: (Double_Variable_0 < 0.0) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 >= 1.0)
Fuzzed spec: (Double_Variable_0 = -1.0) iff (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 != 1.0) xor (Double_Variable_1 > 1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != 1.0) xor (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 1.0
Fuzzed spec: (Double_Variable_0 < -1.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < -1.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= 0.0) or (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 != 1.0) or (Double_Variable_1 = 1.0)
Fuzzed spec: (Double_Variable_0 != 0.0) implies (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: (Double_Variable_0 > -1.0) iff (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 = 0.0) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * -1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 <= 1.0) or (Double_Variable_1 != -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 > 1.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 >= -1.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 0.0) xor (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 > 0.0) or (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 1.0) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= -1.0) or (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 != 1.0) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 != -1.0)
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > 0.0) iff (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: (Double_Variable_0 <= 1.0) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: (Double_Variable_0 < 0.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 = -1.0) implies (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 > 1.0) xor (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 > -1.0) implies (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= 1.0) xor (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 1.0
Fuzzed spec: (Double_Variable_0 >= 0.0) iff (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= 0.0) iff (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 <= -1.0)
Fuzzed spec: (Double_Variable_0 <= -1.0) iff (Double_Variable_1 = 0.0)
Fuzzed spec: (Double_Variable_0 > 1.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 = -1.0) implies (Double_Variable_1 < 1.0)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < 1.0) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < 1.0) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 < 1.0) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 0.0) implies (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= 1.0) iff (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 > 0.0) implies (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= 0.0) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 < 1.0) implies (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 != 0.0) or (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / 0.0
Fuzzed spec: (Double_Variable_0 >= 0.0) implies (Double_Variable_1 = -1.0)
Fuzzed spec: (Double_Variable_0 <= 0.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 > -1.0)
Fuzzed spec: (Double_Variable_0 < 0.0) implies (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 >= 1.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > 0.0) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 1.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 1.0) iff (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 != -1.0) or (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: (Double_Variable_0 >= 0.0) implies (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 1.0
Fuzzed spec: (Double_Variable_0 > 0.0) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 > 0.0) implies (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 1.0) iff (Double_Variable_1 >= -1.0)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 < -1.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 > 1.0) iff (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 <= -1.0)
Fuzzed spec: (Double_Variable_0 <= -1.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 != 1.0) or (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 != 1.0) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= 0.0) implies (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 <= -1.0)
Fuzzed spec: (Double_Variable_0 > 0.0) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= 0.0) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < 1.0) or (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: (Double_Variable_0 > 0.0) or (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: (Double_Variable_0 = 1.0) implies (Double_Variable_1 != -1.0)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: (Double_Variable_0 = -1.0) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < 1.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= 0.0) iff (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > 0.0) iff (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 > 1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - -1.0
Fuzzed spec: (Double_Variable_0 > -1.0) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 > -1.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 0.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: (Double_Variable_0 < 0.0) iff (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= -1.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= 1.0) iff (Double_Variable_1 = -1.0)
Fuzzed spec: (Double_Variable_0 > 0.0) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < 1.0) xor (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % 1.0
Fuzzed spec: (Double_Variable_0 < 1.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 != 0.0) or (Double_Variable_1 = 1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 = 0.0) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 < -1.0) or (Double_Variable_1 != 1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 = 0.0) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= -1.0) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= -1.0) iff (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 0.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + -1.0
Fuzzed spec: (Double_Variable_0 = -1.0) iff (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / -1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 >= 1.0) iff (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 != 1.0) xor (Double_Variable_1 > 0.0)
Fuzzed spec: (Double_Variable_0 != 1.0) iff (Double_Variable_1 = -1.0)
Fuzzed spec: (Double_Variable_0 > -1.0) xor (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + 1.0
Fuzzed spec: (Double_Variable_0 >= 0.0) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 > 0.0) iff (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 > 0.0) implies (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != -1.0) or (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 > 1.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 = 0.0)
Fuzzed spec: (Double_Variable_0 <= -1.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 != 1.0) implies (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= 1.0) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: (Double_Variable_0 = -1.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = 1.0) xor (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 != 0.0) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + 1.0
Fuzzed spec: (Double_Variable_0 != 1.0) implies (Double_Variable_1 != 1.0)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= 1.0) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 > -1.0) xor (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + 1.0
Fuzzed spec: (Double_Variable_0 = 0.0) xor (Double_Variable_1 > 1.0)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 > -1.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 != -1.0) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 1.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 0.0) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % -1.0
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: (Double_Variable_0 > -1.0) implies (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > -1.0) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 >= 1.0) or (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 = 1.0) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * -1.0
Fuzzed spec: (Double_Variable_0 <= -1.0) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 1.0
Fuzzed spec: (Double_Variable_0 != 1.0) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 = 0.0) xor (Double_Variable_1 < 1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 = 0.0)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 > 0.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 = 1.0) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 < 0.0) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 >= 1.0) xor (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 <= -1.0)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 != -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 = 1.0) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - 1.0
Fuzzed spec: (Double_Variable_0 <= 1.0) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - 1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) xor (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= -1.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: (Double_Variable_0 < 1.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + 0.0
Fuzzed spec: (Double_Variable_0 != 1.0) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 >= 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: (Double_Variable_0 != -1.0) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 < 0.0) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 > -1.0) or (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - 1.0
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 <= 1.0)
Fuzzed spec: (Double_Variable_0 < -1.0) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 = 1.0) iff (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) iff (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 > 0.0) implies (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 > 1.0) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 < 0.0) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 < 1.0) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 > -1.0) iff (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: (Double_Variable_0 > -1.0) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 > -1.0) implies (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / 0.0
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 != 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / 1.0
Fuzzed spec: (Double_Variable_0 = 0.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 < 1.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 1.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 != 1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 < -1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= -1.0) xor (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 >= -1.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) xor (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < 1.0) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < 1.0) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != 0.0) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * 1.0
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 > 1.0) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 0.0) or (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 != 1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) iff (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 > 1.0) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= 0.0) xor (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 <= 0.0)
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= 1.0) xor (Double_Variable_1 != -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= 0.0) iff (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 = 0.0) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 1.0
Fuzzed spec: (Double_Variable_0 >= -1.0) or (Double_Variable_1 <= 1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > 0.0) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 <= -1.0) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 > 0.0) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = -1.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) iff (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: (Double_Variable_0 > 1.0) or (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: (Double_Variable_0 <= -1.0) xor (Double_Variable_1 != -1.0)
Fuzzed spec: (Double_Variable_0 < 1.0) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 < Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 > 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) xor (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) or (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / 0.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 >= 0.0)
Fuzzed spec: (Double_Variable_0 <= -1.0) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 != 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) iff (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) xor (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) xor (Double_Variable_1 <= 0.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + 0.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - 0.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 < 0.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1 % Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 >= Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != 1.0) implies (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 = 0.0
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 != -1.0) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 >= 1.0)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) implies (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 * -1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 <= -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 - Double_Variable_2
Fuzzed spec: (Double_Variable_0 <= 1.0) or (Double_Variable_1 >= -1.0)
Fuzzed spec: (Double_Variable_0 <= Double_Variable_1) implies (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: (Double_Variable_0 <= 1.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * -1.0
Fuzzed spec: (Double_Variable_0 > Double_Variable_1) iff (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / 1.0
Fuzzed spec: (Double_Variable_0 < 0.0) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 > 0.0) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= 1.0
Fuzzed spec: (Double_Variable_0 = 0.0) xor (Double_Variable_1 < 0.0)
Fuzzed spec: (Double_Variable_0 != -1.0) iff (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: (Double_Variable_0 != Double_Variable_1) implies (Double_Variable_1 > -1.0)
Fuzzed spec: Double_Variable_0 >= -1.0
Fuzzed spec: Double_Variable_0 != 1.0
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 >= 0.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: (Double_Variable_0 >= -1.0) xor (Double_Variable_1 > 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) or (Double_Variable_1 = Double_Variable_2)
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: Double_Variable_0 < -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 - -1.0
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1 + 1.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 > 1.0
Fuzzed spec: Double_Variable_0 != Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * 1.0
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 = -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) implies (Double_Variable_1 != Double_Variable_2)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 + Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / -1.0
Fuzzed spec: Double_Variable_0 < Double_Variable_1
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 > Double_Variable_1 * Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1 / Double_Variable_2
Fuzzed spec: Double_Variable_0 < 1.0
Fuzzed spec: Double_Variable_0 > Double_Variable_1
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 / -1.0
Fuzzed spec: (Double_Variable_0 != -1.0) iff (Double_Variable_1 < 1.0)
Fuzzed spec: Double_Variable_0 < Double_Variable_1 - Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1
Fuzzed spec: Double_Variable_0 < 0.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % 1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 < Double_Variable_1) xor (Double_Variable_1 > Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= -1.0
Fuzzed spec: (Double_Variable_0 <= -1.0) or (Double_Variable_1 <= Double_Variable_2)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * 0.0
Fuzzed spec: (Double_Variable_0 >= -1.0) or (Double_Variable_1 = 1.0)
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: (Double_Variable_0 <= 0.0) implies (Double_Variable_1 != 0.0)
Fuzzed spec: (Double_Variable_0 > 0.0) xor (Double_Variable_1 != 0.0)
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 = 1.0
Fuzzed spec: Double_Variable_0 > 0.0
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 > -1.0) implies (Double_Variable_1 < Double_Variable_2)
Fuzzed spec: Double_Variable_0 > -1.0
Fuzzed spec: (Double_Variable_0 <= 0.0) iff (Double_Variable_1 = -1.0)
Fuzzed spec: Double_Variable_0 = Double_Variable_1 / 0.0
Fuzzed spec: Double_Variable_0 = Double_Variable_1
Fuzzed spec: (Double_Variable_0 < 1.0) or (Double_Variable_1 < -1.0)
Fuzzed spec: Double_Variable_0 > Double_Variable_1 % -1.0
Fuzzed spec: (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= 1.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1
Fuzzed spec: Double_Variable_0 != -1.0
Fuzzed spec: Double_Variable_0 >= Double_Variable_1 * Double_Variable_2
Fuzzed spec: (Double_Variable_0 >= -1.0) implies (Double_Variable_1 < 0.0)
Fuzzed spec: Double_Variable_0 <= Double_Variable_1 % Double_Variable_2
Fuzzed spec: Double_Variable_0 != Double_Variable_1
Fuzzed spec: Double_Variable_0 <= 1.0
Unique fuzzed invariants: 675 (2000)
Unary: 18 - Binary: 394 - Ternary: 263 - Discarded: 0
Reading declaration files Processing trace data; reading 1 dtrace file:

Loaded objects from file: /specfuzzer/experiments/FastMathNew_floor/setup-files/FastMathNewTesterDriver-objects.xml
Total loaded objects: 853
===========================================================================
org.apache.commons.math3.util.FastMathNew:::CLASS
===========================================================================
org.apache.commons.math3.util.FastMathNew:::OBJECT
===========================================================================
org.apache.commons.math3.util.FastMathNew.FastMathNew():::EXIT
===========================================================================
org.apache.commons.math3.util.FastMathNew.floor(double):::ENTER
===========================================================================
org.apache.commons.math3.util.FastMathNew.floor(double):::EXIT123
===========================================================================
org.apache.commons.math3.util.FastMathNew.floor(double):::EXIT
FuzzedInvariant ( (Double_Variable_0 != -1.0) or (Double_Variable_1 < 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 != -1.0) or (Double_Variable_1 <= 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 != 0.0) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 != 0.0) or (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 != 1.0) or (Double_Variable_1 = 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < -1.0) iff (Double_Variable_1 < -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < 0.0) implies (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < 0.0) xor (Double_Variable_1 > -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < 1.0) implies (Double_Variable_1 != 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < 1.0) xor (Double_Variable_1 > 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 != -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 <= -1.0) or (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 <= 0.0) iff (Double_Variable_1 < 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 <= 0.0) or (Double_Variable_1 != -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 <= 1.0) implies (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 <= 1.0) or (Double_Variable_1 != -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 <= 1.0) or (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 != -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 = -1.0) iff (Double_Variable_1 = -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 = -1.0) implies (Double_Variable_1 < 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 = -1.0) implies (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 = 1.0) implies (Double_Variable_1 != -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 != 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 > -1.0) iff (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 > -1.0) implies (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 > 0.0) iff (Double_Variable_1 > 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 > 0.0) iff (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 > 0.0) implies (Double_Variable_1 != -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 > 0.0) implies (Double_Variable_1 > 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 > 1.0) implies (Double_Variable_1 > 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 != 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= -1.0) iff (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= -1.0) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= 0.0) implies (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= 1.0) implies (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= 1.0) or (Double_Variable_1 <= 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 != 0.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 * -1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 + -1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 + 1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 - -1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 - 1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 / -1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 < Double_Variable_1 + 1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 < Double_Variable_1 - -1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 <= Double_Variable_1 + 1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 <= Double_Variable_1 - -1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 > Double_Variable_1 + -1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 > Double_Variable_1 - 1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 * 1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 + -1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 + 0.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 - 0.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 - 1.0 ) holds for: <orig(x), return>
FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 / 1.0 ) holds for: <orig(x), return>
return <= orig(x)
Exiting Daikon.

# Filtering step

- Mutation is: 1:ROR:!=(double,double):<(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):102:x != x |==> x < x
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m1.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:17:18 PM]:                                                                  [8:17:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 10:ROR:<=(double,double):==(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):106:x <= -TWO_POWER_52 |==> x == -TWO_POWER_52
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m10.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:17:48 PM]:                                                                  [8:17:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:17:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 11:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):106:x <= -TWO_POWER_52 |==> true
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m11.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:18:18 PM]:                                                                  [8:18:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 348,794 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 267, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 12:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.util.FastMathNew@floor(double):106:x >= TWO_POWER_52 || x <= -TWO_POWER_52 |==> x >= TWO_POWER_52 != x <= -TWO_POWER_52
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m12.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:18:34 PM]: Checking size of experiments/FastMathNew_floor/setup-files/mutant[8:18:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:18:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 13:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.util.FastMathNew@floor(double):106:x >= TWO_POWER_52 || x <= -TWO_POWER_52 |==> x >= TWO_POWER_52
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m13.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:19:02 PM]:                                                                  [8:19:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 14:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.util.FastMathNew@floor(double):106:x >= TWO_POWER_52 || x <= -TWO_POWER_52 |==> x <= -TWO_POWER_52
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m14.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:19:30 PM]:                                                                  [8:19:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:19:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 15:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.util.FastMathNew@floor(double):106:x >= TWO_POWER_52 || x <= -TWO_POWER_52 |==> true
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m15.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:20:01 PM]:                                                                  [8:20:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 348,794 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 267, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 16:STD:<RETURN>:<NO-OP>:org.apache.commons.math3.util.FastMathNew@floor(double):107:return x; |==> <NO-OP>
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m16.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:20:17 PM]:                                                                  [8:20:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 17:EVR:<TYPE_CAST(long)>:<DEFAULT>:org.apache.commons.math3.util.FastMathNew@floor(double):110:(long)x |==> 0L
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
Loaded invs from previous step: 0
                                                                               [8:20:50 PM]:                                                                  [8:20:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:20:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 60,926 errors found in 662,514 samples (9.20%)
FastMathNewTesterDriver.inv.gz: 150 false positives, out of 487, which is 30.80%.
Preserving 74 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 74
Saving mutants results file

- Mutation is: 18:LVR:0:POS:org.apache.commons.math3.util.FastMathNew@floor(double):111:0 |==> 1
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m18.dtrace.gz
Loaded invs from previous step: 74
                                                                               [8:21:20 PM]:                                                                  [8:21:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
                                                                               FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 74
Saving - Total: 74
Saving mutants results file

- Mutation is: 19:LVR:0:NEG:org.apache.commons.math3.util.FastMathNew@floor(double):111:0 |==> -1
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m19.dtrace.gz
Loaded invs from previous step: 74
                                                                               [8:21:50 PM]:                                                                  [8:21:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:21:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 74
Saving - Total: 74
Saving mutants results file

- Mutation is: 2:ROR:!=(double,double):>(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):102:x != x |==> x > x
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m2.dtrace.gz
Loaded invs from previous step: 74
                                                                               [8:22:22 PM]:                                                                  [8:22:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 74
Saving - Total: 74
Saving mutants results file

- Mutation is: 20:ROR:<(double,double):!=(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):111:x < 0 |==> x != 0
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m20.dtrace.gz
Loaded invs from previous step: 74
                                                                               [8:22:53 PM]:                                                                  [8:22:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:22:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 2,046 errors found in 662,514 samples (0.31%)
FastMathNewTesterDriver.inv.gz: 26 false positives, out of 487, which is 5.34%.
Preserving 13 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 74
Saving - Total: 74
Saving mutants results file

- Mutation is: 21:ROR:<(double,double):<=(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):111:x < 0 |==> x <= 0
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m21.dtrace.gz
Loaded invs from previous step: 74
                                                                               [8:23:23 PM]:                                                                  [8:23:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 74
Saving - Total: 74
Saving mutants results file

- Mutation is: 22:ROR:<(double,double):FALSE(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):111:x < 0 |==> false
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
Loaded invs from previous step: 74
                                                                               [8:23:53 PM]:                                                                  [8:23:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:23:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 9,012 errors found in 662,514 samples (1.36%)
FastMathNewTesterDriver.inv.gz: 106 false positives, out of 487, which is 21.77%.
Preserving 52 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 74
Saving - Total: 76
Saving mutants results file

- Mutation is: 23:ROR:!=(double,double):<(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):111:y != x |==> y < x
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
Loaded invs from previous step: 76
                                                                               [8:24:22 PM]:                                                                  [8:24:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 9,012 errors found in 662,514 samples (1.36%)
FastMathNewTesterDriver.inv.gz: 106 false positives, out of 487, which is 21.77%.
Preserving 52 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 76
Saving - Total: 76
Saving mutants results file

- Mutation is: 24:ROR:!=(double,double):>(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):111:y != x |==> y > x
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m24.dtrace.gz
Loaded invs from previous step: 76
                                                                               [8:24:53 PM]:                                                                  [8:24:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:24:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 76
Saving - Total: 76
Saving mutants results file

- Mutation is: 25:ROR:!=(double,double):TRUE(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):111:y != x |==> true
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m25.dtrace.gz
Loaded invs from previous step: 76
                                                                               [8:25:22 PM]:                                                                  [8:25:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 4,364 errors found in 662,514 samples (0.66%)
FastMathNewTesterDriver.inv.gz: 18 false positives, out of 487, which is 3.70%.
Preserving 9 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 76
Saving - Total: 78
Saving mutants results file

- Mutation is: 26:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.util.FastMathNew@floor(double):111:x < 0 && y != x |==> x < 0 == (y != x)
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
Loaded invs from previous step: 78
                                                                               [8:25:52 PM]:                                                                  [8:25:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:25:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 13,166 errors found in 662,514 samples (1.99%)
FastMathNewTesterDriver.inv.gz: 46 false positives, out of 487, which is 9.45%.
Preserving 23 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 78
Saving - Total: 85
Saving mutants results file

- Mutation is: 27:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.util.FastMathNew@floor(double):111:x < 0 && y != x |==> false
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
Loaded invs from previous step: 85
                                                                               [8:26:22 PM]: Checking size of experiments/FastMathNew_floor/setup-files/mutant[8:26:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 9,012 errors found in 662,514 samples (1.36%)
FastMathNewTesterDriver.inv.gz: 106 false positives, out of 487, which is 21.77%.
Preserving 52 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 28:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.util.FastMathNew@floor(double):111:x < 0 && y != x |==> x < 0
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m28.dtrace.gz
Loaded invs from previous step: 85
                                                                               [8:26:54 PM]:                                                                  [8:26:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:26:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 4,364 errors found in 662,514 samples (0.66%)
FastMathNewTesterDriver.inv.gz: 18 false positives, out of 487, which is 3.70%.
Preserving 9 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 29:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.util.FastMathNew@floor(double):111:x < 0 && y != x |==> y != x
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m29.dtrace.gz
Loaded invs from previous step: 85
                                                                               [8:27:25 PM]:                                                                  [8:27:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 2,046 errors found in 662,514 samples (0.31%)
FastMathNewTesterDriver.inv.gz: 26 false positives, out of 487, which is 5.34%.
Preserving 13 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 3:ROR:!=(double,double):TRUE(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):102:x != x |==> true
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m3.dtrace.gz
Loaded invs from previous step: 85
                                                                               [8:27:55 PM]:                                                                  [8:27:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:27:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 348,794 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 267, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 30:STD:<DEC>:<NO-OP>:org.apache.commons.math3.util.FastMathNew@floor(double):112:y-- |==> <NO-OP>
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
Loaded invs from previous step: 85
                                                                               [8:28:13 PM]:                                                                  [8:28:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 9,012 errors found in 662,514 samples (1.36%)
FastMathNewTesterDriver.inv.gz: 106 false positives, out of 487, which is 21.77%.
Preserving 52 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 31:LVR:0:POS:org.apache.commons.math3.util.FastMathNew@floor(double):116:0 |==> 1
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m31.dtrace.gz
Loaded invs from previous step: 85
                                                                               [8:28:44 PM]:                                                                  [8:28:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:28:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 32:LVR:0:NEG:org.apache.commons.math3.util.FastMathNew@floor(double):116:0 |==> -1
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
Loaded invs from previous step: 85
                                                                               [8:29:16 PM]:                                                                  [8:29:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 13,464 errors found in 662,514 samples (2.03%)
FastMathNewTesterDriver.inv.gz: 132 false positives, out of 487, which is 27.10%.
Preserving 65 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 96
Saving mutants results file

- Mutation is: 33:ROR:==(long,long):<=(long,long):org.apache.commons.math3.util.FastMathNew@floor(double):116:y == 0 |==> y <= 0
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
Loaded invs from previous step: 96
                                                                               [8:29:47 PM]:                                                                  [8:29:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:29:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 64,872 errors found in 662,514 samples (9.79%)
FastMathNewTesterDriver.inv.gz: 148 false positives, out of 487, which is 30.39%.
Preserving 73 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 96
Saving - Total: 100
Saving mutants results file

- Mutation is: 34:ROR:==(long,long):>=(long,long):org.apache.commons.math3.util.FastMathNew@floor(double):116:y == 0 |==> y >= 0
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m34.dtrace.gz
Loaded invs from previous step: 100
                                                                               [8:30:19 PM]:                                                                  [8:30:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 47,838 errors found in 662,514 samples (7.22%)
FastMathNewTesterDriver.inv.gz: 102 false positives, out of 487, which is 20.94%.
Preserving 50 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 100
Saving - Total: 104
Saving mutants results file

- Mutation is: 35:ROR:==(long,long):FALSE(long,long):org.apache.commons.math3.util.FastMathNew@floor(double):116:y == 0 |==> false
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m35.dtrace.gz
Loaded invs from previous step: 104
                                                                               [8:30:49 PM]:                                                                  [8:30:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:30:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 104
Saving - Total: 104
Saving mutants results file

- Mutation is: 36:AOR:*(double,double):%(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):117:x FastMathNewTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers y |==> x % y
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
Loaded invs from previous step: 104
                                                                               [8:31:21 PM]:                                                                  [8:31:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 46,050 errors found in 662,514 samples (6.95%)
FastMathNewTesterDriver.inv.gz: 150 false positives, out of 487, which is 30.80%.
Preserving 72 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 104
Saving - Total: 126
Saving mutants results file

- Mutation is: 37:AOR:*(double,double):+(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):117:x FastMathNewTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers y |==> x + y
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m37.dtrace.gz
Loaded invs from previous step: 126
                                                                               [8:31:52 PM]:                                                                  [8:31:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:31:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 126
Saving - Total: 126
Saving mutants results file

- Mutation is: 38:AOR:*(double,double):-(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):117:x FastMathNewTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers y |==> x - y
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m38.dtrace.gz
Loaded invs from previous step: 126
                                                                               [8:32:22 PM]:                                                                  [8:32:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 126
Saving - Total: 126
Saving mutants results file

- Mutation is: 39:AOR:*(double,double):/(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):117:x FastMathNewTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers y |==> x / y
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
Loaded invs from previous step: 126
                                                                               [8:32:53 PM]:                                                                  [8:32:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:32:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 46,050 errors found in 662,514 samples (6.95%)
FastMathNewTesterDriver.inv.gz: 150 false positives, out of 487, which is 30.80%.
Preserving 72 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 126
Saving - Total: 126
Saving mutants results file

- Mutation is: 4:STD:<RETURN>:<NO-OP>:org.apache.commons.math3.util.FastMathNew@floor(double):103:return x; |==> <NO-OP>
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m4.dtrace.gz
Loaded invs from previous step: 126
                                                                               [8:33:24 PM]:                                                                  [8:33:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 126
Saving - Total: 126
Saving mutants results file

- Mutation is: 40:EVR:<IDENTIFIER(long)>:<DEFAULT>:org.apache.commons.math3.util.FastMathNew@floor(double):119:y |==> 0L
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
Loaded invs from previous step: 126
                                                                               [8:33:56 PM]:                                                                  [8:33:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:33:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 75,038 errors found in 662,514 samples (11.33%)
FastMathNewTesterDriver.inv.gz: 162 false positives, out of 487, which is 33.26%.
Preserving 80 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 126
Saving - Total: 127
Saving mutants results file

- Mutation is: 41:LVR:TRUE:FALSE:org.apache.commons.math3.util.FastMathNew@floor(double):122:true |==> false
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
Loaded invs from previous step: 127
                                                                               [8:34:27 PM]:                                                                  Saving mutants results file

- Mutation is: 42:EVR:<IDENTIFIER(double)>:<DEFAULT>:org.apache.commons.math3.util.FastMathNew@floor(double):123:result |==> 0.0
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Loaded invs from previous step: 127
                                                                               [8:34:31 PM]: Checking size of experiments/FastMathNew_floor/setup-files/mutant[8:34:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:34:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 75,038 errors found in 662,514 samples (11.33%)
FastMathNewTesterDriver.inv.gz: 162 false positives, out of 487, which is 33.26%.
Preserving 80 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 127
Saving - Total: 127
Saving mutants results file

- Mutation is: 5:ROR:>=(double,double):==(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):106:x >= TWO_POWER_52 |==> x == TWO_POWER_52
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m5.dtrace.gz
Loaded invs from previous step: 127
                                                                               [8:35:04 PM]:                                                                  [8:35:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:26 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:27 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:28 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:29 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 127
Saving - Total: 127
Saving mutants results file

- Mutation is: 6:ROR:>=(double,double):>(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):106:x >= TWO_POWER_52 |==> x > TWO_POWER_52
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m6.dtrace.gz
Loaded invs from previous step: 127
                                                                               [8:35:37 PM]:                                                                  [8:35:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:45 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:46 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:47 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:48 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:35:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 127
Saving - Total: 127
Saving mutants results file

- Mutation is: 7:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):106:x >= TWO_POWER_52 |==> true
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m7.dtrace.gz
Loaded invs from previous step: 127
                                                                               [8:36:10 PM]:                                                                  [8:36:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:18 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:19 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:20 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:21 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:22 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:23 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:24 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:25 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 348,794 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 267, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 127
Saving - Total: 127
Saving mutants results file

- Mutation is: 8:ORU:-(double):+(double):org.apache.commons.math3.util.FastMathNew@floor(double):106:-TWO_POWER_52 |==> +TWO_POWER_52
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m8.dtrace.gz
Loaded invs from previous step: 127
                                                                               [8:36:29 PM]:                                                                  [8:36:30 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:31 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:32 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:33 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:34 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:35 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:36 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:37 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:38 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:39 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:40 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:41 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:42 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:43 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:44 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 348,794 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 267, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 127
Saving - Total: 127
Saving mutants results file

- Mutation is: 9:ROR:<=(double,double):<(double,double):org.apache.commons.math3.util.FastMathNew@floor(double):106:x <= -TWO_POWER_52 |==> x < -TWO_POWER_52
Checking invs on mutant: experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m9.dtrace.gz
Loaded invs from previous step: 127
                                                                               [8:36:48 PM]:                                                                  [8:36:49 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:50 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:51 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:52 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:53 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:54 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:55 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:56 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:57 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:58 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:36:59 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:00 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:01 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:02 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:03 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:04 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:05 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:06 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:07 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:08 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:09 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:10 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:11 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:12 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:13 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:14 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:15 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:16 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat[8:37:17 PM]: Reading experiments/FastMathNew_floor/setup-files/mutants/FastMat
FastMathNewTesterDriver.inv.gz: 0 errors found in 662,514 samples (0.00%)
FastMathNewTesterDriver.inv.gz: 0 false positives, out of 487, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 127
Saving - Total: 127
Saving mutants results file

# Filtering step took minutes: 20
# Mutation killing ability results saved in: experiments/FastMathNew_floor/output/FastMathNew-floor-specfuzzer-1-invs-by-mutants.csv

# Writing assertions to file: experiments/FastMathNew_floor/output/FastMathNew-floor-specfuzzer-1.assertions

# Filtering specs with buckets
> Mutant filter from file: experiments/FastMathNew_floor/output/FastMathNew-floor-specfuzzer-1-invs-by-mutants.csv
Unique mutants: 18
Loading assertions from: experiments/FastMathNew_floor/output/FastMathNew-floor-specfuzzer-1.assertions
Specs killing mutants: 61

> Minimizing by exploring the bit vector of each spec
Building bit vectors of size: 18
Building buckets
=====================================
Buckets: 35
Vector: [1. 0. 1. 1. 0. 0. 1. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m34.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 - 0.0 ) holds for: <orig(x), return> l:  93  - Fails:  8002 Quality:  8004
	FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 / 1.0 ) holds for: <orig(x), return> l:  93  - Fails:  8002 Quality:  8004
	FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 + 0.0 ) holds for: <orig(x), return> l:  93  - Fails:  8002 Quality:  8004
	FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 * 1.0 ) holds for: <orig(x), return> l:  93  - Fails:  8002 Quality:  8004
	FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 ) holds for: <orig(x), return> l:  87  - Fails:  8002 Quality:  8004
	daikon.Quant.fuzzy.lte(\result, \old(x)) l:  40  - Fails:  8002 Quality:  8002
Picked:
	FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 - 0.0 ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m34.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( Double_Variable_0 > Double_Variable_1 - 1.0 ) holds for: <orig(x), return> l:  92  - Fails:  7206 Quality:  7208
	FuzzedInvariant ( Double_Variable_0 > Double_Variable_1 + -1.0 ) holds for: <orig(x), return> l:  93  - Fails:  7206 Quality:  7208
	FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 - 1.0 ) holds for: <orig(x), return> l:  93  - Fails:  6574 Quality:  6576
	FuzzedInvariant ( Double_Variable_0 >= Double_Variable_1 + -1.0 ) holds for: <orig(x), return> l:  94  - Fails:  6574 Quality:  6576
Picked:
	FuzzedInvariant ( Double_Variable_0 > Double_Variable_1 - 1.0 ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 1. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return> l:  119  - Fails:  5840 Quality:  5842
Picked:
	FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 1. 0. 1. 1. 0. 1. 0. 1. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m25.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m28.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 < -1.0) iff (Double_Variable_1 < -1.0) ) holds for: <orig(x), return> l:  106  - Fails:  4728 Quality:  4730
Picked:
	FuzzedInvariant ( (Double_Variable_0 < -1.0) iff (Double_Variable_1 < -1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > -1.0) ) holds for: <orig(x), return> l:  123  - Fails:  1552 Quality:  1554
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 != -1.0) ) holds for: <orig(x), return> l:  124  - Fails:  1056 Quality:  1058
Picked:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > -1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 0. 0. 1. 0. 0. 1. 1. 1. 1. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m34.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < -1.0) ) holds for: <orig(x), return> l:  123  - Fails:  6278 Quality:  6280
Picked:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < -1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m25.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m28.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 = -1.0) iff (Double_Variable_1 = -1.0) ) holds for: <orig(x), return> l:  106  - Fails:  3098 Quality:  3100
Picked:
	FuzzedInvariant ( (Double_Variable_0 = -1.0) iff (Double_Variable_1 = -1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 0. 0. 1. 0. 0. 1. 0. 1. 1. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m34.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = 1.0) ) holds for: <orig(x), return> l:  122  - Fails:  6366 Quality:  6368
Picked:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = 1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 0. 0. 1. 0. 0. 1. 1. 1. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > 1.0) ) holds for: <orig(x), return> l:  122  - Fails:  5020 Quality:  5022
Picked:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 > 1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 1. 0. 1. 1. 0. 1. 0. 1. 0. 1. 1. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m25.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m28.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 >= -1.0) iff (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return> l:  108  - Fails:  5956 Quality:  5958
Picked:
	FuzzedInvariant ( (Double_Variable_0 >= -1.0) iff (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 1. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return> l:  123  - Fails:  4612 Quality:  4614
Picked:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return>

Vector: [1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m20.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m29.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( Double_Variable_0 <= Double_Variable_1 + 1.0 ) holds for: <orig(x), return> l:  93  - Fails:  5976 Quality:  5978
	FuzzedInvariant ( Double_Variable_0 <= Double_Variable_1 - -1.0 ) holds for: <orig(x), return> l:  94  - Fails:  5976 Quality:  5978
Picked:
	FuzzedInvariant ( Double_Variable_0 <= Double_Variable_1 + 1.0 ) holds for: <orig(x), return>

Vector: [1. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1. 0. 1. 1. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m20.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m29.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 <= 0.0) iff (Double_Variable_1 < 1.0) ) holds for: <orig(x), return> l:  105  - Fails:  7658 Quality:  7660
Picked:
	FuzzedInvariant ( (Double_Variable_0 <= 0.0) iff (Double_Variable_1 < 1.0) ) holds for: <orig(x), return>

Vector: [1. 1. 0. 0. 1. 1. 0. 1. 1. 0. 0. 0. 0. 1. 1. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m20.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m25.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m28.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m29.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( Double_Variable_0 < Double_Variable_1 - -1.0 ) holds for: <orig(x), return> l:  93  - Fails:  9994 Quality:  9996
	FuzzedInvariant ( Double_Variable_0 < Double_Variable_1 + 1.0 ) holds for: <orig(x), return> l:  92  - Fails:  9994 Quality:  9996
Picked:
	FuzzedInvariant ( Double_Variable_0 < Double_Variable_1 - -1.0 ) holds for: <orig(x), return>

Vector: [1. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m20.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m29.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 != 0.0) ) holds for: <orig(x), return> l:  118  - Fails:  8266 Quality:  8268
	FuzzedInvariant ( (Double_Variable_0 > Double_Variable_1) implies (Double_Variable_1 != 0.0) ) holds for: <orig(x), return> l:  123  - Fails:  5206 Quality:  5208
	FuzzedInvariant ( (Double_Variable_0 > 0.0) implies (Double_Variable_1 > 0.0) ) holds for: <orig(x), return> l:  108  - Fails:  5206 Quality:  5208
Picked:
	FuzzedInvariant ( (Double_Variable_0 = Double_Variable_1) or (Double_Variable_1 != 0.0) ) holds for: <orig(x), return>

Vector: [1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m20.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m29.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 > 1.0) implies (Double_Variable_1 > 0.0) ) holds for: <orig(x), return> l:  108  - Fails:  4076 Quality:  4078
Picked:
	FuzzedInvariant ( (Double_Variable_0 > 1.0) implies (Double_Variable_1 > 0.0) ) holds for: <orig(x), return>

Vector: [1. 1. 0. 0. 0. 1. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m20.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m29.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 > 0.0) iff (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return> l:  105  - Fails:  6430 Quality:  6432
	FuzzedInvariant ( (Double_Variable_0 > 0.0) iff (Double_Variable_1 > 0.0) ) holds for: <orig(x), return> l:  104  - Fails:  6430 Quality:  6432
	FuzzedInvariant ( (Double_Variable_0 < 1.0) xor (Double_Variable_1 > 0.0) ) holds for: <orig(x), return> l:  104  - Fails:  6430 Quality:  6432
Picked:
	FuzzedInvariant ( (Double_Variable_0 > 0.0) iff (Double_Variable_1 >= 1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m25.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m28.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 + 1.0 ) holds for: <orig(x), return> l:  93  - Fails:  4018 Quality:  4020
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 - -1.0 ) holds for: <orig(x), return> l:  94  - Fails:  4018 Quality:  4020
Picked:
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 + 1.0 ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 != 1.0) or (Double_Variable_1 = 1.0) ) holds for: <orig(x), return> l:  104  - Fails:  1130 Quality:  1132
Picked:
	FuzzedInvariant ( (Double_Variable_0 != 1.0) or (Double_Variable_1 = 1.0) ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m17.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 - 1.0 ) holds for: <orig(x), return> l:  93  - Fails:  632 Quality:  634
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 + -1.0 ) holds for: <orig(x), return> l:  94  - Fails:  632 Quality:  634
Picked:
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 - 1.0 ) holds for: <orig(x), return>

Vector: [0. 0. 1. 1. 0. 0. 1. 0. 0. 1. 1. 1. 1. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m34.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = -1.0) ) holds for: <orig(x), return> l:  123  - Fails:  5718 Quality:  5720
Picked:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 = -1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 1. 1. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m22.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m23.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m27.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m30.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return> l:  120  - Fails:  1724 Quality:  1726
Picked:
	FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m25.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m28.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 = -1.0) implies (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return> l:  111  - Fails:  408 Quality:  410
Picked:
	FuzzedInvariant ( (Double_Variable_0 = -1.0) implies (Double_Variable_1 >= -1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 > -1.0) implies (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return> l:  110  - Fails:  1842 Quality:  1844
	FuzzedInvariant ( (Double_Variable_0 <= -1.0) or (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return> l:  106  - Fails:  1842 Quality:  1844
	FuzzedInvariant ( (Double_Variable_0 >= 0.0) implies (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return> l:  110  - Fails:  1842 Quality:  1844
	FuzzedInvariant ( (Double_Variable_0 != 0.0) or (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return> l:  105  - Fails:  1842 Quality:  1844
Picked:
	FuzzedInvariant ( (Double_Variable_0 > -1.0) implies (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 > -1.0) iff (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return> l:  106  - Fails:  6126 Quality:  6128
	FuzzedInvariant ( (Double_Variable_0 < 0.0) xor (Double_Variable_1 > -1.0) ) holds for: <orig(x), return> l:  105  - Fails:  6126 Quality:  6128
Picked:
	FuzzedInvariant ( (Double_Variable_0 > -1.0) iff (Double_Variable_1 >= 0.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m26.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 != -1.0) ) holds for: <orig(x), return> l:  120  - Fails:  614 Quality:  616
Picked:
	FuzzedInvariant ( (Double_Variable_0 <= Double_Variable_1) or (Double_Variable_1 != -1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
Specs:
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 / -1.0 ) holds for: <orig(x), return> l:  94  - Fails:  408 Quality:  410
	FuzzedInvariant ( (Double_Variable_0 < 1.0) implies (Double_Variable_1 != 1.0) ) holds for: <orig(x), return> l:  109  - Fails:  408 Quality:  410
	FuzzedInvariant ( (Double_Variable_0 != -1.0) or (Double_Variable_1 <= 0.0) ) holds for: <orig(x), return> l:  106  - Fails:  408 Quality:  410
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 * -1.0 ) holds for: <orig(x), return> l:  94  - Fails:  408 Quality:  410
	FuzzedInvariant ( (Double_Variable_0 = -1.0) implies (Double_Variable_1 < 1.0) ) holds for: <orig(x), return> l:  109  - Fails:  408 Quality:  410
Picked:
	FuzzedInvariant ( Double_Variable_0 != Double_Variable_1 / -1.0 ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 >= 1.0) or (Double_Variable_1 <= 0.0) ) holds for: <orig(x), return> l:  105  - Fails:  2452 Quality:  2454
Picked:
	FuzzedInvariant ( (Double_Variable_0 >= 1.0) or (Double_Variable_1 <= 0.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m34.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < 1.0) ) holds for: <orig(x), return> l:  122  - Fails:  2162 Quality:  2164
Picked:
	FuzzedInvariant ( (Double_Variable_0 < Double_Variable_1) implies (Double_Variable_1 < 1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m32.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 != -1.0) or (Double_Variable_1 < 0.0) ) holds for: <orig(x), return> l:  105  - Fails:  1020 Quality:  1022
Picked:
	FuzzedInvariant ( (Double_Variable_0 != -1.0) or (Double_Variable_1 < 0.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m34.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return> l:  119  - Fails:  2982 Quality:  2984
Picked:
	FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 <= 1.0) implies (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return> l:  110  - Fails:  2044 Quality:  2046
Picked:
	FuzzedInvariant ( (Double_Variable_0 <= 1.0) implies (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m33.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 >= -1.0) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return> l:  106  - Fails:  816 Quality:  818
	FuzzedInvariant ( (Double_Variable_0 < 0.0) implies (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return> l:  109  - Fails:  816 Quality:  818
Picked:
	FuzzedInvariant ( (Double_Variable_0 >= -1.0) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m36.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m39.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 != 0.0) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return> l:  105  - Fails:  1228 Quality:  1230
Picked:
	FuzzedInvariant ( (Double_Variable_0 != 0.0) or (Double_Variable_1 <= 1.0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
Mutants:
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m40.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m41.dtrace.gz
	experiments/FastMathNew_floor/setup-files/mutants/FastMathNewTesterDriver-m42.dtrace.gz
Specs:
	FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 != 0.0) ) holds for: <orig(x), return> l:  119  - Fails:  3060 Quality:  3062
Picked:
	FuzzedInvariant ( (Double_Variable_0 >= Double_Variable_1) or (Double_Variable_1 != 0.0) ) holds for: <orig(x), return>

Buckets: 35
Specs: 35
Saved in file: experiments/FastMathNew_floor/output/FastMathNew-floor-specfuzzer-1-buckets.assertions

