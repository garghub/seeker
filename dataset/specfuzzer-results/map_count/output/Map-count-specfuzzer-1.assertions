===========================================================================
examples.Map:::OBJECT
this.keys != null
this.data != null
===========================================================================
examples.Map.count():::ENTER
daikon.Quant.size(this.keys) == 0 || daikon.Quant.size(this.keys) == 1 || daikon.Quant.size(this.keys) == 2
daikon.Quant.size(this.data) == 0 || daikon.Quant.size(this.data) == 1 || daikon.Quant.size(this.data) == 2
===========================================================================
examples.Map.count():::EXIT
this.keys == \old(this.keys)
daikon.Quant.pairwiseEqual(this.keys, \old(this.keys))
this.data == \old(this.data)
daikon.Quant.pairwiseEqual(this.data, \old(this.data))
\result == 0 || \result == 1 || \result == 2
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
daikon.Quant.size(this.keys) == 0 || daikon.Quant.size(this.keys) == 1 || daikon.Quant.size(this.keys) == 2
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
daikon.Quant.size(this.data) == 0 || daikon.Quant.size(this.data) == 1 || daikon.Quant.size(this.data) == 2
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 = #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 = #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(Map.keys) ) holds for: <orig(this), return>
