> SpecFuzzer
# Inference step (Daikon + Fuzzed Specs)
Daikon version 5.8.2, released May 4, 2020; http://plse.cs.washington.edu/daikon.

Loading invariants from file: invs_file.xml
Loaded: 0

Fuzzing specs:
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) implies (Integer_Variable_1 < 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 < #(Map.keys))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > -1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != #(Map.data))
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(Map.keys)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 = #(Map.keys)) iff (Integer_Variable_1 <= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != 0
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 0)
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 < -1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 = -1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 != -1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(Map.data)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.data)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) or (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: some n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) implies (Integer_Variable_1 = #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(Map.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = #(Map.data))
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) or (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % #(Map.keys)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(Map.data)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) implies (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(Map.data)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= -1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= #(Map.keys)) or (Integer_Variable_1 >= 0)
Fuzzed spec: some n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 > -1) iff (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: some n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(Map.data))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < -1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % -1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) iff (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 < 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(Map.data)
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: all n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: (Integer_Variable_0 != #(Map.keys)) implies (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % #(Map.data)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(Map.data)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(Map.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(Map.keys)
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(Map.keys)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != #(Map.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = -1)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(Map.keys)
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) implies (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(Map.data)
Fuzzed spec: (Integer_Variable_0 < -1) or (Integer_Variable_1 >= 0)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != -1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = 1)
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) iff (Integer_Variable_1 = 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 < 1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.keys)
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(Map.keys)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(Map.keys)
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Discarded due to arity: 4 - (Integer_Variable_0 = #(Map.keys)) iff (Integer_Variable_1 >= Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) iff (Integer_Variable_1 < #(Map.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 != 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != 0)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != #(Map.keys)) or (Integer_Variable_1 > #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(Map.data)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < -1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = 0)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > -1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = #(Map.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) or (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(Map.data)
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(Map.data)
Fuzzed spec: some n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) or (Integer_Variable_1 <= #(Map.keys))
Discarded due to arity: 4 - (Integer_Variable_0 = #(Map.keys)) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % #(Map.keys)
Fuzzed spec: (Integer_Variable_0 > -1) implies (Integer_Variable_1 > #(Map.data))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(Map.keys)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < 1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != #(Map.data))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * -1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(Map.keys)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != -1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.data))
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < 0)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= 0)
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) implies (Integer_Variable_1 >= -1)
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 != -1) implies (Integer_Variable_1 > 0)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 >= 0)
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != #(Map.data))
Fuzzed spec: (Integer_Variable_0 > -1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) or (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / -1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(Map.data))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != 1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + #(Map.data)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) implies (Integer_Variable_1 < -1)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 < -1)
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) xor (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(Map.keys)
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 != #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Fuzzed spec: all n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.data)) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(Map.data)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != -1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 < 0)
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) or (Integer_Variable_1 = -1)
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 <= 1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(Map.keys)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 != 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 > #(Map.data))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.data))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= -1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Integer_Variable_0 = #(Map.keys)) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) iff (Integer_Variable_1 < #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) xor (Integer_Variable_1 >= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 < #(Map.data))
Fuzzed spec: (Integer_Variable_0 != -1) iff (Integer_Variable_1 > #(Map.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + #(Map.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(Map.data)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 = 0)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.keys)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(Map.data)
Fuzzed spec: some n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) implies (Integer_Variable_1 = -1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= -1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(Map.data)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 0)
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 = #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 0)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != -1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.data)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 0)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(Map.data))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 > -1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) xor (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(Map.data)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= -1)
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= #(Map.keys)) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 > 0)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 < -1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < -1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != -1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > 0)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - #(Map.keys)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 = 1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(Map.keys)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + -1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= -1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= 1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 = 1)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 = 0)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= -1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= 0)
Fuzzed spec: some n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= 0
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(Map.data)
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= -1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 != -1
Discarded due to arity: 4 - (Integer_Variable_0 < #(Map.data)) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 = -1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) implies (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 < #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 = #(Map.keys)) xor (Integer_Variable_1 = Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 >= #(Map.keys)) xor (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) or (Integer_Variable_1 != -1)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 != #(Map.keys)) or (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(Map.keys)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = -1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 > 0)
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= -1)
Fuzzed spec: no n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) or (Integer_Variable_1 >= 1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 0)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 = Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(Map.keys)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != 1)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < #(Map.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 = 1
Discarded due to arity: 4 - (Integer_Variable_0 = #(Map.data)) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= -1) xor (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 > 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 != #(Map.keys))
Discarded due to arity: 4 - (Integer_Variable_0 < #(Map.data)) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + -1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.data : n = null
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.keys)) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.data)) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= 0)
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.data)) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 <= -1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * #(Map.keys)
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = -1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) iff (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 > 0)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= 1)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 > -1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 = 1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.data))
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.keys)) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 > -1)
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Integer_Variable_0 >= #(Map.data)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < 0)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 <= 1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) or (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = 1)
Fuzzed spec: (Integer_Variable_0 <= -1) or (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 != #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.data))
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) or (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 >= -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < 0)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * -1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(Map.data))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= 1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 = #(Map.keys))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 = #(Map.data))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / -1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= -1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 > 0)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) iff (Integer_Variable_1 > 0)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 < 1)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 != -1)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) implies (Integer_Variable_1 != #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / #(Map.keys)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= #(Map.data)) iff (Integer_Variable_1 != #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = 0)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = 1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) or (Integer_Variable_1 > -1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 < #(Map.data))
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 < 0)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < 1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != #(Map.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = 0)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 <= -1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) xor (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= -1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) xor (Integer_Variable_1 = #(Map.data))
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 >= 1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(Map.data))
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < #(Map.keys)) implies (Integer_Variable_1 < #(Map.data))
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - -1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 = 1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < #(Map.keys))
Discarded due to arity: 4 - (Integer_Variable_0 > #(Map.keys)) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 > #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) iff (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = 1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 = #(Map.keys)) iff (Integer_Variable_1 >= #(Map.data))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < #(Map.keys)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.data)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 >= 0)
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 = #(Map.data)) implies (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: (Integer_Variable_0 != #(Map.keys)) or (Integer_Variable_1 != 1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 >= #(Map.keys)) xor (Integer_Variable_1 != 0)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % #(Map.data)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= #(Map.keys))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 < -1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 > -1)
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 = 0)
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 = #(Map.data))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(Map.keys)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 != 0)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 < -1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) xor (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > 0)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(Map.data)
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != 0)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 >= -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) iff (Integer_Variable_1 >= 0)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * #(Map.keys)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 >= #(Map.data))
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.data)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = #(Map.keys))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.data))
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 < #(Map.data))
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) implies (Integer_Variable_1 > #(Map.data))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 != #(Map.data)) implies (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / #(Map.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * -1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) implies (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.data))
Fuzzed spec: (Integer_Variable_0 = -1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 <= -1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(Map.data))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < #(Map.data))
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 <= -1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 <= -1
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 != -1)
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: some n : Map.data : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != 1)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 < #(Map.keys))
Fuzzed spec: Integer_Variable_0 < #(Map.data)
Fuzzed spec: Integer_Variable_0 != -1
Fuzzed spec: Integer_Variable_0 >= #(Map.data)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / #(Map.data)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 >= 0)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 != -1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 >= -1) implies (Integer_Variable_1 = Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * #(Map.keys)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(Map.keys)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 >= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + #(Map.data)
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 > -1)
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) iff (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 != #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % #(Map.keys)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / #(Map.keys)
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 <= -1)
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 >= -1)
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 <= 0)
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) implies (Integer_Variable_0 <= #(Map.keys))
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - #(Map.data)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 < #(Map.data))
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= #(Map.keys))
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > 0)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 < -1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= -1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 >= #(Map.keys)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 = -1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Integer_Variable_0 < #(Map.keys)) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 = #(Map.data))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < #(Map.data))
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) iff (Integer_Variable_0 != #(Map.data))
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 != #(Map.data)
Fuzzed spec: (Integer_Variable_0 = -1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) implies (Integer_Variable_0 = -1)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 > 0)
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 = 0)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - #(Map.keys)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: no n : Map.keys : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 != Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= #(Map.keys)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 > -1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > -1) or (Integer_Variable_1 > -1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 = #(Map.data))
Fuzzed spec: (Integer_Variable_0 <= #(Map.data)) or (Integer_Variable_1 <= #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 = -1
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= #(Map.data)
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = #(Map.keys)
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 >= 1)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < -1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 > 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + #(Map.keys)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 = 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(Map.keys)) xor (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 = -1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 = -1)
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: all n : Map.data : n = null
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - #(Map.keys)
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 < 1)
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) xor (Integer_Variable_1 < 0)
Discarded due to arity: 4 - (Integer_Variable_0 <= #(Map.keys)) or (Integer_Variable_1 > Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 xor Boolean_Variable_1) xor (Integer_Variable_0 >= -1)
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 > Integer_Variable_1)
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0 implies Boolean_Variable_1) xor (Integer_Variable_0 != 0)
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) implies (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 > #(Map.data)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) implies (Integer_Variable_1 != #(Map.keys))
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * #(Map.keys)
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) or (Integer_Variable_1 <= 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 < -1) xor (Integer_Variable_1 >= -1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) implies (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 != #(Map.keys)
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < 1)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) implies (Integer_Variable_0 < 1)
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: all n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n = null
Discarded due to arity: 4 - (Boolean_Variable_0 or Boolean_Variable_1) xor (Integer_Variable_0 >= #(Map.keys))
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) or (Integer_Variable_0 <= #(Map.data))
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % -1
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) or (Integer_Variable_0 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > #(Map.data)) implies (Integer_Variable_1 >= #(Map.keys))
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 <= Integer_Variable_1)
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 = Integer_Variable_1)
Fuzzed spec: no n : Map.keys : n != null
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 <= #(Map.data))
Fuzzed spec: Boolean_Variable_0 iff Boolean_Variable_1
Fuzzed spec: some n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Boolean_Variable_0) or (Integer_Variable_0 > #(Map.keys))
Fuzzed spec: all n : Map.keys : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > 1)
Fuzzed spec: all n : Map.data : n != null
Fuzzed spec: Integer_Variable_0 > #(Map.keys)
Discarded due to arity: 4 - (Boolean_Variable_0 implies Boolean_Variable_1) iff (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 = #(Map.data)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 > #(Map.keys))
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Boolean_Variable_0 implies Boolean_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 = 1)
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 < #(Map.keys))
Fuzzed spec: some n : Map.keys : n != null
Discarded due to arity: 4 - (Boolean_Variable_0 xor Boolean_Variable_1) or (Integer_Variable_0 >= #(Map.data))
Fuzzed spec: some n : Map.keys : n != null
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + -1
Fuzzed spec: (Boolean_Variable_0) xor (Integer_Variable_0 < Integer_Variable_1)
Fuzzed spec: (Integer_Variable_0 < #(Map.data)) iff (Integer_Variable_1 <= 1)
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = #(Map.data))
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % #(Map.data)
Fuzzed spec: Boolean_Variable_0 or Boolean_Variable_1
Fuzzed spec: (Boolean_Variable_0) iff (Integer_Variable_0 >= Integer_Variable_1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: some n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n != null
Fuzzed spec: some n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 or Boolean_Variable_1) iff (Integer_Variable_0 = 0)
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != #(Map.data))
Fuzzed spec: Boolean_Variable_0 xor Boolean_Variable_1
Fuzzed spec: no n : Map.keys : n = null
Fuzzed spec: no n : Map.data : n = null
Fuzzed spec: (Boolean_Variable_0 iff Boolean_Variable_1) iff (Integer_Variable_0 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / -1
Fuzzed spec: no n : Map.keys : n != null
Unique fuzzed invariants: 565 (2000)
Unary: 30 - Binary: 177 - Ternary: 358 - Discarded: 158
Reading declaration files Processing trace data; reading 1 dtrace file:
Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/MapTesterDriver-objects.xml
Total loaded objects: 2657

No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
examples.Map:::OBJECT
this.keys != null
this.data != null
===========================================================================
examples.Map.Map():::EXIT
this.keys[] == []
this.keys[].getClass().getName() == []
this.data[] == []
this.data[].getClass().getName() == []
===========================================================================
examples.Map.count():::ENTER
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.count():::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
return one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
size(this.keys[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 = #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 = #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 >= #(Map.keys) ) holds for: <orig(this), return>
===========================================================================
examples.Map.extend(java.lang.Object, java.lang.Object):::ENTER
k.getClass().getName() == v.getClass().getName()
k.getClass().getName() == java.lang.String.class
v.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.extend(java.lang.Object, java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.data == orig(this.data)
return one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( some n : Map.keys : n != null ) holds for: orig(this)
size(this.keys[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 1, 2, 3 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: orig(size(this.keys[]))-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.keys[]))-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: orig(size(this.data[]))-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))-1
orig(k.getClass().getName()) in this.keys[].getClass().getName()
orig(v.getClass().getName()) in this.keys[].getClass().getName()
orig(v.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( Integer_Variable_0 != #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 != #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
size(this.keys[]) >= orig(size(this.keys[]))
size(this.keys[])-1 <= orig(size(this.keys[]))
size(this.keys[])-1 >= orig(size(this.keys[]))-1
size(this.data[]) >= orig(size(this.data[]))
size(this.data[])-1 <= orig(size(this.data[]))
size(this.data[])-1 >= orig(size(this.data[]))-1
===========================================================================
examples.Map.hasKey(java.lang.Object):::ENTER
k.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.hasKey(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (size(this.data[]) one of { 0, 1, 2 })
(return == false)  ==>  (size(this.keys[]) one of { 0, 1, 2 })
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( all n : Map.data : n != null ) holds for: orig(this))
(return == true)  ==>  (FuzzedInvariant ( no n : Map.data : n = null ) holds for: orig(this))
(return == true)  ==>  (orig(k) != null)
(return == true)  ==>  (orig(k.getClass().getName()) in this.data[].getClass().getName())
(return == true)  ==>  (orig(k.getClass().getName()) in this.keys[].getClass().getName())
(return == true)  ==>  (size(this.data[]) one of { 1, 2 })
(return == true)  ==>  (size(this.keys[]) one of { 1, 2 })
(return == true)  ==>  (this.data[] elements != null)
(return == true)  ==>  (this.data[].getClass().getName() elements == java.lang.String.class)
(return == true)  ==>  (this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] })
size(this.keys[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasKey(java.lang.Object):::EXIT;condition="return == true"
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return == true
FuzzedInvariant ( all n : Map.data : n != null ) holds for: orig(this)
FuzzedInvariant ( no n : Map.data : n = null ) holds for: orig(this)
orig(k) != null
size(this.keys[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
orig(k.getClass().getName()) in this.keys[].getClass().getName()
orig(k.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasKey(java.lang.Object):::EXIT;condition="not(return == true)"
return == false
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasValue(java.lang.Object):::ENTER
FuzzedInvariant ( all n : Map.data : n != null ) holds for: this
FuzzedInvariant ( all n : Map.keys : n != null ) holds for: this
FuzzedInvariant ( no n : Map.data : n = null ) holds for: this
FuzzedInvariant ( no n : Map.keys : n = null ) holds for: this
this.keys[] elements != null
this.keys[].getClass().getName() elements == java.lang.String.class
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
v.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.hasValue(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>)
(return == false)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>)
(return == false)  ==>  (size(this.data[]) one of { 0, 1, 2 })
(return == false)  ==>  (size(this.keys[]) one of { 0, 1, 2 })
(return == false)  ==>  (this.data[] elements are equal)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>)
(return == true)  ==>  (FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1)
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[]))
(return == true)  ==>  (FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[]))
(return == true)  ==>  (orig(v) != null)
(return == true)  ==>  (orig(v.getClass().getName()) in this.data[].getClass().getName())
(return == true)  ==>  (orig(v.getClass().getName()) in this.keys[].getClass().getName())
(return == true)  ==>  (size(this.data[]) one of { 1, 2 })
(return == true)  ==>  (size(this.keys[]) one of { 1, 2 })
(return == true)  ==>  (this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] })
(return == true)  ==>  (this.keys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] })
this.keys[] elements != null
this.keys[].getClass().getName() elements == java.lang.String.class
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasValue(java.lang.Object):::EXIT;condition="return == true"
this.keys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return == true
orig(v) != null
size(this.keys[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
orig(v.getClass().getName()) in this.keys[].getClass().getName()
orig(v.getClass().getName()) in this.data[].getClass().getName()
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 != -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 >= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 = 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 > 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) or (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.hasValue(java.lang.Object):::EXIT;condition="not(return == true)"
this.data[] elements are equal
return == false
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.keys[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) iff (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 != 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 < -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= -1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 <= 0) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 > 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) implies (Integer_Variable_0 >= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 <= 1) ) holds for: <return, size(this.data[])-1>
FuzzedInvariant ( (Boolean_Variable_0) xor (Integer_Variable_0 >= -1) ) holds for: <return, size(this.data[])-1>
===========================================================================
examples.Map.indexOfKey(java.lang.Object):::ENTER
k.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 0, 1, 2 }
size(this.data[]) one of { 0, 1, 2 }
===========================================================================
examples.Map.indexOfKey(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
return one of { -1, 0, 1 }
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
size(this.keys[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 0, 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 != #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 < #(Map.keys) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
===========================================================================
examples.Map.item(java.lang.Object):::ENTER
this.keys[] elements != null
this.keys[].getClass().getName() elements == java.lang.String.class
this.keys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
k != null
k.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 1, 2 }
size(this.data[]) one of { 1, 2 }
k.getClass().getName() in this.keys[].getClass().getName()
k.getClass().getName() in this.data[].getClass().getName()
===========================================================================
examples.Map.item(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.keys[] == orig(this.keys[])
this.data == orig(this.data)
this.data[] == orig(this.data[])
return.getClass().getName() == orig(k.getClass().getName())
this.keys[] elements != null
this.keys[].getClass().getName() elements == java.lang.String.class
this.keys[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
return != null
return.getClass().getName() == java.lang.String.class
FuzzedInvariant ( all n : Map.data : n != null ) holds for: orig(this)
FuzzedInvariant ( all n : Map.keys : n != null ) holds for: orig(this)
FuzzedInvariant ( no n : Map.data : n = null ) holds for: orig(this)
FuzzedInvariant ( no n : Map.keys : n = null ) holds for: orig(this)
FuzzedInvariant ( some n : Map.data : n != null ) holds for: orig(this)
FuzzedInvariant ( some n : Map.keys : n != null ) holds for: orig(this)
size(this.keys[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])-1
size(this.data[]) one of { 1, 2 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])-1
return.getClass().getName() in this.keys[].getClass().getName()
return.getClass().getName() in this.data[].getClass().getName()
===========================================================================
examples.Map.remove(java.lang.Object):::ENTER
FuzzedInvariant ( all n : Map.data : n != null ) holds for: this
FuzzedInvariant ( no n : Map.data : n = null ) holds for: this
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [java.lang.String], [java.lang.String, java.lang.String] }
k != null
k.getClass().getName() == java.lang.String.class
size(this.keys[]) one of { 1, 2 }
size(this.data[]) one of { 1, 2 }
k.getClass().getName() in this.keys[].getClass().getName()
k.getClass().getName() in this.data[].getClass().getName()
===========================================================================
examples.Map.remove(java.lang.Object):::EXIT
this.keys == orig(this.keys)
this.data == orig(this.data)
size(this.keys[]) == orig(size(this.keys[]))-1
size(this.data[]) == orig(size(this.data[]))-1
this.data[] elements has only one value
this.data[] elements != null
this.data[].getClass().getName() elements == java.lang.String.class
this.data[].getClass().getName() one of { [], [java.lang.String] }
return one of { 0, 1 }
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.keys[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 < 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 <= 0 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.keys[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: size(this.data[])
FuzzedInvariant ( Integer_Variable_0 != 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 < 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= 0 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: size(this.data[])-1
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: orig(size(this.keys[]))
FuzzedInvariant ( Integer_Variable_0 != -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 != 0 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 > -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 > 0 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= -1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 >= 1 ) holds for: orig(size(this.data[]))
FuzzedInvariant ( Integer_Variable_0 <= #(Map.data) ) holds for: <orig(this), return>
FuzzedInvariant ( Integer_Variable_0 <= #(Map.keys) ) holds for: <orig(this), return>
Exiting Daikon.

# Filtering step

- Mutation is: 1:STD:<ASSIGN>:<NO-OP>:examples.Map@<init>():29:keys = new LinkedList<K>() |==> <NO-OP>
Checking invs on mutant: experiments/map_count/setup-files/mutants/MapTesterDriver-m1.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:19:19 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/mutants/MapTesterDriver-m1-objects.xml
Total loaded objects: 805
[9:19:20 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:21 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver
No return from procedure observed 329 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 4 invocations
  examples.Map.count() : 212 invocations
  examples.Map.remove(java.lang.Object) : 1 invocation
  examples.Map.hasKey(java.lang.Object) : 16 invocations
  examples.Map.extend(java.lang.Object, java.lang.Object) : 48 invocations
  examples.Map.indexOfKey(java.lang.Object) : 48 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 1,023 errors found in 61,224 samples (1.67%)
MapTesterDriver.inv.gz: 5 false positives, out of 326, which is 1.53%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 0
Saving mutants results file

- Mutation is: 10:EVR:<IDENTIFIER(int)>:<DEFAULT>:examples.Map@count():57:result |==> 0
Checking invs on mutant: experiments/map_count/setup-files/mutants/MapTesterDriver-m10.dtrace.gz
Loaded invs from previous step: 0
                                                                               [9:19:21 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/mutants/MapTesterDriver-m10-objects.xml
Total loaded objects: 2608
[9:19:22 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:23 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:24 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:25 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:26 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:27 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:28 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:29 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:30 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:31 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver
No return from procedure observed 129 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 47 invocations
  examples.Map.remove(java.lang.Object) : 82 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 1,140 errors found in 515,919 samples (0.22%)
MapTesterDriver.inv.gz: 4 false positives, out of 1764, which is 0.23%.
Preserving 4 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 0
Saving - Total: 4
Saving mutants results file

- Mutation is: 2:STD:<ASSIGN>:<NO-OP>:examples.Map@<init>():30:data = new LinkedList<V>() |==> <NO-OP>
Checking invs on mutant: experiments/map_count/setup-files/mutants/MapTesterDriver-m2.dtrace.gz
Loaded invs from previous step: 4
                                                                               [9:19:32 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/mutants/MapTesterDriver-m2-objects.xml
Total loaded objects: 1306
[9:19:33 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver
No return from procedure observed 278 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 7 invocations
  examples.Map.hasValue(java.lang.Object) : 123 invocations
  examples.Map.remove(java.lang.Object) : 7 invocations
  examples.Map.extend(java.lang.Object, java.lang.Object) : 141 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 2,085 errors found in 82,905 samples (2.51%)
MapTesterDriver.inv.gz: 11 false positives, out of 509, which is 2.16%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 4
Saving - Total: 4
Saving mutants results file

- Mutation is: 51:ROR:>(int,int):!=(int,int):examples.Map@remove(K):121:count() > 0 |==> count() != 0
Checking invs on mutant: experiments/map_count/setup-files/mutants/MapTesterDriver-m51.dtrace.gz
Loaded invs from previous step: 4
                                                                               [9:19:34 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/mutants/MapTesterDriver-m51-objects.xml
Total loaded objects: 2657
[9:19:35 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:36 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:37 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:38 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:40 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:41 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:42 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:43 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver
No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 550,963 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 2047, which is 0.10%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 4
Saving - Total: 4
Saving mutants results file

- Mutation is: 52:ROR:>(int,int):>=(int,int):examples.Map@remove(K):121:count() > 0 |==> count() >= 0
Checking invs on mutant: experiments/map_count/setup-files/mutants/MapTesterDriver-m52.dtrace.gz
Loaded invs from previous step: 4
                                                                               [9:19:45 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/mutants/MapTesterDriver-m52-objects.xml
Total loaded objects: 2657
[9:19:46 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:47 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:48 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:49 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:50 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:51 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:52 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:53 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:54 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:55 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver
No return from procedure observed 102 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 55 invocations
  examples.Map.remove(java.lang.Object) : 47 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 44 errors found in 550,963 samples (0.01%)
MapTesterDriver.inv.gz: 2 false positives, out of 2047, which is 0.10%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 4
Saving - Total: 4
Saving mutants results file

- Mutation is: 53:ROR:>(int,int):FALSE(int,int):examples.Map@remove(K):121:count() > 0 |==> false
Checking invs on mutant: experiments/map_count/setup-files/mutants/MapTesterDriver-m53.dtrace.gz
Loaded invs from previous step: 4
                                                                               [9:19:56 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/mutants/MapTesterDriver-m53-objects.xml
Total loaded objects: 2578
[9:19:58 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:19:59 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:00 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:01 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:02 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:03 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:04 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:05 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:06 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:07 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver
No return from procedure observed 129 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 47 invocations
  examples.Map.remove(java.lang.Object) : 82 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 0 errors found in 503,865 samples (0.00%)
MapTesterDriver.inv.gz: 0 false positives, out of 1764, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 4
Saving - Total: 4
Saving mutants results file

- Mutation is: 8:EVR:<METHOD_INVOCATION(int)>:<DEFAULT>:examples.Map@count():55:keys.size() |==> 0
Checking invs on mutant: experiments/map_count/setup-files/mutants/MapTesterDriver-m8.dtrace.gz
Loaded invs from previous step: 4
                                                                               [9:20:08 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/mutants/MapTesterDriver-m8-objects.xml
Total loaded objects: 2608
[9:20:09 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:10 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:11 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:12 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:13 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:14 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:15 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:16 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver[9:20:17 PM]: Reading experiments/map_count/setup-files/mutants/MapTesterDriver
No return from procedure observed 129 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.Map.item(java.lang.Object) : 47 invocations
  examples.Map.remove(java.lang.Object) : 82 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

MapTesterDriver.inv.gz: 1,140 errors found in 515,919 samples (0.22%)
MapTesterDriver.inv.gz: 4 false positives, out of 1764, which is 0.23%.
Preserving 4 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 4
Saving - Total: 4
Saving mutants results file

- Mutation is: 9:LVR:TRUE:FALSE:examples.Map@count():56:true |==> false
Checking invs on mutant: experiments/map_count/setup-files/mutants/MapTesterDriver-m9.dtrace.gz
Loaded invs from previous step: 4
                                                                               [9:20:18 PM]:                                                                  Loaded objects from file: /specfuzzer/experiments/map_count/setup-files/mutants/MapTesterDriver-m9-objects.xml
Total loaded objects: 1049
Saving mutants results file

# Filtering step took minutes: 1
# Mutation killing ability results saved in: experiments/map_count/output/Map-count-specfuzzer-1-invs-by-mutants.csv

# Writing assertions to file: experiments/map_count/output/Map-count-specfuzzer-1.assertions

# Filtering specs with buckets
> Mutant filter from file: experiments/map_count/output/Map-count-specfuzzer-1-invs-by-mutants.csv
Unique mutants: 7
Loading assertions from: experiments/map_count/output/Map-count-specfuzzer-1.assertions
Specs killing mutants: 6

> Minimizing by exploring the bit vector of each spec
Building bit vectors of size: 7
Building buckets
=====================================
Buckets: 3
Vector: [1. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/map_count/setup-files/mutants/MapTesterDriver-m1.dtrace.gz
Specs:
	this.keys != null l:  17  - Fails:  1023 Quality:  1023
Picked:
	this.keys != null

Vector: [0. 1. 0. 0. 0. 1. 1.]
Mutants:
	experiments/map_count/setup-files/mutants/MapTesterDriver-m10.dtrace.gz
	experiments/map_count/setup-files/mutants/MapTesterDriver-m8.dtrace.gz
	experiments/map_count/setup-files/mutants/MapTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= #(Map.keys) ) holds for: <orig(this), return> l:  85  - Fails:  855 Quality:  856
	FuzzedInvariant ( Integer_Variable_0 = #(Map.keys) ) holds for: <orig(this), return> l:  84  - Fails:  855 Quality:  856
	FuzzedInvariant ( Integer_Variable_0 >= #(Map.data) ) holds for: <orig(this), return> l:  85  - Fails:  855 Quality:  856
	FuzzedInvariant ( Integer_Variable_0 = #(Map.data) ) holds for: <orig(this), return> l:  84  - Fails:  855 Quality:  856
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= #(Map.keys) ) holds for: <orig(this), return>

Vector: [0. 0. 1. 0. 0. 0. 0.]
Mutants:
	experiments/map_count/setup-files/mutants/MapTesterDriver-m2.dtrace.gz
Specs:
	this.data != null l:  17  - Fails:  2085 Quality:  2085
Picked:
	this.data != null

Buckets: 3
Specs: 3
Saved in file: experiments/map_count/output/Map-count-specfuzzer-1-buckets.assertions

