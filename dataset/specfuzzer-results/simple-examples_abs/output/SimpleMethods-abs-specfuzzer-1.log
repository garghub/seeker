> SpecFuzzer
# Inference step (Daikon + Fuzzed Specs)
Daikon version 5.8.2, released May 4, 2020; http://plse.cs.washington.edu/daikon.

Loading invariants from file: invs_file.xml
Loaded: 0

Fuzzing specs:
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 0) or (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 = 1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 < 1) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 = 0) or (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 = 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 >= 1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 0
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: (Integer_Variable_0 > 1) iff (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 != 1)
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 = 1) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 < 0) xor (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 = 0) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 <= 1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 0)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 1) implies (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 > 0) implies (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 = 0)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: (Integer_Variable_0 > 0) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 != 1) iff (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 >= 1) xor (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 < 0) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: (Integer_Variable_0 <= 0) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 != 1) or (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > 0)
Fuzzed spec: (Integer_Variable_0 != 1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: (Integer_Variable_0 >= 1) implies (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % 0
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 > 0) xor (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) or (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 != 0) iff (Integer_Variable_1 != 0)
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 >= 0) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 0) or (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 <= 0) iff (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 1) iff (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 0
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 <= 1)
Fuzzed spec: (Integer_Variable_0 <= 1) implies (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 < 1) or (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 > 1) implies (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < 0
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 = 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 <= 0)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) xor (Integer_Variable_1 < 1)
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 0) xor (Integer_Variable_1 != 0)
Fuzzed spec: Integer_Variable_0 != 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= 0) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 < 0)
Fuzzed spec: (Integer_Variable_0 <= 1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 = 0)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * 0
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: (Integer_Variable_0 > 1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) or (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: (Integer_Variable_0 >= 0) implies (Integer_Variable_1 > 0)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 = 0
Fuzzed spec: Integer_Variable_0 >= 1
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 < 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: (Integer_Variable_0 <= 0) or (Integer_Variable_1 <= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) iff (Integer_Variable_1 >= 1)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 < 0)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) iff (Integer_Variable_1 > Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 >= 0) iff (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: (Integer_Variable_0 < 0) implies (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > 1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 != Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 <= 1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 + 1
Fuzzed spec: Integer_Variable_0 > 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) iff (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: (Integer_Variable_0 = 0) implies (Integer_Variable_1 >= 1)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 - Integer_Variable_2
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 <= 1) xor (Integer_Variable_1 > 1)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 + Integer_Variable_2
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 < 1) implies (Integer_Variable_1 = Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 < 1
Fuzzed spec: Integer_Variable_0 = 1
Fuzzed spec: (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 <= 1)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 != Integer_Variable_1) xor (Integer_Variable_1 <= 0)
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 / 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1 - 0
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1 - 1
Fuzzed spec: (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % Integer_Variable_2
Fuzzed spec: Integer_Variable_0 < Integer_Variable_1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 <= 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 * 0
Fuzzed spec: Integer_Variable_0 >= 0
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 / Integer_Variable_2
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 < Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 > Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 * Integer_Variable_2
Fuzzed spec: Integer_Variable_0 <= Integer_Variable_1
Fuzzed spec: (Integer_Variable_0 = 1) xor (Integer_Variable_1 >= 0)
Fuzzed spec: (Integer_Variable_0 != 0) xor (Integer_Variable_1 > 1)
Fuzzed spec: (Integer_Variable_0 >= Integer_Variable_1) implies (Integer_Variable_1 >= Integer_Variable_2)
Fuzzed spec: Integer_Variable_0 = Integer_Variable_1 % 1
Fuzzed spec: Integer_Variable_0 != 1
Fuzzed spec: Integer_Variable_0 >= Integer_Variable_1
Fuzzed spec: Integer_Variable_0 != Integer_Variable_1 / Integer_Variable_2
Unique fuzzed invariants: 517 (2000)
Unary: 12 - Binary: 295 - Ternary: 210 - Discarded: 0
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
examples.SimpleMethods:::OBJECT
===========================================================================
examples.SimpleMethods.SimpleMethods():::EXIT
===========================================================================
examples.SimpleMethods.abs(int):::ENTER
===========================================================================
examples.SimpleMethods.abs(int):::EXIT
FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return
return >= 0
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 != 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 != 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 = 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= 0) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = 0) implies (Integer_Variable_1 <= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 <= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 > 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = 1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(x), return>
FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <orig(x), return>
return >= orig(x)
Exiting Daikon.

# Filtering step

- Mutation is: 1:LVR:POS:0:examples.SimpleMethods@abs(int):10:31 |==> 0
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
Loaded invs from previous step: 0
                                                                               [6:22:12 PM]:                                                                  [6:22:13 PM]: Checking size of experiments/simple-examples_abs/setup-files/muta[6:22:14 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:15 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:16 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:17 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:19 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:20 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:21 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:22 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:23 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:24 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:25 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:26 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:28 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:29 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:32 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:33 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:36 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:37 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:38 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:39 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 131,604 errors found in 573,132 samples (22.96%)
SimpleMethodsTesterDriver.inv.gz: 148 false positives, out of 366, which is 40.44%.
Preserving 72 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 0
Saving - Total: 72
Saving mutants results file

- Mutation is: 10:AOR:+(int,int):*(int,int):examples.SimpleMethods@abs(int):11:~i + 1 |==> ~i SimpleMethodsTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log hs_err_pid51463.log hs_err_pid53479.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers 1
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
Loaded invs from previous step: 72
                                                                               [6:22:46 PM]: Checking size of experiments/simple-examples_abs/setup-files/muta[6:22:47 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:48 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:49 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:50 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:51 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:52 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:53 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:54 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:55 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:57 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:22:59 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:00 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:01 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:02 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:03 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:04 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:05 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:06 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:07 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:08 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:09 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:10 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:11 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:12 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:13 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 126,042 errors found in 573,132 samples (21.99%)
SimpleMethodsTesterDriver.inv.gz: 136 false positives, out of 366, which is 37.16%.
Preserving 66 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 72
Saving - Total: 76
Saving mutants results file

- Mutation is: 11:AOR:+(int,int):-(int,int):examples.SimpleMethods@abs(int):11:~i + 1 |==> ~i - 1
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
Loaded invs from previous step: 76
                                                                               [6:23:16 PM]:                                                                  [6:23:17 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:19 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:20 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:21 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:22 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:23 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:24 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:25 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:26 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:27 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:28 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:29 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:30 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:31 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:32 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:33 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:34 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:35 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:36 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:37 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:38 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:39 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:40 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:41 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:42 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 126,042 errors found in 573,132 samples (21.99%)
SimpleMethodsTesterDriver.inv.gz: 134 false positives, out of 366, which is 36.61%.
Preserving 65 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 76
Saving - Total: 76
Saving mutants results file

- Mutation is: 12:AOR:+(int,int):/(int,int):examples.SimpleMethods@abs(int):11:~i + 1 |==> ~i / 1
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
Loaded invs from previous step: 76
                                                                               [6:23:46 PM]:                                                                  [6:23:47 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:48 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:49 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:50 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:51 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:52 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:53 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:54 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:55 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:57 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:23:59 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:00 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:01 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:02 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:03 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:04 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:05 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:06 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:07 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:08 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:09 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:10 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:11 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:12 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:13 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 126,042 errors found in 573,132 samples (21.99%)
SimpleMethodsTesterDriver.inv.gz: 136 false positives, out of 366, which is 37.16%.
Preserving 66 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 76
Saving - Total: 76
Saving mutants results file

- Mutation is: 13:LOR:^(int,int):&(int,int):examples.SimpleMethods@abs(int):11:x ^ (~i + 1) |==> x & (~i + 1)
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
Loaded invs from previous step: 76
                                                                               [6:24:17 PM]:                                                                  [6:24:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:19 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:21 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:28 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:31 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:33 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:35 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:37 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:38 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:39 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:40 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:41 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:42 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:43 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:44 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 107,684 errors found in 573,132 samples (18.79%)
SimpleMethodsTesterDriver.inv.gz: 162 false positives, out of 366, which is 44.26%.
Preserving 79 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 76
Saving - Total: 85
Saving mutants results file

- Mutation is: 14:LOR:^(int,int):|(int,int):examples.SimpleMethods@abs(int):11:x ^ (~i + 1) |==> x | (~i + 1)
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m14.dtrace.gz
Loaded invs from previous step: 85
                                                                               [6:24:48 PM]:                                                                  [6:24:49 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:50 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:51 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:52 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:53 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:54 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:55 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:57 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:24:59 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:00 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:01 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:02 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:03 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:04 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:05 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:06 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:07 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:08 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:09 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:10 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:11 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:12 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:13 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:14 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 12,002 errors found in 573,132 samples (2.09%)
SimpleMethodsTesterDriver.inv.gz: 26 false positives, out of 366, which is 7.10%.
Preserving 13 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 15:AOR:+(int,int):%(int,int):examples.SimpleMethods@abs(int):11:(x ^ (~i + 1)) + i |==> (x ^ (~i + 1)) % i
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m15.dtrace.gz
Loaded invs from previous step: 85
                                                                               [6:25:18 PM]:                                                                  
No return from procedure observed 278 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.SimpleMethods.abs(int) : 278 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

SimpleMethodsTesterDriver.inv.gz: 168 errors found in 3,108 samples (5.41%)
SimpleMethodsTesterDriver.inv.gz: 24 false positives, out of 366, which is 6.56%.
Preserving 12 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 16:AOR:+(int,int):*(int,int):examples.SimpleMethods@abs(int):11:(x ^ (~i + 1)) + i |==> (x ^ (~i + 1)) SimpleMethodsTesterDriver.inv.gz base-invs-by-mutants.csv base_invs_file.xml experiments hs_err_pid1983241.log hs_err_pid51463.log hs_err_pid53479.log invs-by-mutants.csv invs.csv invs_file.xml lib literals mutants scripts testers i
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
Loaded invs from previous step: 85
                                                                               [6:25:23 PM]:                                                                  [6:25:24 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:25 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:26 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:27 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:28 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:29 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:30 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:32 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:33 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:34 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:36 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:37 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:38 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:40 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:43 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 93,522 errors found in 573,132 samples (16.32%)
SimpleMethodsTesterDriver.inv.gz: 144 false positives, out of 366, which is 39.34%.
Preserving 71 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 85
Saving - Total: 85
Saving mutants results file

- Mutation is: 17:AOR:+(int,int):-(int,int):examples.SimpleMethods@abs(int):11:(x ^ (~i + 1)) + i |==> (x ^ (~i + 1)) - i
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
Loaded invs from previous step: 85
                                                                               [6:25:55 PM]:                                                                  [6:25:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:57 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:25:59 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:01 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:04 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:05 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:06 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:07 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:08 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:09 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:11 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:12 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:13 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:14 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:15 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:16 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:17 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:19 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:20 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:21 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 8,826 errors found in 573,132 samples (1.54%)
SimpleMethodsTesterDriver.inv.gz: 56 false positives, out of 366, which is 15.30%.
Preserving 27 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 85
Saving - Total: 89
Saving mutants results file

- Mutation is: 18:AOR:+(int,int):/(int,int):examples.SimpleMethods@abs(int):11:(x ^ (~i + 1)) + i |==> (x ^ (~i + 1)) / i
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m18.dtrace.gz
Loaded invs from previous step: 89
                                                                               [6:26:25 PM]:                                                                  
No return from procedure observed 278 times.  Unmatched entries are ignored!
Unterminated calls:
  examples.SimpleMethods.abs(int) : 278 invocations
End of report for procedures not returned from.  Unmatched entries are ignored!

SimpleMethodsTesterDriver.inv.gz: 0 errors found in 3,108 samples (0.00%)
SimpleMethodsTesterDriver.inv.gz: 0 false positives, out of 366, which is 0.00%.
Preserving 0 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 89
Saving - Total: 89
Saving mutants results file

- Mutation is: 19:LVR:TRUE:FALSE:examples.SimpleMethods@abs(int):13:true |==> false
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m19.dtrace.gz
Loaded invs from previous step: 89
                                                                               [6:26:31 PM]:                                                                  Saving mutants results file

- Mutation is: 2:LVR:POS:NEG:examples.SimpleMethods@abs(int):10:31 |==> -31
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
Loaded invs from previous step: 89
                                                                               [6:26:34 PM]:                                                                  [6:26:35 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:36 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:38 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:39 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:40 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:41 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:42 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:43 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:44 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:45 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:46 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:47 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:48 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:49 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:50 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:51 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:52 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:53 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:54 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:55 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:26:59 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:00 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:01 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 98,148 errors found in 573,132 samples (17.12%)
SimpleMethodsTesterDriver.inv.gz: 142 false positives, out of 366, which is 38.80%.
Preserving 69 new invariants to file /specfuzzer/invs_file.xml
                                                                               Already preserved invariants: 89
Saving - Total: 89
Saving mutants results file

- Mutation is: 20:EVR:<IDENTIFIER(int)>:<DEFAULT>:examples.SimpleMethods@abs(int):14:result |==> 0
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
Loaded invs from previous step: 89
                                                                               [6:27:07 PM]:                                                                  [6:27:08 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:09 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:10 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:11 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:12 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:13 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:14 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:16 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:17 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:19 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:20 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:21 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:22 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:23 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:24 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:25 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:26 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:27 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:28 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:29 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:30 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:32 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:33 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:34 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 102,690 errors found in 573,132 samples (17.92%)
SimpleMethodsTesterDriver.inv.gz: 144 false positives, out of 366, which is 39.34%.
                                                                               Preserving 71 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 89
Saving - Total: 89
Saving mutants results file

- Mutation is: 3:SOR:>>>(int,int):<<(int,int):examples.SimpleMethods@abs(int):10:x >>> 31 |==> x << 31
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m3.dtrace.gz
Loaded invs from previous step: 89
                                                                               [6:27:39 PM]:                                                                  [6:27:40 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:41 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:42 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:43 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:44 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:45 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:47 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:48 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:49 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:50 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:51 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:52 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:53 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:54 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:55 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:57 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:27:59 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:00 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:01 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:02 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:03 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:04 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:05 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:06 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 20,622 errors found in 573,132 samples (3.60%)
SimpleMethodsTesterDriver.inv.gz: 42 false positives, out of 366, which is 11.48%.
Preserving 20 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 89
Saving - Total: 89
Saving mutants results file

- Mutation is: 4:SOR:>>>(int,int):>>(int,int):examples.SimpleMethods@abs(int):10:x >>> 31 |==> x >> 31
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
Loaded invs from previous step: 89
                                                                               [6:28:11 PM]:                                                                  [6:28:12 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:13 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:14 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:15 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:16 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:17 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:19 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:20 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:21 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:22 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:23 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:24 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:25 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:26 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:27 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:28 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:29 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:30 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:31 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:32 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:33 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:34 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:35 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:36 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:38 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:39 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 35,274 errors found in 573,132 samples (6.15%)
SimpleMethodsTesterDriver.inv.gz: 124 false positives, out of 366, which is 33.88%.
Preserving 60 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 89
Saving - Total: 89
Saving mutants results file

- Mutation is: 5:ORU:~(int):+(int):examples.SimpleMethods@abs(int):11:~i |==> +i
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
Loaded invs from previous step: 89
                                                                               [6:28:44 PM]:                                                                  [6:28:45 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:46 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:47 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:50 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:52 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:53 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:57 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:28:59 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:00 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:01 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:02 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:03 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:04 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:05 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:06 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:07 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:08 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:09 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:10 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 113,558 errors found in 573,132 samples (19.81%)
SimpleMethodsTesterDriver.inv.gz: 184 false positives, out of 366, which is 50.27%.
Preserving 90 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 89
Saving - Total: 97
Saving mutants results file

- Mutation is: 6:ORU:~(int):-(int):examples.SimpleMethods@abs(int):11:~i |==> -i
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
Loaded invs from previous step: 97
                                                                               [6:29:16 PM]:                                                                  [6:29:17 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:19 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:20 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:21 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:22 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:23 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:25 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:26 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:27 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:28 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:29 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:30 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:31 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:32 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:33 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:34 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:35 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:36 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:37 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:38 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:39 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:40 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:41 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:42 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:43 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 81,846 errors found in 573,132 samples (14.28%)
SimpleMethodsTesterDriver.inv.gz: 182 false positives, out of 366, which is 49.73%.
Preserving 89 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 97
Saving - Total: 97
Saving mutants results file

- Mutation is: 7:LVR:POS:0:examples.SimpleMethods@abs(int):11:1 |==> 0
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
Loaded invs from previous step: 97
                                                                               [6:29:51 PM]:                                                                  [6:29:52 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:53 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:54 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:55 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:57 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:29:59 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:00 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:01 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:02 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:03 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:04 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:05 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:06 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:07 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:08 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:09 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:10 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:11 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:12 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:13 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:14 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:15 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:16 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:17 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 126,042 errors found in 573,132 samples (21.99%)
SimpleMethodsTesterDriver.inv.gz: 136 false positives, out of 366, which is 37.16%.
Preserving 66 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 97
Saving - Total: 97
Saving mutants results file

- Mutation is: 8:LVR:POS:NEG:examples.SimpleMethods@abs(int):11:1 |==> -1
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
Loaded invs from previous step: 97
                                                                               [6:30:30 PM]:                                                                  [6:30:31 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:32 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:33 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:34 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:35 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:36 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:37 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:38 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:39 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:40 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:41 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:42 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:43 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:44 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:46 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:47 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:48 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:49 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:50 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:51 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:52 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:53 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:54 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:55 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:56 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:57 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:30:58 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 126,042 errors found in 573,132 samples (21.99%)
SimpleMethodsTesterDriver.inv.gz: 134 false positives, out of 366, which is 36.61%.
Preserving 65 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 97
Saving - Total: 97
Saving mutants results file

- Mutation is: 9:AOR:+(int,int):%(int,int):examples.SimpleMethods@abs(int):11:~i + 1 |==> ~i % 1
Checking invs on mutant: experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Loaded invs from previous step: 97
                                                                               [6:31:06 PM]:                                                                  [6:31:07 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:08 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:09 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:10 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:11 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:12 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:13 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:14 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:15 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:16 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:17 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:18 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:19 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:20 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:21 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:22 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:23 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:24 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:25 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:26 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:27 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:28 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:29 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:30 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:31 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl[6:31:32 PM]: Reading experiments/simple-examples_abs/setup-files/mutants/Simpl
SimpleMethodsTesterDriver.inv.gz: 16,996 errors found in 573,132 samples (2.97%)
SimpleMethodsTesterDriver.inv.gz: 48 false positives, out of 366, which is 13.11%.
Preserving 23 new invariants to file /specfuzzer/invs_file.xml
Already preserved invariants: 97
Saving - Total: 97
Saving mutants results file

# Filtering step took minutes: 9
# Mutation killing ability results saved in: experiments/simple-examples_abs/output/SimpleMethods-abs-specfuzzer-1-invs-by-mutants.csv

# Writing assertions to file: experiments/simple-examples_abs/output/SimpleMethods-abs-specfuzzer-1.assertions

# Filtering specs with buckets
> Mutant filter from file: experiments/simple-examples_abs/output/SimpleMethods-abs-specfuzzer-1-invs-by-mutants.csv
Unique mutants: 18
Loading assertions from: experiments/simple-examples_abs/output/SimpleMethods-abs-specfuzzer-1.assertions
Specs killing mutants: 51

> Minimizing by exploring the bit vector of each spec
Building bit vectors of size: 18
Building buckets
=====================================
Buckets: 21
Vector: [1. 1. 1. 1. 1. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m3.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return l:  61  - Fails:  19876 Quality:  19877
	\result >= 0 l:  12  - Fails:  19876 Quality:  19876
	FuzzedInvariant ( (Integer_Variable_0 = 1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return> l:  102  - Fails:  16864 Quality:  16866
	FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return> l:  102  - Fails:  16446 Quality:  16448
Picked:
	FuzzedInvariant ( Integer_Variable_0 >= 0 ) holds for: return

Vector: [1. 1. 1. 1. 1. 0. 0. 1. 0. 1. 1. 0. 1. 1. 1. 1. 1. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(x), return> l:  89  - Fails:  22368 Quality:  22370
	FuzzedInvariant ( Integer_Variable_0 < Integer_Variable_1 + 1 ) holds for: <orig(x), return> l:  92  - Fails:  22368 Quality:  22370
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 0 ) holds for: <orig(x), return> l:  93  - Fails:  22368 Quality:  22370
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 * 1 ) holds for: <orig(x), return> l:  93  - Fails:  22368 Quality:  22370
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 / 1 ) holds for: <orig(x), return> l:  93  - Fails:  22368 Quality:  22370
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 - 0 ) holds for: <orig(x), return> l:  93  - Fails:  22368 Quality:  22370
	\result >= \old(x) l:  18  - Fails:  22368 Quality:  22368
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 = 1) ) holds for: <orig(x), return> l:  123  - Fails:  22290 Quality:  22292
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 > 1) ) holds for: <orig(x), return> l:  123  - Fails:  20846 Quality:  20848
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return> l:  120  - Fails:  20768 Quality:  20770
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return> l:  119  - Fails:  20768 Quality:  20770
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 ) holds for: <orig(x), return>

Vector: [1. 1. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return> l:  119  - Fails:  17730 Quality:  17732
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(x), return> l:  125  - Fails:  17730 Quality:  17732
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>

Vector: [1. 1. 1. 1. 1. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 1. 1. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <orig(x), return> l:  93  - Fails:  16144 Quality:  16146
Picked:
	FuzzedInvariant ( Integer_Variable_0 <= Integer_Variable_1 + 1 ) holds for: <orig(x), return>

Vector: [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m14.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m15.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m3.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > 0) ) holds for: <orig(x), return> l:  103  - Fails:  26470 Quality:  26472
	FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return> l:  101  - Fails:  25098 Quality:  25100
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 > 0) ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m14.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m15.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m3.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= 1) ) holds for: <orig(x), return> l:  107  - Fails:  10624 Quality:  10626
	FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return> l:  102  - Fails:  10624 Quality:  10626
	FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return> l:  103  - Fails:  10624 Quality:  10626
Picked:
	FuzzedInvariant ( (Integer_Variable_0 < 0) implies (Integer_Variable_1 >= 1) ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 1. 1. 1. 1. 0. 0. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m3.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return> l:  103  - Fails:  7410 Quality:  7412
Picked:
	FuzzedInvariant ( (Integer_Variable_0 >= 0) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>

Vector: [1. 1. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 1. 1. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return> l:  120  - Fails:  15330 Quality:  15332
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>

Vector: [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m14.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m15.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return> l:  118  - Fails:  26382 Quality:  26384
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 0) ) holds for: <orig(x), return> l:  120  - Fails:  1600 Quality:  1602
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 < 1) ) holds for: <orig(x), return> l:  123  - Fails:  1600 Quality:  1602
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 1) ) holds for: <orig(x), return> l:  120  - Fails:  1522 Quality:  1524
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 <= 0) ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 1. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m3.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <orig(x), return> l:  120  - Fails:  11584 Quality:  11586
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) xor (Integer_Variable_1 < 0) ) holds for: <orig(x), return>

Vector: [1. 1. 1. 1. 1. 0. 0. 1. 0. 1. 1. 0. 0. 1. 1. 1. 1. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= 0) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return> l:  102  - Fails:  14474 Quality:  14476
	FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return> l:  102  - Fails:  14474 Quality:  14476
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= 0) or (Integer_Variable_1 > 0) ) holds for: <orig(x), return>

Vector: [1. 1. 1. 1. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 1. 1. 1. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 > 0) ) holds for: <orig(x), return> l:  106  - Fails:  5522 Quality:  5524
	FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return> l:  103  - Fails:  5522 Quality:  5524
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = 1) implies (Integer_Variable_1 > 0) ) holds for: <orig(x), return>

Vector: [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m1.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <orig(x), return> l:  120  - Fails:  78 Quality:  80
Picked:
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 1) ) holds for: <orig(x), return>

Vector: [0. 1. 0. 1. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 1. 1. 0. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(x), return> l:  93  - Fails:  6224 Quality:  6226
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 1 ) holds for: <orig(x), return>

Vector: [0. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 0. 0. 1. 1. 1. 1. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m10.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m11.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m12.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m14.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m15.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m7.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m8.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 = 0) ) holds for: <orig(x), return> l:  103  - Fails:  13454 Quality:  13456
	FuzzedInvariant ( (Integer_Variable_0 != 0) iff (Integer_Variable_1 != 0) ) holds for: <orig(x), return> l:  104  - Fails:  13454 Quality:  13456
Picked:
	FuzzedInvariant ( (Integer_Variable_0 != 0) xor (Integer_Variable_1 = 0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 1. 1. 1. 1. 1. 0. 1. 0. 0. 1. 1. 0. 0. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m14.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m15.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return> l:  119  - Fails:  8652 Quality:  8654
	FuzzedInvariant ( (Integer_Variable_0 != 0) implies (Integer_Variable_1 != 0) ) holds for: <orig(x), return> l:  108  - Fails:  8652 Quality:  8654
	FuzzedInvariant ( (Integer_Variable_0 >= Integer_Variable_1) or (Integer_Variable_1 >= 1) ) holds for: <orig(x), return> l:  120  - Fails:  5614 Quality:  5616
	FuzzedInvariant ( (Integer_Variable_0 < Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <orig(x), return> l:  124  - Fails:  3214 Quality:  3216
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 1. 1. 0. 1. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m14.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m9.dtrace.gz
Specs:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <orig(x), return> l:  93  - Fails:  6132 Quality:  6134
Picked:
	FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 - 1 ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m13.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m16.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m20.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <orig(x), return> l:  124  - Fails:  5438 Quality:  5440
	FuzzedInvariant ( (Integer_Variable_0 < 1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return> l:  102  - Fails:  5438 Quality:  5440
	FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return> l:  120  - Fails:  5438 Quality:  5440
	FuzzedInvariant ( (Integer_Variable_0 != 1) or (Integer_Variable_1 != 0) ) holds for: <orig(x), return> l:  103  - Fails:  2510 Quality:  2512
Picked:
	FuzzedInvariant ( (Integer_Variable_0 > Integer_Variable_1) implies (Integer_Variable_1 != 0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 1. 0. 0. 0. 0. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m17.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m2.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m3.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m4.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(x), return> l:  124  - Fails:  2146 Quality:  2148
	FuzzedInvariant ( (Integer_Variable_0 != Integer_Variable_1) or (Integer_Variable_1 >= 0) ) holds for: <orig(x), return> l:  120  - Fails:  2146 Quality:  2148
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = Integer_Variable_1) implies (Integer_Variable_1 >= 0) ) holds for: <orig(x), return>

Vector: [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.]
Mutants:
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m5.dtrace.gz
	experiments/simple-examples_abs/setup-files/mutants/SimpleMethodsTesterDriver-m6.dtrace.gz
Specs:
	FuzzedInvariant ( (Integer_Variable_0 = 0) implies (Integer_Variable_1 <= 0) ) holds for: <orig(x), return> l:  107  - Fails:  1372 Quality:  1374
	FuzzedInvariant ( (Integer_Variable_0 != 0) or (Integer_Variable_1 <= 0) ) holds for: <orig(x), return> l:  103  - Fails:  1372 Quality:  1374
Picked:
	FuzzedInvariant ( (Integer_Variable_0 = 0) implies (Integer_Variable_1 <= 0) ) holds for: <orig(x), return>

Buckets: 21
Specs: 21
Saved in file: experiments/simple-examples_abs/output/SimpleMethods-abs-specfuzzer-1-buckets.assertions

